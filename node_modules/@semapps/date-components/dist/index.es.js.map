{"version":3,"file":"index.es.js","sources":["../src/utils.js","../src/Picker.js","../src/useFullCalendarProps.js","../src/CalendarList.js","../src/DaysList.js","../src/index.js"],"sourcesContent":["const leftPad = (nb = 2) => value => ('0'.repeat(nb) + value).slice(-nb);\nconst leftPad4 = leftPad(4);\nconst leftPad2 = leftPad(2);\n\n// yyyy-MM-ddThh:mm\nconst dateTimeRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/;\n\n/**\n * @param {Date} value value to convert\n * @returns {String} A standardized datetime (yyyy-MM-ddThh:mm), to be passed to an <input type=\"datetime-local\" />\n */\nconst convertDateToString = value => {\n  if (!(value instanceof Date) || isNaN(value.getDate())) {\n    return '';\n  }\n\n  const yy = leftPad4(value.getFullYear());\n  const MM = leftPad2(value.getMonth() + 1);\n  const dd = leftPad2(value.getDate());\n  const hh = leftPad2(value.getHours());\n  const mm = leftPad2(value.getMinutes());\n  return `${yy}-${MM}-${dd}T${hh}:${mm}`;\n};\n\n/**\n * Converts a date from the Redux store, with timezone, to a date string\n * without timezone for use in an <input type=\"datetime-local\" />.\n *\n * @param {Date | String} value date string or object\n */\nexport const dateTimeFormatter = value => {\n  // null, undefined and empty string values should not go through convertDateToString\n  // otherwise, it returns undefined and will make the input an uncontrolled one.\n  if (value == null || value === '') {\n    return '';\n  }\n\n  if (value instanceof Date) {\n    return convertDateToString(value);\n  }\n\n  // valid dates should not be converted\n  if (dateTimeRegex.test(value)) {\n    return value;\n  }\n\n  return convertDateToString(new Date(value));\n};\n\n/**\n * Converts a datetime string without timezone to a date object\n * with timezone, using the browser timezone.\n *\n * @param {String} value Date string, formatted as yyyy-MM-ddThh:mm\n * @return {Date}\n */\nexport const dateTimeParser = value => (value ? new Date(value) : '');\n","import React, { useCallback } from 'react';\nimport { useInput, useTranslate, FieldTitle, InputHelperText } from 'react-admin';\nimport { IconButton } from '@material-ui/core';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { dateTimeFormatter, dateTimeParser } from './utils';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst sanitizeRestProps = ({\n  allowEmpty,\n  alwaysOn,\n  basePath,\n  component,\n  defaultValue,\n  format,\n  formClassName,\n  initialValue,\n  initializeForm,\n  input,\n  isRequired,\n  label,\n  limitChoicesToValue,\n  locale,\n  meta,\n  options,\n  optionText,\n  optionValue,\n  parse,\n  record,\n  resource,\n  source,\n  textAlign,\n  translate,\n  translateChoice,\n  labelTime,\n  ...rest\n}) => rest;\n\nconst Picker = ({\n  PickerComponent,\n  format = dateTimeFormatter,\n  label,\n  options,\n  source,\n  resource,\n  helperText,\n  margin = 'dense',\n  onBlur,\n  onChange,\n  onFocus,\n  parse = dateTimeParser,\n  validate,\n  variant = 'filled',\n  defaultValue,\n  providerOptions: { utils, locale },\n  pickerVariant = 'dialog',\n  stringFormat = 'ISO',\n  allowClear,\n  ...rest\n}) => {\n  const translate = useTranslate();\n  const {\n    id,\n    input,\n    isRequired,\n    meta: { error, touched }\n  } = useInput({\n    format,\n    onBlur,\n    onChange,\n    onFocus,\n    parse,\n    resource,\n    source,\n    validate,\n    /* type: 'datetime-local', */\n    ...rest\n  });\n\n  const handleChange = useCallback(value => {\n    Date.parse(value)\n      ? input.onChange(stringFormat === 'ISO' ? value.toISOString() : value.toString())\n      : input.onChange(null);\n  }, []);\n\n  const handleClear = useCallback(e => {\n    e.stopPropagation();\n    input.onChange(null);\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={utils || DateFnsUtils} locale={locale}>\n      <PickerComponent\n        id={id}\n        InputLabelProps={{\n          shrink: true\n        }}\n        InputProps={{\n          endAdornment: allowClear ? (\n            <IconButton onClick={handleClear}>\n              <ClearIcon />\n            </IconButton>\n          ) : (\n            undefined\n          )\n        }}\n        label={<FieldTitle label={label} source={source} resource={resource} isRequired={isRequired} />}\n        variant={pickerVariant}\n        inputVariant={variant}\n        margin={margin}\n        error={!!(touched && error)}\n        helperText={<InputHelperText touched={touched} error={error} helperText={helperText} />}\n        clearLabel={translate('ra.action.clear_input_value')}\n        cancelLabel={translate('ra.action.cancel')}\n        {...options}\n        {...sanitizeRestProps(rest)}\n        value={input.value ? new Date(input.value) : null}\n        onChange={handleChange}\n        onBlur={() =>\n          input.onBlur(\n            input.value\n              ? stringFormat === 'ISO'\n                ? new Date(input.value).toISOString()\n                : new Date(input.value).toString()\n              : null\n          )\n        }\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\n\nPicker.defaultProps = {\n  isRequired: false,\n  meta: { touched: false, error: false },\n  options: {},\n  providerOptions: {\n    utils: DateFnsUtils,\n    locale: undefined\n  },\n  // Avoid saving an empty string in the dataset\n  parse: value => (value === '' ? null : value)\n};\n\nexport default Picker;\n","import React, { useMemo, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useListContext, linkToRecord } from 'react-admin';\n\nconst useFullCalendarProps = ({ label, startDate, endDate, linkType }) => {\n  const history = useHistory();\n  const { ids, data, basePath } = useListContext();\n\n  let query = new URLSearchParams(history.location.search);\n\n  // Bypass the link in order to use React-Router\n  const eventClick = useCallback(({ event, jsEvent }) => {\n    jsEvent.preventDefault();\n    history.push(event.url);\n  }, []);\n\n  // Change the query string when month change\n  const datesSet = useCallback(\n    ({ view }) => {\n      query.set('month', view.currentStart.getMonth() + 1);\n      query.set('year', view.currentStart.getFullYear());\n      history.replace({ pathname: history.location.pathname, search: '?' + query.toString() });\n    },\n    [query]\n  );\n\n  const events = useMemo(\n    () =>\n      ids\n        .filter(id => data[id])\n        .map(id => ({\n          id,\n          title: typeof label === 'string' ? data[id][label] : label(data[id]),\n          start: typeof startDate === 'string' ? data[id][startDate] : startDate(data[id]),\n          end: typeof endDate === 'string' ? data[id][endDate] : endDate(data[id]),\n          url: linkToRecord(basePath, id) + '/' + linkType\n        })),\n    [data, ids, basePath]\n  );\n\n  return {\n    initialDate: query.has('month') ? new Date(query.get('year'), query.get('month') - 1) : new Date(),\n    events,\n    datesSet,\n    eventClick\n  };\n};\n\nexport default useFullCalendarProps;\n","import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { useTheme, makeStyles } from '@material-ui/core';\nimport useFullCalendarProps from './useFullCalendarProps';\n\nconst useGlobalStyles = makeStyles(theme => ({\n  '@global': {\n    '.fc-button': {\n      backgroundColor: theme.palette.primary.main + ' !important',\n      border: 'none !important',\n      opacity: '1 !important'\n    },\n    '.fc-day-today': {\n      backgroundColor: theme.palette.secondary.light + ' !important'\n    },\n    // Overwrite violet color of links\n    'a.fc-daygrid-dot-event': {\n      color: 'black !important'\n    }\n  }\n}));\n\nconst CalendarList = props => {\n  const theme = useTheme();\n  const fullCalendarProps = useFullCalendarProps(props);\n  useGlobalStyles();\n\n  return (\n    <FullCalendar\n      plugins={[dayGridPlugin]}\n      locale={props.locale}\n      initialView=\"dayGridMonth\"\n      eventBackgroundColor={theme.palette.primary.main}\n      {...fullCalendarProps}\n    />\n  );\n};\n\nCalendarList.defaultProps = {\n  linkType: 'edit'\n};\n\nexport default CalendarList;\n","import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport listPlugin from '@fullcalendar/list';\nimport { makeStyles } from '@material-ui/core';\nimport useFullCalendarProps from './useFullCalendarProps';\n\nconst useGlobalStyles = makeStyles(theme => ({\n  '@global': {\n    '.fc-button': {\n      backgroundColor: theme.palette.primary.main + ' !important',\n      border: 'none !important',\n      opacity: '1 !important'\n    }\n  }\n}));\n\nconst DaysList = props => {\n  const fullCalendarProps = useFullCalendarProps(props);\n  useGlobalStyles();\n\n  return <FullCalendar plugins={[listPlugin]} locale={props.locale} initialView=\"listMonth\" {...fullCalendarProps} />;\n};\n\nDaysList.defaultProps = {\n  linkType: 'edit'\n};\n\nexport default DaysList;\n","import React from 'react';\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  KeyboardDatePicker,\n  KeyboardDateTimePicker,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\nimport Picker from './Picker';\n\nconst DateInput = props => <Picker PickerComponent={DatePicker} {...props} />;\nconst TimeInput = props => <Picker PickerComponent={TimePicker} {...props} />;\nconst DateTimeInput = props => <Picker PickerComponent={DateTimePicker} {...props} />;\nconst KeyboardDateInput = props => <Picker PickerComponent={KeyboardDatePicker} {...props} />;\nconst KeyboardDateTimeInput = props => <Picker PickerComponent={KeyboardDateTimePicker} {...props} />;\nconst KeyboardTimeInput = props => <Picker PickerComponent={KeyboardTimePicker} {...props} />;\n\nexport { DateInput, TimeInput, DateTimeInput, KeyboardDateInput, KeyboardDateTimeInput, KeyboardTimeInput };\n\nexport { default as CalendarList } from './CalendarList';\nexport { default as DaysList } from './DaysList';\nexport { default as useFullCalendarProps } from './useFullCalendarProps';\n"],"names":["leftPad","nb","value","repeat","slice","leftPad4","leftPad2","dateTimeRegex","convertDateToString","Date","isNaN","getDate","yy","getFullYear","MM","getMonth","dd","hh","getHours","mm","getMinutes","concat","dateTimeFormatter","test","dateTimeParser","Picker","_ref2","PickerComponent","_ref2$format","format","label","options","source","resource","helperText","_ref2$margin","margin","onBlur","onChange","onFocus","_ref2$parse","parse","validate","_ref2$variant","variant","defaultValue","_ref","_ref2$providerOptions","providerOptions","utils","locale","_ref2$pickerVariant","pickerVariant","_ref2$stringFormat","stringFormat","allowClear","rest","_objectWithoutProperties","_excluded2","translate","useTranslate","_useInput","useInput","_objectSpread","id","input","isRequired","_useInput$meta","meta","error","touched","handleChange","useCallback","toISOString","toString","handleClear","e","stopPropagation","React","MuiPickersUtilsProvider","DateFnsUtils","_extends","InputLabelProps","shrink","InputProps","endAdornment","createElement","IconButton","onClick","ClearIcon","undefined","FieldTitle","inputVariant","InputHelperText","clearLabel","cancelLabel","allowEmpty","alwaysOn","basePath","component","formClassName","initialValue","initializeForm","limitChoicesToValue","optionText","optionValue","record","textAlign","translateChoice","labelTime","_excluded","defaultProps","useFullCalendarProps","startDate","endDate","linkType","history","useHistory","_useListContext","useListContext","ids","data","query","URLSearchParams","location","search","eventClick","event","jsEvent","preventDefault","push","url","datesSet","_ref3","view","set","currentStart","replace","pathname","events","useMemo","filter","map","title","start","end","linkToRecord","initialDate","has","get","useGlobalStyles","makeStyles","theme","@global",".fc-button","backgroundColor","palette","primary","main","border","opacity",".fc-day-today","secondary","light","a.fc-daygrid-dot-event","color","CalendarList","props","useTheme","fullCalendarProps","FullCalendar","plugins","dayGridPlugin","initialView","eventBackgroundColor","DaysList","listPlugin","DateInput","DatePicker","TimeInput","TimePicker","DateTimeInput","DateTimePicker","KeyboardDateInput","KeyboardDatePicker","KeyboardDateTimeInput","KeyboardDateTimePicker","KeyboardTimeInput","KeyboardTimePicker"],"mappings":"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"}