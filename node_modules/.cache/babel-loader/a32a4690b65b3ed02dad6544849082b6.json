{"ast":null,"code":"import e from \"jsonld\";\nimport t from \"speakingurl\";\nimport r, { triple as n, variable as o, namedNode as a } from \"@rdfjs/data-model\";\nimport i from \"crypto\";\nimport { fetchUtils as c, DataProviderContext as s, useQueryWithStore as u, ArrayInput as l, SimpleFormIterator as f, TextInput as p } from \"react-admin\";\nimport d, { useContext as h, useMemo as y, useCallback as v, useState as g, useEffect as m } from \"react\";\nimport { makeStyles as b } from \"@material-ui/core/styles\";\nfunction w(e, t) {\n  var r = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    t && (n = n.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), r.push.apply(r, n);\n  }\n  return r;\n}\nfunction x(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var r = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? w(Object(r), !0).forEach(function (t) {\n      E(e, t, r[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : w(Object(r)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n    });\n  }\n  return e;\n}\nfunction k() {\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  k = function k() {\n    return e;\n  };\n  var e = {},\n    t = Object.prototype,\n    r = t.hasOwnProperty,\n    n = \"function\" == typeof Symbol ? Symbol : {},\n    o = n.iterator || \"@@iterator\",\n    a = n.asyncIterator || \"@@asyncIterator\",\n    i = n.toStringTag || \"@@toStringTag\";\n  function c(e, t, r) {\n    return Object.defineProperty(e, t, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), e[t];\n  }\n  try {\n    c({}, \"\");\n  } catch (e) {\n    c = function c(e, t, r) {\n      return e[t] = r;\n    };\n  }\n  function s(e, t, r, n) {\n    var o = t && t.prototype instanceof f ? t : f,\n      a = Object.create(o.prototype),\n      i = new O(n || []);\n    return a._invoke = function (e, t, r) {\n      var n = \"suspendedStart\";\n      return function (o, a) {\n        if (\"executing\" === n) throw new Error(\"Generator is already running\");\n        if (\"completed\" === n) {\n          if (\"throw\" === o) throw a;\n          return E();\n        }\n        for (r.method = o, r.arg = a;;) {\n          var i = r.delegate;\n          if (i) {\n            var c = w(i, r);\n            if (c) {\n              if (c === l) continue;\n              return c;\n            }\n          }\n          if (\"next\" === r.method) r.sent = r._sent = r.arg;else if (\"throw\" === r.method) {\n            if (\"suspendedStart\" === n) throw n = \"completed\", r.arg;\n            r.dispatchException(r.arg);\n          } else \"return\" === r.method && r.abrupt(\"return\", r.arg);\n          n = \"executing\";\n          var s = u(e, t, r);\n          if (\"normal\" === s.type) {\n            if (n = r.done ? \"completed\" : \"suspendedYield\", s.arg === l) continue;\n            return {\n              value: s.arg,\n              done: r.done\n            };\n          }\n          \"throw\" === s.type && (n = \"completed\", r.method = \"throw\", r.arg = s.arg);\n        }\n      };\n    }(e, r, i), a;\n  }\n  function u(e, t, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: e.call(t, r)\n      };\n    } catch (e) {\n      return {\n        type: \"throw\",\n        arg: e\n      };\n    }\n  }\n  e.wrap = s;\n  var l = {};\n  function f() {}\n  function p() {}\n  function d() {}\n  var h = {};\n  c(h, o, function () {\n    return this;\n  });\n  var y = Object.getPrototypeOf,\n    v = y && y(y(j([])));\n  v && v !== t && r.call(v, o) && (h = v);\n  var g = d.prototype = f.prototype = Object.create(h);\n  function m(e) {\n    [\"next\", \"throw\", \"return\"].forEach(function (t) {\n      c(e, t, function (e) {\n        return this._invoke(t, e);\n      });\n    });\n  }\n  function b(e, t) {\n    var n;\n    this._invoke = function (o, a) {\n      function i() {\n        return new t(function (n, i) {\n          !function n(o, a, i, c) {\n            var s = u(e[o], e, a);\n            if (\"throw\" !== s.type) {\n              var l = s.arg,\n                f = l.value;\n              return f && \"object\" == typeof f && r.call(f, \"__await\") ? t.resolve(f.__await).then(function (e) {\n                n(\"next\", e, i, c);\n              }, function (e) {\n                n(\"throw\", e, i, c);\n              }) : t.resolve(f).then(function (e) {\n                l.value = e, i(l);\n              }, function (e) {\n                return n(\"throw\", e, i, c);\n              });\n            }\n            c(s.arg);\n          }(o, a, n, i);\n        });\n      }\n      return n = n ? n.then(i, i) : i();\n    };\n  }\n  function w(e, t) {\n    var r = e.iterator[t.method];\n    if (void 0 === r) {\n      if (t.delegate = null, \"throw\" === t.method) {\n        if (e.iterator.return && (t.method = \"return\", t.arg = void 0, w(e, t), \"throw\" === t.method)) return l;\n        t.method = \"throw\", t.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return l;\n    }\n    var n = u(r, e.iterator, t.arg);\n    if (\"throw\" === n.type) return t.method = \"throw\", t.arg = n.arg, t.delegate = null, l;\n    var o = n.arg;\n    return o ? o.done ? (t[e.resultName] = o.value, t.next = e.nextLoc, \"return\" !== t.method && (t.method = \"next\", t.arg = void 0), t.delegate = null, l) : o : (t.method = \"throw\", t.arg = new TypeError(\"iterator result is not an object\"), t.delegate = null, l);\n  }\n  function x(e) {\n    var t = {\n      tryLoc: e[0]\n    };\n    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t);\n  }\n  function S(e) {\n    var t = e.completion || {};\n    t.type = \"normal\", delete t.arg, e.completion = t;\n  }\n  function O(e) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], e.forEach(x, this), this.reset(!0);\n  }\n  function j(e) {\n    if (e) {\n      var t = e[o];\n      if (t) return t.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var n = -1,\n          a = function t() {\n            for (; ++n < e.length;) if (r.call(e, n)) return t.value = e[n], t.done = !1, t;\n            return t.value = void 0, t.done = !0, t;\n          };\n        return a.next = a;\n      }\n    }\n    return {\n      next: E\n    };\n  }\n  function E() {\n    return {\n      value: void 0,\n      done: !0\n    };\n  }\n  return p.prototype = d, c(g, \"constructor\", d), c(d, \"constructor\", p), p.displayName = c(d, i, \"GeneratorFunction\"), e.isGeneratorFunction = function (e) {\n    var t = \"function\" == typeof e && e.constructor;\n    return !!t && (t === p || \"GeneratorFunction\" === (t.displayName || t.name));\n  }, e.mark = function (e) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(e, d) : (e.__proto__ = d, c(e, i, \"GeneratorFunction\")), e.prototype = Object.create(g), e;\n  }, e.awrap = function (e) {\n    return {\n      __await: e\n    };\n  }, m(b.prototype), c(b.prototype, a, function () {\n    return this;\n  }), e.AsyncIterator = b, e.async = function (t, r, n, o, a) {\n    void 0 === a && (a = Promise);\n    var i = new b(s(t, r, n, o), a);\n    return e.isGeneratorFunction(r) ? i : i.next().then(function (e) {\n      return e.done ? e.value : i.next();\n    });\n  }, m(g), c(g, i, \"Generator\"), c(g, o, function () {\n    return this;\n  }), c(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (e) {\n    var t = [];\n    for (var r in e) t.push(r);\n    return t.reverse(), function r() {\n      for (; t.length;) {\n        var n = t.pop();\n        if (n in e) return r.value = n, r.done = !1, r;\n      }\n      return r.done = !0, r;\n    };\n  }, e.values = j, O.prototype = {\n    constructor: O,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = void 0, this.tryEntries.forEach(S), !e) for (var t in this) \"t\" === t.charAt(0) && r.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var e = this.tryEntries[0].completion;\n      if (\"throw\" === e.type) throw e.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var t = this;\n      function n(r, n) {\n        return i.type = \"throw\", i.arg = e, t.next = r, n && (t.method = \"next\", t.arg = void 0), !!n;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var a = this.tryEntries[o],\n          i = a.completion;\n        if (\"root\" === a.tryLoc) return n(\"end\");\n        if (a.tryLoc <= this.prev) {\n          var c = r.call(a, \"catchLoc\"),\n            s = r.call(a, \"finallyLoc\");\n          if (c && s) {\n            if (this.prev < a.catchLoc) return n(a.catchLoc, !0);\n            if (this.prev < a.finallyLoc) return n(a.finallyLoc);\n          } else if (c) {\n            if (this.prev < a.catchLoc) return n(a.catchLoc, !0);\n          } else {\n            if (!s) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < a.finallyLoc) return n(a.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(e, t) {\n      for (var n = this.tryEntries.length - 1; n >= 0; --n) {\n        var o = this.tryEntries[n];\n        if (o.tryLoc <= this.prev && r.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var a = o;\n          break;\n        }\n      }\n      a && (\"break\" === e || \"continue\" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);\n      var i = a ? a.completion : {};\n      return i.type = e, i.arg = t, a ? (this.method = \"next\", this.next = a.finallyLoc, l) : this.complete(i);\n    },\n    complete: function complete(e, t) {\n      if (\"throw\" === e.type) throw e.arg;\n      return \"break\" === e.type || \"continue\" === e.type ? this.next = e.arg : \"return\" === e.type ? (this.rval = this.arg = e.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === e.type && t && (this.next = t), l;\n    },\n    finish: function finish(e) {\n      for (var t = this.tryEntries.length - 1; t >= 0; --t) {\n        var r = this.tryEntries[t];\n        if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), S(r), l;\n      }\n    },\n    catch: function _catch(e) {\n      for (var t = this.tryEntries.length - 1; t >= 0; --t) {\n        var r = this.tryEntries[t];\n        if (r.tryLoc === e) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            S(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, t, r) {\n      return this.delegate = {\n        iterator: j(e),\n        resultName: t,\n        nextLoc: r\n      }, \"next\" === this.method && (this.arg = void 0), l;\n    }\n  }, e;\n}\nfunction S(e) {\n  return (S = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  })(e);\n}\nfunction O(e, t, r, n, o, a, i) {\n  try {\n    var c = e[a](i),\n      s = c.value;\n  } catch (e) {\n    return void r(e);\n  }\n  c.done ? t(s) : Promise.resolve(s).then(n, o);\n}\nfunction j(e) {\n  return function () {\n    var t = this,\n      r = arguments;\n    return new Promise(function (n, o) {\n      var a = e.apply(t, r);\n      function i(e) {\n        O(a, n, o, i, c, \"next\", e);\n      }\n      function c(e) {\n        O(a, n, o, i, c, \"throw\", e);\n      }\n      i(void 0);\n    });\n  };\n}\nfunction E(e, t, r) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: r,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = r, e;\n}\nfunction A() {\n  return (A = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = arguments[t];\n      for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);\n    }\n    return e;\n  }).apply(this, arguments);\n}\nfunction C(e, t) {\n  if (null == e) return {};\n  var r,\n    n,\n    o = function (e, t) {\n      if (null == e) return {};\n      var r,\n        n,\n        o = {},\n        a = Object.keys(e);\n      for (n = 0; n < a.length; n++) r = a[n], t.indexOf(r) >= 0 || (o[r] = e[r]);\n      return o;\n    }(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var a = Object.getOwnPropertySymbols(e);\n    for (n = 0; n < a.length; n++) r = a[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);\n  }\n  return o;\n}\nfunction _(e, t) {\n  return function (e) {\n    if (Array.isArray(e)) return e;\n  }(e) || function (e, t) {\n    var r = null == e ? null : \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n    if (null == r) return;\n    var n,\n      o,\n      a = [],\n      i = !0,\n      c = !1;\n    try {\n      for (r = r.call(e); !(i = (n = r.next()).done) && (a.push(n.value), !t || a.length !== t); i = !0);\n    } catch (e) {\n      c = !0, o = e;\n    } finally {\n      try {\n        i || null == r.return || r.return();\n      } finally {\n        if (c) throw o;\n      }\n    }\n    return a;\n  }(e, t) || L(e, t) || function () {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction P(e) {\n  return function (e) {\n    if (Array.isArray(e)) return T(e);\n  }(e) || function (e) {\n    if (\"undefined\" != typeof Symbol && null != e[Symbol.iterator] || null != e[\"@@iterator\"]) return Array.from(e);\n  }(e) || L(e) || function () {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction L(e, t) {\n  if (e) {\n    if (\"string\" == typeof e) return T(e, t);\n    var r = Object.prototype.toString.call(e).slice(8, -1);\n    return \"Object\" === r && e.constructor && (r = e.constructor.name), \"Map\" === r || \"Set\" === r ? Array.from(e) : \"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? T(e, t) : void 0;\n  }\n}\nfunction T(e, t) {\n  (null == t || t > e.length) && (t = e.length);\n  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];\n  return n;\n}\nfunction N(e, t) {\n  var r = \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (!r) {\n    if (Array.isArray(e) || (r = L(e)) || t && e && \"number\" == typeof e.length) {\n      r && (e = r);\n      var _n = 0,\n        o = function o() {};\n      return {\n        s: o,\n        n: function n() {\n          return _n >= e.length ? {\n            done: !0\n          } : {\n            done: !1,\n            value: e[_n++]\n          };\n        },\n        e: function e(_e2) {\n          throw _e2;\n        },\n        f: o\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var a,\n    i = !0,\n    c = !1;\n  return {\n    s: function s() {\n      r = r.call(e);\n    },\n    n: function n() {\n      var e = r.next();\n      return i = e.done, e;\n    },\n    e: function e(_e3) {\n      c = !0, a = _e3;\n    },\n    f: function f() {\n      try {\n        i || null == r.return || r.return();\n      } finally {\n        if (c) throw a;\n      }\n    }\n  };\n}\nvar U = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : {};\nfunction q(e, t) {\n  return e(t = {\n    exports: {}\n  }, t.exports), t.exports;\n}\nvar I = q(function (e) {\n    var t, r;\n    t = U, r = function r() {\n      function e(e) {\n        var t = [];\n        if (0 === e.length) return \"\";\n        if (\"string\" != typeof e[0]) throw new TypeError(\"Url must be a string. Received \" + e[0]);\n        if (e[0].match(/^[^/:]+:\\/*$/) && e.length > 1) {\n          var r = e.shift();\n          e[0] = r + e[0];\n        }\n        e[0].match(/^file:\\/\\/\\//) ? e[0] = e[0].replace(/^([^/:]+):\\/*/, \"$1:///\") : e[0] = e[0].replace(/^([^/:]+):\\/*/, \"$1://\");\n        for (var n = 0; n < e.length; n++) {\n          var o = e[n];\n          if (\"string\" != typeof o) throw new TypeError(\"Url must be a string. Received \" + o);\n          \"\" !== o && (n > 0 && (o = o.replace(/^[\\/]+/, \"\")), o = n < e.length - 1 ? o.replace(/[\\/]+$/, \"\") : o.replace(/[\\/]+$/, \"/\"), t.push(o));\n        }\n        var a = t.join(\"/\"),\n          i = (a = a.replace(/\\/(\\?|&|#[^!])/g, \"$1\")).split(\"?\");\n        return a = i.shift() + (i.length > 0 ? \"?\" : \"\") + i.join(\"&\");\n      }\n      return function () {\n        return e(\"object\" == typeof arguments[0] ? arguments[0] : [].slice.call(arguments));\n      };\n    }, e.exports ? e.exports = r() : t.urljoin = r();\n  }),\n  M = function () {\n    var t = j(k().mark(function t(r, n) {\n      var o, a, i, c;\n      return k().wrap(function (t) {\n        for (;;) switch (t.prev = t.next) {\n          case 0:\n            return o = n.httpClient, a = n.jsonContext, t.next = 3, o(r);\n          case 3:\n            if (i = t.sent, (c = i.json).id = c.id || c[\"@id\"], c[\"@context\"] === a) {\n              t.next = 10;\n              break;\n            }\n            return t.next = 9, e.compact(c, a);\n          case 9:\n            c = t.sent;\n          case 10:\n            return t.abrupt(\"return\", c);\n          case 11:\n          case \"end\":\n            return t.stop();\n        }\n      }, t);\n    }));\n    return function (e, r) {\n      return t.apply(this, arguments);\n    };\n  }(),\n  B = function B(e) {\n    return function () {\n      var t = j(k().mark(function t(r, n) {\n        var o, a, i, c, s, u, l, f;\n        return k().wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              if (a = e.resources, i = a[r]) {\n                t.next = 4;\n                break;\n              }\n              throw new Error(\"Resource \".concat(r, \" is not mapped in resources file\"));\n            case 4:\n              return t.next = 6, M(n.id, e);\n            case 6:\n              if (c = t.sent, null !== (o = i.list) && void 0 !== o && o.forceArray) {\n                u = N(null === (s = i.list) || void 0 === s ? void 0 : s.forceArray);\n                try {\n                  for (u.s(); !(l = u.n()).done;) f = l.value, c[f] && !Array.isArray(c[f]) && (c[f] = [c[f]]);\n                } catch (e) {\n                  u.e(e);\n                } finally {\n                  u.f();\n                }\n              }\n              return t.abrupt(\"return\", {\n                data: c\n              });\n            case 9:\n            case \"end\":\n              return t.stop();\n          }\n        }, t);\n      }));\n      return function (e, r) {\n        return t.apply(this, arguments);\n      };\n    }();\n  },\n  D = function D(e) {\n    return e && e.rawFile && e.rawFile instanceof File;\n  },\n  R = function R(e) {\n    var t = Object.keys(e.dataServers).find(function (t) {\n      return e.dataServers[t].uploadsContainer;\n    });\n    if (t) return I(e.dataServers[t].baseUrl, e.dataServers[t].uploadsContainer);\n  },\n  F = function () {\n    var e = j(k().mark(function e(r, n) {\n      var o, a;\n      return k().wrap(function (e) {\n        for (;;) switch (e.prev = e.next) {\n          case 0:\n            if (o = R(n)) {\n              e.next = 3;\n              break;\n            }\n            throw new Error(\"You must define an uploadsContainer in one of the server's configuration\");\n          case 3:\n            return console.log(\"upload raw file\", S(r), r), e.next = 6, n.httpClient(o, {\n              method: \"POST\",\n              body: r,\n              headers: new Headers({\n                Slug: (i = r.name, c = void 0, s = void 0, c = \"\", s = i.split(\".\"), s.length > 1 && (c = s.pop(), i = s.join(\".\")), t(i, {\n                  lang: \"fr\"\n                }) + \".\" + c),\n                \"Content-Type\": r.type\n              })\n            });\n          case 6:\n            if (201 !== (a = e.sent).status) {\n              e.next = 9;\n              break;\n            }\n            return e.abrupt(\"return\", a.headers.get(\"Location\"));\n          case 9:\n          case \"end\":\n            return e.stop();\n        }\n        var i, c, s;\n      }, e);\n    }));\n    return function (t, r) {\n      return e.apply(this, arguments);\n    };\n  }(),\n  H = function () {\n    var e = j(k().mark(function e(t, r) {\n      var n, o;\n      return k().wrap(function (e) {\n        for (;;) switch (e.prev = e.next) {\n          case 0:\n            e.t0 = k().keys(t);\n          case 1:\n            if ((e.t1 = e.t0()).done) {\n              e.next = 22;\n              break;\n            }\n            if (n = e.t1.value, !t.hasOwnProperty(n)) {\n              e.next = 20;\n              break;\n            }\n            if (!Array.isArray(t[n])) {\n              e.next = 16;\n              break;\n            }\n            o = 0;\n          case 6:\n            if (!(o < t[n].length)) {\n              e.next = 14;\n              break;\n            }\n            if (!D(t[n][o])) {\n              e.next = 11;\n              break;\n            }\n            return e.next = 10, F(t[n][o].rawFile, r);\n          case 10:\n            t[n][o] = e.sent;\n          case 11:\n            o++, e.next = 6;\n            break;\n          case 14:\n            e.next = 20;\n            break;\n          case 16:\n            if (!D(t[n])) {\n              e.next = 20;\n              break;\n            }\n            return e.next = 19, F(t[n].rawFile, r);\n          case 19:\n            t[n] = e.sent;\n          case 20:\n            e.next = 1;\n            break;\n          case 22:\n            return e.abrupt(\"return\", t);\n          case 23:\n          case \"end\":\n            return e.stop();\n        }\n      }, e);\n    }));\n    return function (t, r) {\n      return e.apply(this, arguments);\n    };\n  }(),\n  W = function W(e, t) {\n    return Object.keys(t).find(function (r) {\n      return t[r][e];\n    });\n  },\n  G = function G(e, t) {\n    switch (e) {\n      case \"@default\":\n        return W(\"default\", t);\n      case \"@pod\":\n        return W(\"pod\", t);\n      case \"@authServer\":\n        return W(\"authServer\", t);\n      default:\n        return e;\n    }\n  },\n  z = function z(e, t, r) {\n    var n = {},\n      o = [];\n    return t = function (e, t) {\n      if (Array.isArray(e)) return e.includes(\"@all\") ? Object.keys(t) : e.map(function (e) {\n        return G(e, t);\n      });\n      if (\"string\" == typeof e) {\n        if (\"@all\" === e) return Object.keys(t);\n        if (\"@remote\" === e) {\n          var r = W(\"default\", t);\n          return Object.keys(t).filter(function (e) {\n            return e !== r;\n          });\n        }\n        return [G(e, t)];\n      }\n      return !1;\n    }(t, r), Object.keys(r).forEach(function (a) {\n      Object.keys(r[a].containers).forEach(function (i) {\n        t && !t.includes(i) || Object.keys(r[a].containers[i]).forEach(function (t) {\n          e.includes(t) && r[a].containers[i][t].map(function (e) {\n            var t = I(r[i].baseUrl, e);\n            o.includes(t) || (o.push(t), n[a] || (n[a] = []), n[a].push(t));\n          });\n        });\n      });\n    }), n;\n  },\n  J = function J(e) {\n    return function () {\n      var t = j(k().mark(function t(r, n) {\n        var o, a, i, c, s, u, l, f, p, d, h, y, v, g, m, b;\n        return k().wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              if (a = e.dataServers, i = e.resources, c = e.httpClient, s = e.jsonContext, u = i[r], l = new Headers(), null === (o = u.create) || void 0 === o || !o.container) {\n                t.next = 9;\n                break;\n              }\n              p = Object.keys(u.create.container)[0], f = I(a[p].baseUrl, Object.values(u.create.container)[0]), t.next = 19;\n              break;\n            case 9:\n              if (p = (null === (d = u.create) || void 0 === d ? void 0 : d.server) || Object.keys(a).find(function (e) {\n                return !0 === a[e].default;\n              })) {\n                t.next = 12;\n                break;\n              }\n              throw new Error(\"You must define a server for the creation, or a container, or a default server\");\n            case 12:\n              if (h = z(u.types, [p], a), (y = Object.keys(h)) && 0 !== y.length) {\n                t.next = 16;\n                break;\n              }\n              throw new Error(\"No container with types \".concat(JSON.stringify(u.types), \" found on server \").concat(p));\n            case 16:\n              if (!(y.length > 1 || h[y[0]].length > 1)) {\n                t.next = 18;\n                break;\n              }\n              throw new Error(\"More than one container detected with types \".concat(JSON.stringify(u.types), \" on server \").concat(p));\n            case 18:\n              f = h[y[0]][0];\n            case 19:\n              if (!n.data) {\n                t.next = 34;\n                break;\n              }\n              return null !== (v = u.fieldsMapping) && void 0 !== v && v.title && (Array.isArray(u.fieldsMapping.title) ? l.set(\"Slug\", u.fieldsMapping.title.map(function (e) {\n                return n.data[e];\n              }).join(\" \")) : l.set(\"Slug\", n.data[u.fieldsMapping.title])), t.next = 23, H(n.data, e);\n            case 23:\n              return n.data = t.sent, t.next = 26, c(f, {\n                method: \"POST\",\n                headers: l,\n                body: JSON.stringify(x({\n                  \"@context\": s,\n                  \"@type\": u.types\n                }, n.data))\n              });\n            case 26:\n              return g = t.sent, m = g.headers, b = m.get(\"Location\"), t.next = 31, B(e)(r, {\n                id: b\n              });\n            case 31:\n              return t.abrupt(\"return\", t.sent);\n            case 34:\n              if (!n.id) {\n                t.next = 41;\n                break;\n              }\n              return l.set(\"Content-Type\", \"application/sparql-update\"), t.next = 38, c(f, {\n                method: \"PATCH\",\n                headers: l,\n                body: \"\\n        PREFIX ldp: <http://www.w3.org/ns/ldp#>\\n        INSERT DATA { <\".concat(f, \"> ldp:contains <\").concat(n.id, \">. };\\n      \")\n              });\n            case 38:\n              return t.next = 40, B(e)(r, {\n                id: n.id\n              });\n            case 40:\n              return t.abrupt(\"return\", t.sent);\n            case 41:\n            case \"end\":\n              return t.stop();\n          }\n        }, t);\n      }));\n      return function (e, r) {\n        return t.apply(this, arguments);\n      };\n    }();\n  },\n  $ = function $(e) {\n    return function () {\n      var t = j(k().mark(function t(r, n) {\n        var o;\n        return k().wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              return o = e.httpClient, t.next = 3, o(n.id, {\n                method: \"DELETE\"\n              });\n            case 3:\n              return t.abrupt(\"return\", {\n                data: {\n                  id: n.id\n                }\n              });\n            case 4:\n            case \"end\":\n              return t.stop();\n          }\n        }, t);\n      }));\n      return function (e, r) {\n        return t.apply(this, arguments);\n      };\n    }();\n  },\n  Y = function Y(e) {\n    return function () {\n      var t = j(k().mark(function t(r, n) {\n        var o, a, i, c, s;\n        return k().wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              o = e.httpClient, a = [], i = N(n.ids), t.prev = 3, i.s();\n            case 5:\n              if ((c = i.n()).done) {\n                t.next = 17;\n                break;\n              }\n              return s = c.value, t.prev = 7, t.next = 10, o(s, {\n                method: \"DELETE\"\n              });\n            case 10:\n              a.push(s), t.next = 15;\n              break;\n            case 13:\n              t.prev = 13, t.t0 = t.catch(7);\n            case 15:\n              t.next = 5;\n              break;\n            case 17:\n              t.next = 22;\n              break;\n            case 19:\n              t.prev = 19, t.t1 = t.catch(3), i.e(t.t1);\n            case 22:\n              return t.prev = 22, i.f(), t.finish(22);\n            case 25:\n              return t.abrupt(\"return\", {\n                data: a\n              });\n            case 26:\n            case \"end\":\n              return t.stop();\n          }\n        }, t, null, [[3, 19, 22, 25], [7, 13]]);\n      }));\n      return function (e, r) {\n        return t.apply(this, arguments);\n      };\n    }();\n  },\n  V = function V(e) {\n    return function () {\n      return e.dataServers;\n    };\n  },\n  X = function X(e) {\n    return function () {\n      return e.resources;\n    };\n  };\nvar K = function () {\n    var t = j(k().mark(function t(r, n, o, a) {\n      var i, c, s, u, l, f, p;\n      return k().wrap(function (t) {\n        for (;;) switch (t.prev = t.next) {\n          case 0:\n            return i = a.httpClient, c = a.jsonContext, s = Object.keys(r).reduce(function (e, t) {\n              return x(x({}, e), Object.fromEntries(r[t].map(function (e) {\n                return [e, t];\n              })));\n            }, {}), u = Object.keys(s).map(function (t) {\n              return i(t).then(function (t) {\n                var r = t.json;\n                return r[\"@context\"] !== c ? e.compact(r, c) : r;\n              }).then(function (e) {\n                if (r = \"ldp:Container\", o = (n = e).type || n[\"@type\"], Array.isArray(o) ? o.includes(r) : o === r) return e[\"ldp:contains\"];\n                throw new Error(t + \" is not a LDP container\");\n                var r, n, o;\n              });\n            }), t.next = 5, Promise.all(u);\n          case 5:\n            if (0 !== (l = t.sent).length) {\n              t.next = 10;\n              break;\n            }\n            return t.abrupt(\"return\", {\n              data: [],\n              total: 0\n            });\n          case 10:\n            return l = (f = [].concat).apply.apply(f, P(l)), p = l.map(function (e) {\n              return e.id = e.id || e[\"@id\"], e;\n            }), o.filter && (o.filter.a && (o.filter.type = o.filter.a, delete o.filter.a), Object.keys(o.filter).length > 0 && (p = p.filter(function (e) {\n              return Object.entries(o.filter).some(function (t) {\n                var r = _(t, 2),\n                  n = r[0],\n                  o = r[1];\n                return \"q\" == n ? Object.entries(e).some(function (e) {\n                  var t = _(e, 2);\n                  t[0];\n                  var r,\n                    n = t[1];\n                  return (null == (r = n) || \"object\" != typeof r || !1 !== Array.isArray(r)) && (Array.isArray(n) ? n.some(function (e) {\n                    return e.includes(o);\n                  }) : n.includes(o));\n                }) : (Array.isArray(e[n]), e[n].includes(o));\n              });\n            }))), o.sort && (p = p.sort(function (e, t) {\n              return !e[o.sort.field] || !t[o.sort.field] || (\"ASC\" === o.sort.order ? e[o.sort.field].localeCompare(t[o.sort.field]) : t[o.sort.field].localeCompare(e[o.sort.field]));\n            })), o.pagination && (p = p.slice((o.pagination.page - 1) * o.pagination.perPage, o.pagination.page * o.pagination.perPage)), t.abrupt(\"return\", {\n              data: p,\n              total: l.length\n            });\n          case 16:\n          case \"end\":\n            return t.stop();\n        }\n      }, t);\n    }));\n    return function (e, r, n, o) {\n      return t.apply(this, arguments);\n    };\n  }(),\n  Q = function Q(e) {\n    var t,\n      r = {};\n    if (e) {\n      var n,\n        o = N(e);\n      try {\n        for (o.s(); !(n = o.n()).done;) {\n          var a = n.value;\n          t = a.includes(\"/\") ? a.split(\"/\").reverse() : [a], r = x(x({}, r), t.reduce(function (e, t) {\n            return E({}, t, x({\n              \"@embed\": \"@last\"\n            }, e));\n          }, {}));\n        }\n      } catch (e) {\n        o.e(e);\n      } finally {\n        o.f();\n      }\n      return r;\n    }\n  },\n  Z = function Z(e, t) {\n    if (e.startsWith(\"http://\") || e.startsWith(\"https://\")) return e;\n    if (\"a\" === e) return \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n    var r = _(e.split(\":\"), 2),\n      n = r[0],\n      o = r[1];\n    if (o) {\n      var a = t.find(function (e) {\n        return e.prefix === n;\n      });\n      if (a) return a.url + o;\n      throw new Error(\"No ontology found with prefix \" + n);\n    }\n    throw new Error('The value \"'.concat(e, '\" is not correct. It must include a prefix or be a full URI.'));\n  },\n  ee = n(o(\"s1\"), a(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"), o(\"type\")),\n  te = function te(e, t) {\n    var r, i;\n    return e ? (r = (i = e, i ? Array.isArray(i) ? i : [i] : []).map(function (e, r) {\n      return n(o(\"s1\"), a(Z(e, t)), o(\"o\" + (r + 1)));\n    }), {\n      construct: [ee].concat(P(r)),\n      where: [ee].concat(P(r.map(function (e) {\n        return {\n          type: \"optional\",\n          patterns: [e]\n        };\n      })))\n    }) : {\n      construct: r = [n(o(\"s1\"), o(\"p1\"), o(\"o1\"))],\n      where: r\n    };\n  },\n  re = q(function (e, t) {\n    var r;\n    e.exports = r = r || function (e, t) {\n      var r;\n      if (\"undefined\" != typeof window && window.crypto && (r = window.crypto), \"undefined\" != typeof self && self.crypto && (r = self.crypto), \"undefined\" != typeof globalThis && globalThis.crypto && (r = globalThis.crypto), !r && \"undefined\" != typeof window && window.msCrypto && (r = window.msCrypto), !r && void 0 !== U && U.crypto && (r = U.crypto), !r) try {\n        r = i;\n      } catch (e) {}\n      var n = function n() {\n          if (r) {\n            if (\"function\" == typeof r.getRandomValues) try {\n              return r.getRandomValues(new Uint32Array(1))[0];\n            } catch (e) {}\n            if (\"function\" == typeof r.randomBytes) try {\n              return r.randomBytes(4).readInt32LE();\n            } catch (e) {}\n          }\n          throw new Error(\"Native crypto module could not be used to get secure random number.\");\n        },\n        o = Object.create || function () {\n          function e() {}\n          return function (t) {\n            var r;\n            return e.prototype = t, r = new e(), e.prototype = null, r;\n          };\n        }(),\n        a = {},\n        c = a.lib = {},\n        s = c.Base = {\n          extend: function extend(e) {\n            var t = o(this);\n            return e && t.mixIn(e), t.hasOwnProperty(\"init\") && this.init !== t.init || (t.init = function () {\n              t.$super.init.apply(this, arguments);\n            }), t.init.prototype = t, t.$super = this, t;\n          },\n          create: function create() {\n            var e = this.extend();\n            return e.init.apply(e, arguments), e;\n          },\n          init: function init() {},\n          mixIn: function mixIn(e) {\n            for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);\n            e.hasOwnProperty(\"toString\") && (this.toString = e.toString);\n          },\n          clone: function clone() {\n            return this.init.prototype.extend(this);\n          }\n        },\n        u = c.WordArray = s.extend({\n          init: function init(e, t) {\n            e = this.words = e || [], this.sigBytes = null != t ? t : 4 * e.length;\n          },\n          toString: function toString(e) {\n            return (e || f).stringify(this);\n          },\n          concat: function concat(e) {\n            var t = this.words,\n              r = e.words,\n              n = this.sigBytes,\n              o = e.sigBytes;\n            if (this.clamp(), n % 4) for (var a = 0; a < o; a++) {\n              var i = r[a >>> 2] >>> 24 - a % 4 * 8 & 255;\n              t[n + a >>> 2] |= i << 24 - (n + a) % 4 * 8;\n            } else for (var c = 0; c < o; c += 4) t[n + c >>> 2] = r[c >>> 2];\n            return this.sigBytes += o, this;\n          },\n          clamp: function clamp() {\n            var t = this.words,\n              r = this.sigBytes;\n            t[r >>> 2] &= 4294967295 << 32 - r % 4 * 8, t.length = e.ceil(r / 4);\n          },\n          clone: function clone() {\n            var e = s.clone.call(this);\n            return e.words = this.words.slice(0), e;\n          },\n          random: function random(e) {\n            for (var t = [], r = 0; r < e; r += 4) t.push(n());\n            return new u.init(t, e);\n          }\n        }),\n        l = a.enc = {},\n        f = l.Hex = {\n          stringify: function stringify(e) {\n            for (var t = e.words, r = e.sigBytes, n = [], o = 0; o < r; o++) {\n              var a = t[o >>> 2] >>> 24 - o % 4 * 8 & 255;\n              n.push((a >>> 4).toString(16)), n.push((15 & a).toString(16));\n            }\n            return n.join(\"\");\n          },\n          parse: function parse(e) {\n            for (var t = e.length, r = [], n = 0; n < t; n += 2) r[n >>> 3] |= parseInt(e.substr(n, 2), 16) << 24 - n % 8 * 4;\n            return new u.init(r, t / 2);\n          }\n        },\n        p = l.Latin1 = {\n          stringify: function stringify(e) {\n            for (var t = e.words, r = e.sigBytes, n = [], o = 0; o < r; o++) {\n              var a = t[o >>> 2] >>> 24 - o % 4 * 8 & 255;\n              n.push(String.fromCharCode(a));\n            }\n            return n.join(\"\");\n          },\n          parse: function parse(e) {\n            for (var t = e.length, r = [], n = 0; n < t; n++) r[n >>> 2] |= (255 & e.charCodeAt(n)) << 24 - n % 4 * 8;\n            return new u.init(r, t);\n          }\n        },\n        d = l.Utf8 = {\n          stringify: function stringify(e) {\n            try {\n              return decodeURIComponent(escape(p.stringify(e)));\n            } catch (e) {\n              throw new Error(\"Malformed UTF-8 data\");\n            }\n          },\n          parse: function parse(e) {\n            return p.parse(unescape(encodeURIComponent(e)));\n          }\n        },\n        h = c.BufferedBlockAlgorithm = s.extend({\n          reset: function reset() {\n            this._data = new u.init(), this._nDataBytes = 0;\n          },\n          _append: function _append(e) {\n            \"string\" == typeof e && (e = d.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes;\n          },\n          _process: function _process(t) {\n            var r,\n              n = this._data,\n              o = n.words,\n              a = n.sigBytes,\n              i = this.blockSize,\n              c = a / (4 * i),\n              s = (c = t ? e.ceil(c) : e.max((0 | c) - this._minBufferSize, 0)) * i,\n              l = e.min(4 * s, a);\n            if (s) {\n              for (var f = 0; f < s; f += i) this._doProcessBlock(o, f);\n              r = o.splice(0, s), n.sigBytes -= l;\n            }\n            return new u.init(r, l);\n          },\n          clone: function clone() {\n            var e = s.clone.call(this);\n            return e._data = this._data.clone(), e;\n          },\n          _minBufferSize: 0\n        });\n      c.Hasher = h.extend({\n        cfg: s.extend(),\n        init: function init(e) {\n          this.cfg = this.cfg.extend(e), this.reset();\n        },\n        reset: function reset() {\n          h.reset.call(this), this._doReset();\n        },\n        update: function update(e) {\n          return this._append(e), this._process(), this;\n        },\n        finalize: function finalize(e) {\n          return e && this._append(e), this._doFinalize();\n        },\n        blockSize: 16,\n        _createHelper: function _createHelper(e) {\n          return function (t, r) {\n            return new e.init(r).finalize(t);\n          };\n        },\n        _createHmacHelper: function _createHmacHelper(e) {\n          return function (t, r) {\n            return new y.HMAC.init(e, r).finalize(t);\n          };\n        }\n      });\n      var y = a.algo = {};\n      return a;\n    }(Math);\n  }),\n  ne = q(function (e, t) {\n    var r;\n    e.exports = (r = re, function (e) {\n      var t = r,\n        n = t.lib,\n        o = n.WordArray,\n        a = n.Hasher,\n        i = t.algo,\n        c = [];\n      !function () {\n        for (var t = 0; t < 64; t++) c[t] = 4294967296 * e.abs(e.sin(t + 1)) | 0;\n      }();\n      var s = i.MD5 = a.extend({\n        _doReset: function _doReset() {\n          this._hash = new o.init([1732584193, 4023233417, 2562383102, 271733878]);\n        },\n        _doProcessBlock: function _doProcessBlock(e, t) {\n          for (var r = 0; r < 16; r++) {\n            var n = t + r,\n              o = e[n];\n            e[n] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8);\n          }\n          var a = this._hash.words,\n            i = e[t + 0],\n            s = e[t + 1],\n            d = e[t + 2],\n            h = e[t + 3],\n            y = e[t + 4],\n            v = e[t + 5],\n            g = e[t + 6],\n            m = e[t + 7],\n            b = e[t + 8],\n            w = e[t + 9],\n            x = e[t + 10],\n            k = e[t + 11],\n            S = e[t + 12],\n            O = e[t + 13],\n            j = e[t + 14],\n            E = e[t + 15],\n            A = a[0],\n            C = a[1],\n            _ = a[2],\n            P = a[3];\n          A = u(A, C, _, P, i, 7, c[0]), P = u(P, A, C, _, s, 12, c[1]), _ = u(_, P, A, C, d, 17, c[2]), C = u(C, _, P, A, h, 22, c[3]), A = u(A, C, _, P, y, 7, c[4]), P = u(P, A, C, _, v, 12, c[5]), _ = u(_, P, A, C, g, 17, c[6]), C = u(C, _, P, A, m, 22, c[7]), A = u(A, C, _, P, b, 7, c[8]), P = u(P, A, C, _, w, 12, c[9]), _ = u(_, P, A, C, x, 17, c[10]), C = u(C, _, P, A, k, 22, c[11]), A = u(A, C, _, P, S, 7, c[12]), P = u(P, A, C, _, O, 12, c[13]), _ = u(_, P, A, C, j, 17, c[14]), A = l(A, C = u(C, _, P, A, E, 22, c[15]), _, P, s, 5, c[16]), P = l(P, A, C, _, g, 9, c[17]), _ = l(_, P, A, C, k, 14, c[18]), C = l(C, _, P, A, i, 20, c[19]), A = l(A, C, _, P, v, 5, c[20]), P = l(P, A, C, _, x, 9, c[21]), _ = l(_, P, A, C, E, 14, c[22]), C = l(C, _, P, A, y, 20, c[23]), A = l(A, C, _, P, w, 5, c[24]), P = l(P, A, C, _, j, 9, c[25]), _ = l(_, P, A, C, h, 14, c[26]), C = l(C, _, P, A, b, 20, c[27]), A = l(A, C, _, P, O, 5, c[28]), P = l(P, A, C, _, d, 9, c[29]), _ = l(_, P, A, C, m, 14, c[30]), A = f(A, C = l(C, _, P, A, S, 20, c[31]), _, P, v, 4, c[32]), P = f(P, A, C, _, b, 11, c[33]), _ = f(_, P, A, C, k, 16, c[34]), C = f(C, _, P, A, j, 23, c[35]), A = f(A, C, _, P, s, 4, c[36]), P = f(P, A, C, _, y, 11, c[37]), _ = f(_, P, A, C, m, 16, c[38]), C = f(C, _, P, A, x, 23, c[39]), A = f(A, C, _, P, O, 4, c[40]), P = f(P, A, C, _, i, 11, c[41]), _ = f(_, P, A, C, h, 16, c[42]), C = f(C, _, P, A, g, 23, c[43]), A = f(A, C, _, P, w, 4, c[44]), P = f(P, A, C, _, S, 11, c[45]), _ = f(_, P, A, C, E, 16, c[46]), A = p(A, C = f(C, _, P, A, d, 23, c[47]), _, P, i, 6, c[48]), P = p(P, A, C, _, m, 10, c[49]), _ = p(_, P, A, C, j, 15, c[50]), C = p(C, _, P, A, v, 21, c[51]), A = p(A, C, _, P, S, 6, c[52]), P = p(P, A, C, _, h, 10, c[53]), _ = p(_, P, A, C, x, 15, c[54]), C = p(C, _, P, A, s, 21, c[55]), A = p(A, C, _, P, b, 6, c[56]), P = p(P, A, C, _, E, 10, c[57]), _ = p(_, P, A, C, g, 15, c[58]), C = p(C, _, P, A, O, 21, c[59]), A = p(A, C, _, P, y, 6, c[60]), P = p(P, A, C, _, k, 10, c[61]), _ = p(_, P, A, C, d, 15, c[62]), C = p(C, _, P, A, w, 21, c[63]), a[0] = a[0] + A | 0, a[1] = a[1] + C | 0, a[2] = a[2] + _ | 0, a[3] = a[3] + P | 0;\n        },\n        _doFinalize: function _doFinalize() {\n          var t = this._data,\n            r = t.words,\n            n = 8 * this._nDataBytes,\n            o = 8 * t.sigBytes;\n          r[o >>> 5] |= 128 << 24 - o % 32;\n          var a = e.floor(n / 4294967296),\n            i = n;\n          r[15 + (o + 64 >>> 9 << 4)] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8), r[14 + (o + 64 >>> 9 << 4)] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8), t.sigBytes = 4 * (r.length + 1), this._process();\n          for (var c = this._hash, s = c.words, u = 0; u < 4; u++) {\n            var l = s[u];\n            s[u] = 16711935 & (l << 8 | l >>> 24) | 4278255360 & (l << 24 | l >>> 8);\n          }\n          return c;\n        },\n        clone: function clone() {\n          var e = a.clone.call(this);\n          return e._hash = this._hash.clone(), e;\n        }\n      });\n      function u(e, t, r, n, o, a, i) {\n        var c = e + (t & r | ~t & n) + o + i;\n        return (c << a | c >>> 32 - a) + t;\n      }\n      function l(e, t, r, n, o, a, i) {\n        var c = e + (t & n | r & ~n) + o + i;\n        return (c << a | c >>> 32 - a) + t;\n      }\n      function f(e, t, r, n, o, a, i) {\n        var c = e + (t ^ r ^ n) + o + i;\n        return (c << a | c >>> 32 - a) + t;\n      }\n      function p(e, t, r, n, o, a, i) {\n        var c = e + (r ^ (t | ~n)) + o + i;\n        return (c << a | c >>> 32 - a) + t;\n      }\n      t.MD5 = a._createHelper(s), t.HmacMD5 = a._createHmacHelper(s);\n    }(Math), r.MD5);\n  }),\n  oe = function oe(e) {\n    return ne(e);\n  },\n  ae = function ae(e) {\n    return e.includes(\"/\") && e.split(\"/\")[0];\n  },\n  ie = function ie(e) {\n    return e.includes(\"/\") ? e.split(\"/\")[1] : e;\n  },\n  ce = function ce(e) {\n    return e.map(function (t) {\n      var r = t.query,\n        n = e.find(function (e) {\n          return t.parentNode === e.node;\n        });\n      return void 0 !== n && (r = r.concat(n.query[0])), {\n        type: \"bgp\",\n        triples: r\n      };\n    });\n  },\n  se = function se(e, t, r) {\n    var i = [],\n      c = function (e) {\n        var t = [];\n        if (e) {\n          var r,\n            n = N(e);\n          try {\n            for (n.s(); !(r = n.n()).done;) {\n              var o = r.value;\n              if (o.includes(\"/\")) for (var a = o.split(\"/\"), i = 1; i <= a.length; i++) t.push(a.slice(0, i).join(\"/\"));else t.push(o);\n            }\n          } catch (e) {\n            n.e(e);\n          } finally {\n            n.f();\n          }\n        }\n        return t;\n      }(e);\n    if (c && r && r.length > 0) {\n      var s,\n        u = N(c);\n      try {\n        for (u.s(); !(s = u.n()).done;) {\n          var l = s.value,\n            f = ae(l),\n            p = ie(l),\n            d = oe(l),\n            h = f ? oe(f) : \"1\",\n            y = [n(o(\"s\" + h), a(Z(p, r)), o(\"s\" + d)), n(o(\"s\" + d), o(\"p\" + d), o(\"o\" + d))];\n          i.push({\n            node: l,\n            parentNode: f,\n            query: y,\n            filter: \"\"\n          });\n        }\n      } catch (e) {\n        u.e(e);\n      } finally {\n        u.f();\n      }\n      return {\n        construct: i.length > 0 ? i.map(function (e) {\n          return e.query;\n        }).reduce(function (e, t) {\n          return e.concat(t);\n        }) : null,\n        where: {\n          type: \"union\",\n          patterns: [t.where].concat(P(ce(i)))\n        }\n      };\n    }\n    return {\n      construct: \"\",\n      where: \"\"\n    };\n  },\n  ue = r.literal,\n  le = r.namedNode,\n  fe = r.triple,\n  pe = r.variable,\n  de = new (0, require(\"sparqljs\").Generator)({}),\n  he = [\"q\", \"sparqlWhere\", \"blankNodes\", \"_servers\", \"_predicates\"],\n  ye = function ye(e) {\n    var t = e.containers,\n      r = e.params.filter,\n      n = e.blankNodes,\n      o = e.predicates,\n      a = e.ontologies,\n      i = te(o, a),\n      c = {\n        queryType: \"CONSTRUCT\",\n        template: i.construct,\n        where: [],\n        type: \"query\",\n        prefixes: Object.fromEntries(a.map(function (e) {\n          return [e.prefix, e.url];\n        }))\n      },\n      s = [{\n        type: \"values\",\n        values: t.map(function (e) {\n          return {\n            \"?containerUri\": le(e)\n          };\n        })\n      }, fe(pe(\"containerUri\"), le(\"http://www.w3.org/ns/ldp#contains\"), pe(\"s1\")), {\n        type: \"filter\",\n        expression: {\n          type: \"operation\",\n          operator: \"isiri\",\n          args: [pe(\"s1\")]\n        }\n      }],\n      u = [];\n    if (r && Object.keys(r).length > 0) {\n      var l = r.sparqlWhere && Object.keys(r.sparqlWhere).length > 0,\n        f = r.q && r.q.length > 0;\n      l && [].concat(r.sparqlWhere).forEach(function (e) {\n        u.push(e);\n      }), f && u.push({\n        type: \"group\",\n        patterns: [{\n          queryType: \"SELECT\",\n          variables: [pe(\"s1\")],\n          where: [fe(pe(\"s1\"), pe(\"p1\"), pe(\"o1\")), {\n            type: \"filter\",\n            expression: {\n              type: \"operation\",\n              operator: \"isliteral\",\n              args: [pe(\"o1\")]\n            }\n          }, {\n            type: \"filter\",\n            expression: {\n              type: \"operation\",\n              operator: \"regex\",\n              args: [{\n                type: \"operation\",\n                operator: \"lcase\",\n                args: [{\n                  type: \"operation\",\n                  operator: \"str\",\n                  args: [pe(\"o1\")]\n                }]\n              }, ue(r.q.toLowerCase(), \"\", le(\"http://www.w3.org/2001/XMLSchema#string\"))]\n            }\n          }],\n          type: \"query\"\n        }]\n      }), Object.entries(r).forEach(function (e) {\n        var t = _(e, 2),\n          r = t[0],\n          n = t[1];\n        he.includes(r) || u.unshift(fe(pe(\"s1\"), le(Z(r, a)), le(Z(n, a))));\n      });\n    }\n    var p = se(n, i, a);\n    return p && p.construct ? (u = u.concat(p.where), c.template = c.template.concat(p.construct)) : u.push(i.where), c.where.push({\n      type: \"union\",\n      patterns: [s, {\n        type: \"graph\",\n        name: le(\"http://semapps.org/mirror\"),\n        patterns: s\n      }]\n    }, {\n      type: \"union\",\n      patterns: [u, {\n        type: \"graph\",\n        name: le(\"http://semapps.org/mirror\"),\n        patterns: u\n      }]\n    }), de.stringify(c);\n  },\n  ve = function ve(e, t) {\n    for (var r = [], n = 0, o = Object.keys(t); n < o.length; n++) {\n      var a = o[n];\n      if (t[a].blankNodes) for (var i = 0, c = Object.keys(t[a].blankNodes); i < c.length; i++) {\n        var s = c[i];\n        e.includes(s) && r.push.apply(r, P(t[a].blankNodes[s]));\n      }\n    }\n    return P(new Set(r));\n  },\n  ge = [\"@context\"],\n  me = function me(e, t) {\n    switch (S(e)) {\n      case \"string\":\n        return e.localeCompare(t);\n      case \"number\":\n      case \"bigint\":\n        return e - t;\n      default:\n        return 0;\n    }\n  },\n  be = function () {\n    var t = j(k().mark(function t(r, n, o, a) {\n      var i, c, s, u, l, f, p, d, h, y;\n      return k().wrap(function (t) {\n        for (;;) switch (t.prev = t.next) {\n          case 0:\n            return i = a.dataServers, c = a.resources, s = a.httpClient, u = a.jsonContext, l = a.ontologies, f = c[n], p = Object.keys(r).map(function (t) {\n              return new Promise(function (n, a) {\n                var c,\n                  p,\n                  d,\n                  h,\n                  y,\n                  v,\n                  g = (null === (c = o.filter) || void 0 === c ? void 0 : c.blankNodes) || (null === (p = f.list) || void 0 === p ? void 0 : p.blankNodes) || ve(r[t], i),\n                  m = (null === (d = o.filter) || void 0 === d ? void 0 : d._predicates) || (null === (h = f.list) || void 0 === h ? void 0 : h.predicates);\n                null !== (y = o.filter) && void 0 !== y && y.sparqlWhere && (\"string\" == typeof o.filter.sparqlWhere || o.filter.sparqlWhere instanceof String) && (o.filter.sparqlWhere = JSON.parse(decodeURIComponent(o.filter.sparqlWhere)));\n                var b = ye({\n                  containers: r[t],\n                  params: x(x({}, o), {}, {\n                    filter: x(x({}, null === (v = f.list) || void 0 === v ? void 0 : v.filter), o.filter)\n                  }),\n                  blankNodes: g,\n                  predicates: m,\n                  ontologies: l\n                });\n                s(i[t].sparqlEndpoint, {\n                  method: \"POST\",\n                  body: b\n                }).then(function (t) {\n                  var r,\n                    n = t.json,\n                    o = !1 !== (null === (r = f.list) || void 0 === r ? void 0 : r.explicitEmbedOnFraming) ? x({\n                      \"@context\": u,\n                      \"@type\": f.types,\n                      \"@embed\": \"@never\"\n                    }, Q(g)) : {\n                      \"@context\": u,\n                      \"@type\": f.types\n                    };\n                  return e.frame(n, o, {\n                    omitGraph: !1\n                  });\n                }).then(function (e) {\n                  if (e[\"@id\"]) {\n                    var t = e;\n                    e = {\n                      \"@context\": t[\"@context\"],\n                      \"@graph\": [C(t, ge)]\n                    };\n                  }\n                  n(e[\"@graph\"] || []);\n                }).catch(function (e) {\n                  return a(e);\n                });\n              });\n            }), t.next = 5, Promise.all(p);\n          case 5:\n            if (0 !== (d = t.sent).length) {\n              t.next = 10;\n              break;\n            }\n            return t.abrupt(\"return\", {\n              data: [],\n              total: 0\n            });\n          case 10:\n            return d = (h = []).concat.apply(h, P(d)), y = d.map(function (e) {\n              return e.id = e.id || e[\"@id\"], e;\n            }), o.sort && (y = y.sort(function (e, t) {\n              return void 0 !== e[o.sort.field] && void 0 !== t[o.sort.field] ? \"ASC\" === o.sort.order ? me(e[o.sort.field], t[o.sort.field]) : me(t[o.sort.field], e[o.sort.field]) : 0;\n            })), o.pagination && (y = y.slice((o.pagination.page - 1) * o.pagination.perPage, o.pagination.page * o.pagination.perPage)), t.abrupt(\"return\", {\n              data: y,\n              total: d.length\n            });\n          case 15:\n          case \"end\":\n            return t.stop();\n        }\n      }, t);\n    }));\n    return function (e, r, n, o) {\n      return t.apply(this, arguments);\n    };\n  }(),\n  we = function we(e, t) {\n    var r = {};\n    return Object.keys(e).forEach(function (n) {\n      if (!t[n]) throw new Error(\"No server found with key \" + n);\n      r[n] = [], e[n].forEach(function (e) {\n        r[n].push(I(t[n].baseUrl, e));\n      });\n    }), r;\n  },\n  xe = function xe(e) {\n    return function () {\n      var t = j(k().mark(function t(r) {\n        var n,\n          o,\n          a,\n          i,\n          c,\n          s,\n          u,\n          l,\n          f,\n          p,\n          d,\n          h = arguments;\n        return k().wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              if (i = h.length > 1 && void 0 !== h[1] ? h[1] : {}, c = e.dataServers, s = e.resources, u = s[r]) {\n                t.next = 5;\n                break;\n              }\n              throw new Error(\"Resource \".concat(r, \" is not mapped in resources file\"));\n            case 5:\n              if (null !== (n = i.filter) && void 0 !== n && n._servers || null === (o = u.list) || void 0 === o || !o.containers) {\n                t.next = 11;\n                break;\n              }\n              if (!Array.isArray(null === (f = u.list) || void 0 === f ? void 0 : f.containers)) {\n                t.next = 8;\n                break;\n              }\n              throw new Error(\"The list.containers property of \".concat(r, \" dataModel must be of type object ({ serverKey: [containerUri] })\"));\n            case 8:\n              l = we(u.list.containers, c), t.next = 12;\n              break;\n            case 11:\n              l = z(u.types, (null === (p = i.filter) || void 0 === p ? void 0 : p._servers) || (null === (d = u.list) || void 0 === d ? void 0 : d.servers), c);\n            case 12:\n              if (null === (a = u.list) || void 0 === a || !a.fetchContainer) {\n                t.next = 16;\n                break;\n              }\n              return t.abrupt(\"return\", K(l, r, i, e));\n            case 16:\n              return t.abrupt(\"return\", be(l, r, i, e));\n            case 17:\n            case \"end\":\n              return t.stop();\n          }\n        }, t);\n      }));\n      return function (e) {\n        return t.apply(this, arguments);\n      };\n    }();\n  },\n  ke = function ke(e) {\n    return function () {\n      var t = j(k().mark(function t(r, n) {\n        var o, a;\n        return k().wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              return o = e.returnFailedResources, t.next = 3, Promise.all(n.ids.map(function (t) {\n                return B(e)(r, {\n                  id: \"object\" === S(t) ? t[\"@id\"] : t\n                }).then(function (e) {\n                  return e.data;\n                }).catch(function () {\n                  if (o) return {\n                    id: t,\n                    _error: !0\n                  };\n                });\n              }));\n            case 3:\n              return a = (a = t.sent).filter(function (e) {\n                return e;\n              }), t.abrupt(\"return\", {\n                data: a\n              });\n            case 6:\n            case \"end\":\n              return t.stop();\n          }\n        }, t);\n      }));\n      return function (e, r) {\n        return t.apply(this, arguments);\n      };\n    }();\n  },\n  Se = function Se(e) {\n    return function () {\n      var t = j(k().mark(function t(r, n) {\n        return k().wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              return n.filter = x(x({}, n.filter), {}, E({}, n.target, n.id)), delete n.target, t.next = 4, xe(e)(r, n);\n            case 4:\n              return t.abrupt(\"return\", t.sent);\n            case 5:\n            case \"end\":\n              return t.stop();\n          }\n        }, t);\n      }));\n      return function (e, r) {\n        return t.apply(this, arguments);\n      };\n    }();\n  },\n  Oe = function Oe(e) {\n    return function () {\n      var t = j(k().mark(function t(r, n) {\n        var o, a;\n        return k().wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              return o = e.httpClient, a = e.jsonContext, t.next = 3, H(n.data, e);\n            case 3:\n              return n.data = t.sent, t.next = 6, o(n.id, {\n                method: \"PUT\",\n                body: JSON.stringify(x({\n                  \"@context\": a\n                }, n.data))\n              });\n            case 6:\n              return t.abrupt(\"return\", {\n                data: n.data\n              });\n            case 7:\n            case \"end\":\n              return t.stop();\n          }\n        }, t);\n      }));\n      return function (e, r) {\n        return t.apply(this, arguments);\n      };\n    }();\n  };\nfunction je(e) {\n  this.message = e;\n}\nje.prototype = new Error(), je.prototype.name = \"InvalidCharacterError\";\nvar Ee = \"undefined\" != typeof window && window.atob && window.atob.bind(window) || function (e) {\n  var t = String(e).replace(/=+$/, \"\");\n  if (t.length % 4 == 1) throw new je(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  for (var r, n, o = 0, a = 0, i = \"\"; n = t.charAt(a++); ~n && (r = o % 4 ? 64 * r + n : n, o++ % 4) ? i += String.fromCharCode(255 & r >> (-2 * o & 6)) : 0) n = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(n);\n  return i;\n};\nfunction Ae(e) {\n  var t = e.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (t.length % 4) {\n    case 0:\n      break;\n    case 2:\n      t += \"==\";\n      break;\n    case 3:\n      t += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n  try {\n    return function (e) {\n      return decodeURIComponent(Ee(e).replace(/(.)/g, function (e, t) {\n        var r = t.charCodeAt(0).toString(16).toUpperCase();\n        return r.length < 2 && (r = \"0\" + r), \"%\" + r;\n      }));\n    }(t);\n  } catch (e) {\n    return Ee(t);\n  }\n}\nfunction Ce(e) {\n  this.message = e;\n}\nfunction _e(e, t) {\n  if (\"string\" != typeof e) throw new Ce(\"Invalid token specified\");\n  var r = !0 === (t = t || {}).header ? 0 : 1;\n  try {\n    return JSON.parse(Ae(e.split(\".\")[r]));\n  } catch (e) {\n    throw new Ce(\"Invalid token specified: \" + e.message);\n  }\n}\nCe.prototype = new Error(), Ce.prototype.name = \"InvalidTokenError\";\nvar Pe = function () {\n    var e = j(k().mark(function e(t) {\n      var r, n, o, a, i, c, s, u, l, f, p, d;\n      return k().wrap(function (e) {\n        for (;;) switch (e.prev = e.next) {\n          case 0:\n            if (r = t.dataServers, n = t.httpClient, o = localStorage.getItem(\"token\"), a = W(\"pod\", r), i = W(\"authServer\", r), !o) {\n              e.next = 24;\n              break;\n            }\n            return c = _e(o), s = c.webId, e.prev = 6, e.next = 9, n(s);\n          case 9:\n            l = e.sent, f = l.json, u = f, e.next = 20;\n            break;\n          case 14:\n            return e.prev = 14, e.t0 = e.catch(6), console.error(e.t0), localStorage.clear(), window.location.reload(), e.abrupt(\"return\");\n          case 20:\n            a && (t.dataServers[a].name = \"My Pod\", t.dataServers[a].baseUrl = I(s, \"data\"), t.dataServers[a].sparqlEndpoint = (null === (p = u.endpoints) || void 0 === p ? void 0 : p[\"void:sparqlEndpoint\"]) || I(s, \"sparql\")), i && (t.dataServers[i].proxyUrl = null === (d = u.endpoints) || void 0 === d ? void 0 : d.proxyUrl), e.next = 24;\n            break;\n          case 24:\n          case \"end\":\n            return e.stop();\n        }\n      }, e, null, [[6, 14]]);\n    }));\n    return function (t) {\n      return e.apply(this, arguments);\n    };\n  }(),\n  Le = function Le(e) {\n    return e ? Array.isArray(e) ? e : [e] : void 0;\n  },\n  Te = function () {\n    var e = j(k().mark(function e(t) {\n      var r, n, o, a, i, c, s, u;\n      return k().wrap(function (e) {\n        for (;;) switch (e.prev = e.next) {\n          case 0:\n            return r = Object.entries(t.dataServers).filter(function (e) {\n              var t = _(e, 2);\n              return t[0], !0 !== t[1].pod;\n            }).map(function (e) {\n              var r = _(e, 2),\n                n = r[0],\n                o = r[1];\n              return t.httpClient(new URL(\"/.well-known/void\", o.baseUrl).toString()).then(function (e) {\n                return {\n                  key: n,\n                  datasets: e.json[\"@graph\"]\n                };\n              }).catch(function (e) {\n                if (404 === e.status || 401 === e.status) return {\n                  key: n,\n                  error: e\n                };\n                throw e;\n              });\n            }), n = [], e.prev = 2, e.next = 5, Promise.all(r);\n          case 5:\n            n = e.sent, e.next = 10;\n            break;\n          case 8:\n            e.prev = 8, e.t0 = e.catch(2);\n          case 10:\n            o = N(n);\n            try {\n              for (o.s(); !(a = o.n()).done;) if (i = a.value, t.dataServers[i.key].containers = t.dataServers[i.key].containers || {}, t.dataServers[i.key].blankNodes = t.dataServers[i.key].blankNodes || {}, i.datasets) {\n                c = N(i.datasets);\n                try {\n                  for (u = function u() {\n                    var e = s.value,\n                      r = Object.keys(t.dataServers).find(function (r) {\n                        return e[\"void:uriSpace\"] === t.dataServers[r].baseUrl;\n                      });\n                    if (r) {\n                      r === i.key && (t.dataServers[i.key].name = t.dataServers[i.key].name || e[\"dc:title\"], t.dataServers[i.key].description = t.dataServers[i.key].description || e[\"dc:description\"], t.dataServers[i.key].sparqlEndpoint = t.dataServers[i.key].sparqlEndpoint || e[\"void:sparqlEndpoint\"]), t.dataServers[i.key].containers[r] = t.dataServers[i.key].containers[r] || {};\n                      var n,\n                        o = N(Le(e[\"void:classPartition\"]));\n                      try {\n                        for (o.s(); !(n = o.n()).done;) {\n                          var a,\n                            c = n.value,\n                            u = N(Le(c[\"void:class\"]));\n                          try {\n                            for (u.s(); !(a = u.n()).done;) {\n                              var l = a.value,\n                                f = c[\"void:uriSpace\"].replace(e[\"void:uriSpace\"], \"/\");\n                              t.dataServers[i.key].containers[r][l] ? t.dataServers[i.key].containers[r][l].push(f) : t.dataServers[i.key].containers[r][l] = [f], Le(c[\"semapps:blankNodes\"]) && (t.dataServers[i.key].blankNodes[c[\"void:uriSpace\"]] = Le(c[\"semapps:blankNodes\"]));\n                            }\n                          } catch (e) {\n                            u.e(e);\n                          } finally {\n                            u.f();\n                          }\n                        }\n                      } catch (e) {\n                        o.e(e);\n                      } finally {\n                        o.f();\n                      }\n                    }\n                  }, c.s(); !(s = c.n()).done;) u();\n                } catch (e) {\n                  c.e(e);\n                } finally {\n                  c.f();\n                }\n              }\n            } catch (e) {\n              o.e(e);\n            } finally {\n              o.f();\n            }\n          case 12:\n          case \"end\":\n            return e.stop();\n        }\n      }, e, null, [[2, 8]]);\n    }));\n    return function (t) {\n      return e.apply(this, arguments);\n    };\n  }(),\n  Ne = function Ne(e, t) {\n    return Object.keys(t).find(function (r) {\n      return t[r].pod ? t[r].baseUrl && e.startsWith(t[r].baseUrl.replace(\"/data\", \"\")) : e.startsWith(t[r].baseUrl);\n    });\n  },\n  Ue = function Ue(e) {\n    if (!W(\"default\", e.dataServers)) throw new Error(\"You must define a default server in your dataServers config\");\n    var t;\n    e.jsonContext || (e.jsonContext = Object.fromEntries(e.ontologies.map(function (e) {\n      return [e.prefix, e.url];\n    }))), e.returnFailedResources || (e.returnFailedResources = !1), e.httpClient = (t = e.dataServers, function (e) {\n      var r,\n        n,\n        o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n        a = W(\"authServer\", t),\n        i = Ne(e, t),\n        s = i !== a && (null === (r = t[a]) || void 0 === r ? void 0 : r.proxyUrl) && !0 !== (null === (n = t[i]) || void 0 === n ? void 0 : n.noProxy);\n      switch (o.headers || (o.headers = new Headers()), o.method) {\n        case \"POST\":\n        case \"PATCH\":\n        case \"PUT\":\n          o.headers.has(\"Accept\") || o.headers.set(\"Accept\", \"application/ld+json\"), o.headers.has(\"Content-Type\") || o.headers.set(\"Content-Type\", \"application/ld+json\");\n          break;\n        case \"DELETE\":\n          break;\n        case \"GET\":\n        default:\n          o.headers.has(\"Accept\") || o.headers.set(\"Accept\", \"application/ld+json\");\n      }\n      if (s) {\n        var u = new FormData();\n        return u.append(\"id\", e), u.append(\"method\", o.method || \"GET\"), u.append(\"headers\", JSON.stringify(Object.fromEntries(o.headers.entries()))), o.body && (o.body instanceof File ? u.append(\"body\", o.body, o.body.name) : u.append(\"body\", o.body)), c.fetchJson(t[a].proxyUrl, {\n          method: \"POST\",\n          headers: new Headers({\n            Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n          }),\n          body: u\n        });\n      }\n      if (i === a) {\n        var l = localStorage.getItem(\"token\");\n        l && o.headers.set(\"Authorization\", \"Bearer \".concat(l));\n      }\n      return c.fetchJson(e, o);\n    });\n    var r = Pe(e),\n      n = Te(e),\n      o = function o(e) {\n        return j(k().mark(function t() {\n          var o = arguments;\n          return k().wrap(function (t) {\n            for (;;) switch (t.prev = t.next) {\n              case 0:\n                return t.next = 2, r;\n              case 2:\n                return t.next = 4, n;\n              case 4:\n                return t.next = 6, e.apply(void 0, o);\n              case 6:\n                return t.abrupt(\"return\", t.sent);\n              case 7:\n              case \"end\":\n                return t.stop();\n            }\n          }, t);\n        }));\n      };\n    return {\n      getList: o(xe(e)),\n      getMany: o(ke(e)),\n      getManyReference: o(Se(e)),\n      getOne: o(B(e)),\n      create: o(J(e)),\n      update: o(Oe(e)),\n      updateMany: function updateMany() {\n        throw new Error(\"updateMany is not implemented yet\");\n      },\n      delete: o($(e)),\n      deleteMany: o(Y(e)),\n      getDataModels: o(X(e)),\n      getDataServers: o(V(e)),\n      getLocalDataServers: V(e),\n      fetch: o(e.httpClient)\n    };\n  },\n  qe = function qe(e, t) {\n    return \"function\" == typeof e ? e(t) : e;\n  },\n  Ie = function Ie(e) {\n    return \"string\" == typeof e && e.startsWith(\"http\");\n  },\n  Me = function Me(e) {\n    var t = h(s).getLocalDataServers(),\n      r = y(function () {\n        if (t) return Object.fromEntries(Object.values(t).map(function (e) {\n          var t = void 0 !== e.externalLinks ? e.externalLinks : !e.default;\n          return [e.baseUrl, t];\n        }));\n      }, [t]);\n    return v(function (t) {\n      var n = qe(e, t);\n      if (!1 === n) return !1;\n      if (null == t || !t.id) return !1;\n      var o = Object.keys(r).find(function (e) {\n        return null == t ? void 0 : t.id.startsWith(e);\n      });\n      if (!o) return !1;\n      var a = qe(r[o], t);\n      return !1 !== a && (Ie(n) ? n : Ie(a) ? a : t.id);\n    }, [r, e]);\n  },\n  Be = function Be(e) {\n    var t = h(s),\n      r = _(g(), 2),\n      n = r[0],\n      o = r[1];\n    return m(function () {\n      t.getDataModels().then(function (t) {\n        return o(t[e]);\n      });\n    }, [t, e, o]), n;\n  },\n  De = function De() {\n    var e = h(s),\n      t = _(g(), 2),\n      r = t[0],\n      n = t[1];\n    return m(function () {\n      e.getDataServers().then(function (e) {\n        return n(e);\n      });\n    }, [e, n]), r;\n  },\n  Re = function Re(e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"@all\",\n      r = Be(e),\n      n = De(),\n      o = g(),\n      a = _(o, 2),\n      i = a[0],\n      c = a[1];\n    return m(function () {\n      r && n && c(z(r.types, t, n));\n    }, [r, n, t]), i;\n  },\n  Fe = function Fe(e, t, r) {\n    var n = [];\n    if (Object.keys(r[t].containers[t]).length > 0 && Object.keys(r[t].containers[t]).forEach(function (o) {\n      e.includes(o) && r[t].containers[t][o].map(function (e) {\n        var o = I(r[t].baseUrl, e);\n        n.includes(o) || n.push(o);\n      });\n    }), 0 === n.length) throw new Error(\"No container found matching with types \".concat(JSON.stringify(e), \". You can set explicitely the create.container property of the resource.\"));\n    if (n.length > 1) throw new Error(\"More than one container found matching with types \".concat(JSON.stringify(e), \". You must set the create.server or create.container property for the resource.\"));\n    return n[0];\n  },\n  He = function He(e) {\n    var t = Be(e),\n      r = De(),\n      n = _(g(), 2),\n      o = n[0],\n      a = n[1];\n    return m(function () {\n      var n, o;\n      if (t && r) if (null !== (n = t.create) && void 0 !== n && n.container) {\n        var i = _(Object.entries(t.create.container)[0], 2),\n          c = i[0],\n          s = i[1];\n        if (!c || !r[c]) throw new Error(\"Wrong key for the dataModel.create.container config of resource \" + e);\n        a(I(r[c].baseUrl, s));\n      } else if (null !== (o = t.create) && void 0 !== o && o.server) {\n        var u;\n        a(Fe(t.types, null === (u = t.create) || void 0 === u ? void 0 : u.server, r));\n      } else {\n        var l = W(\"default\", r);\n        a(Fe(t.types, l, r));\n      }\n    }, [t, r, a]), o;\n  },\n  We = function We() {\n    var e = h(s),\n      t = _(g(), 2),\n      r = t[0],\n      n = t[1];\n    return m(function () {\n      e.getDataModels().then(function (e) {\n        return n(e);\n      });\n    }, [e, n]), r;\n  },\n  Ge = [\"children\", \"record\", \"filter\", \"source\"],\n  ze = function ze(e) {\n    var t = e.children,\n      r = e.record,\n      n = e.filter,\n      o = e.source,\n      a = C(e, Ge),\n      i = _(g(), 2),\n      c = i[0],\n      s = i[1];\n    return m(function () {\n      if (r && o && Array.isArray(null == r ? void 0 : r[o])) {\n        var e = null == r ? void 0 : r[o].filter(function (e) {\n            var t = !0;\n            for (var r in n) {\n              var o = e[r];\n              Array.isArray(o) ? o.includes(n[r]) || (t = !1) : o !== n[r] && (t = !1);\n            }\n            return t;\n          }),\n          t = x({}, r);\n        t[o] = e.length > 0 ? e : void 0, s(t);\n      }\n    }, [r, o, n]), d.createElement(d.Fragment, null, d.Children.map(t, function (e, t) {\n      return d.cloneElement(e, x(x({}, a), {}, {\n        record: c,\n        addLabel: !0,\n        source: o\n      }));\n    }));\n  },\n  Je = [\"children\", \"groupReference\", \"groupLabel\", \"groupHeader\", \"filterProperty\"],\n  $e = function $e(e) {\n    var t = e.children,\n      r = e.groupReference,\n      n = e.groupLabel,\n      o = e.groupHeader,\n      a = e.filterProperty,\n      i = C(e, Je),\n      c = u({\n        type: \"getList\",\n        resource: r,\n        payload: {}\n      }).data;\n    return d.createElement(d.Fragment, null, null == c ? void 0 : c.map(function (e, r) {\n      var c = {};\n      return c[a] = e.id, d.createElement(d.Fragment, null, o && o(x(x({}, i), {}, {\n        group: e\n      })), d.createElement(ze, A({}, i, {\n        filter: c,\n        label: e[n]\n      }), t));\n    }));\n  },\n  Ye = [\"reificationClass\", \"children\"],\n  Ve = b({\n    form: {\n      display: \"flex\"\n    },\n    input: {\n      paddingRight: \"20px\"\n    }\n  }),\n  Xe = b({\n    root: {\n      display: \"none\"\n    }\n  }),\n  Ke = function Ke(e) {\n    var t = e.reificationClass;\n    e.children;\n    var r = C(e, Ye),\n      n = Ve(),\n      o = Xe();\n    return d.createElement(l, r, d.createElement(f, {\n      classes: {\n        form: n.form\n      }\n    }, d.Children.map(e.children, function (e, t) {\n      return d.cloneElement(e, {\n        className: n.input\n      });\n    }), d.createElement(p, {\n      className: o.root,\n      source: \"type\",\n      initialValue: t\n    })));\n  };\nexport { ze as FilterHandler, $e as GroupedReferenceHandler, Ke as ReificationArrayInput, se as buildBlankNodesQuery, ye as buildSparqlQuery, Ue as dataProvider, Re as useContainers, He as useCreateContainer, Be as useDataModel, We as useDataModels, De as useDataServers, Me as useGetExternalLink };","map":{"version":3,"sources":["../../../node_modules/url-join/lib/url-join.js","../src/dataProvider/utils/fetchResource.js","../src/dataProvider/methods/getOne.js","../src/dataProvider/utils/uploadAllFiles.js","../src/dataProvider/utils/getServerKeyFromType.js","../src/dataProvider/utils/parseServerKeys.js","../src/dataProvider/utils/findContainersWithTypes.js","../src/dataProvider/methods/create.js","../src/dataProvider/methods/delete.js","../src/dataProvider/methods/deleteMany.js","../src/dataProvider/methods/getDataServers.js","../src/dataProvider/methods/getDataModels.js","../src/dataProvider/utils/fetchContainers.js","../node_modules/isobject/index.js","../src/dataProvider/utils/getEmbedFrame.js","../src/dataProvider/utils/resolvePrefix.js","../src/dataProvider/utils/buildBaseQuery.js","../../../node_modules/crypto-js/core.js","../../../node_modules/crypto-js/md5.js","../src/dataProvider/utils/buildBlankNodesQuery.js","../src/dataProvider/utils/buildSparqlQuery.js","../src/dataProvider/utils/getBlankNodesFromDataServers.js","../src/dataProvider/utils/fetchSparqlEndpoints.js","../src/dataProvider/utils/findContainersWithPath.js","../src/dataProvider/methods/getList.js","../src/dataProvider/methods/getMany.js","../src/dataProvider/methods/getManyReference.js","../src/dataProvider/methods/update.js","../../../node_modules/jwt-decode/build/jwt-decode.esm.js","../src/dataProvider/utils/fetchUserConfig.js","../src/dataProvider/utils/fetchVoidEndpoints.js","../src/dataProvider/utils/getServerKeyFromUri.js","../src/dataProvider/dataProvider.js","../src/dataProvider/httpClient.js","../src/hooks/useGetExternalLink.js","../src/hooks/useDataModel.js","../src/hooks/useDataServers.js","../src/hooks/useContainers.js","../src/dataProvider/utils/findCreateContainerWithTypes.js","../src/hooks/useCreateContainer.js","../src/hooks/useDataModels.js","../src/reification/FilterHandler.js","../src/reification/GroupedReferenceHandler.js","../src/reification/ReificationArrayInput.js"],"names":["context","definition","module","exports","this","normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","fetchResource","_ref","resourceUri","config","httpClient","jsonContext","json","data","id","jsonld","compact","getOneMethod","resourceId","params","resources","dataModel","Error","list","forceArray","forceArrayItem","_iterator","Array","isArray","_context","fileName","fileExtension","splitFileName","pop","createSlug","lang","isFile","o","rawFile","File","getUploadsContainerUri","serverKey","Object","keys","dataServers","find","key","uploadsContainer","urlJoin","baseUrl","uploadFile","uploadsContainerUri","console","log","response","method","body","headers","Headers","Slug","name","Content-Type","type","status","get","uploadAllFiles","_ref2","record","property","hasOwnProperty","getServerKeyFromType","parseServerKey","serverKeys","includes","map","defaultServerKey","filter","findContainersWithTypes","types","containers","existingContainers","parseServerKeys","forEach","key1","key2","containerUri","path","createMethod","create","container","values","server","JSON","stringify","_dataModel$fieldsMapp","fieldsMapping","title","set","f","responseHeaders","@context","@type","getOne","deleteMethod","deleteManyMethod","ids","getDataServers","getDataModels","resource","resourceType","fetchContainers","containersServers","reduce","acc","fromEntries","fetchPromises","then","results","Promise","all","total","apply","concat","returnData","item","a","entries","some","k","v","_ref3","vr","_ref5","va","sort","b","field","order","localeCompare","pagination","page","perPage","val","getEmbedFrame","embedFrame","predicates","blankNodes","blankNode","reverse","_objectSpread","accumulator","predicate","@embed","resolvePrefix","ontologies","startsWith","prefix","value","ontology","url","typeQuery","triple","variable","namedNode","buildBaseQuery","baseTriples","construct","where","patterns","CryptoJS","Math","undefined","crypto","window","self","globalThis","msCrypto","global","require","err","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","F","obj","subtype","prototype","C","C_lib","lib","Base","extend","overrides","mixIn","init","$super","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","j","ceil","random","nBytes","C_enc","enc","hexChars","bite","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","max","_minBufferSize","nWordsReady","nBytesReady","min","offset","_doProcessBlock","splice","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","C_algo","HMAC","algo","T","abs","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","c","d","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","hash","H_i","x","s","t","n","HmacMD5","nodes","nodeNames","generateSparqlVarName","md5","node","getParentNode","getPredicate","buildUnionQuery","queries","triples","q","query","firstTriple","parentNode","q2","buildBlankNodesQuery","baseQuery","extractNodes","_iterator2","varName","parentVarName","pre","cur","literal","DataFactory","Generator","generator","SparqlGenerator","reservedFilterKeys","buildSparqlQuery","sparqlJsParams","queryType","template","prefixes","containerWhere","?containerUri","expression","operator","args","resourceWhere","hasSPARQLFilter","sparqlWhere","hasFullTextSearch","sw","variables","toLowerCase","object","unshift","blankNodesQuery","getBlankNodesFromDataServers","_i","_i2","Set","compare","fetchSparqlEndpoints","sparqlQueryPromises","resolve","reject","_params$filter","_params$filter2","_predicates","sparqlQuery","sparqlEndpoint","frame","explicitEmbedOnFraming","omitGraph","compactJson","@graph","findContainersWithPaths","paths","getListMethod","_servers","servers","fetchContainer","getManyMethod","returnFailedResources","_typeof","_error","getManyReferenceMethod","target","getList","updateMethod","InvalidCharacterError","input","bc","bs","buffer","idx","output","charAt","indexOf","atob","bind","fetchUserConfig","token","localStorage","getItem","podKey","authServerKey","webId","jwtDecode","userData","error","clear","location","reload","endpoints","proxyUrl","defaultToArray","fetchVoidEndpoints","pod","URL","datasets","result","dataset","datasetServerKey","description","partition","_iterator3","_iterator4","getServerKeyFromUri","uri","dataProvider","fetchUserConfigPromise","fetchVoidEndpointsPromise","waitForVoidEndpoints","_asyncToGenerator","getMany","getManyReference","updateMany","delete","deleteMany","getDataModelsMethod","getDataServersMethod","getLocalDataServers","fetch","options","useProxy","noProxy","has","formData","FormData","append","fetchUtils","fetchJson","Authorization","compute","externalLinks","isURL","useGetExternalLink","useContext","DataProviderContext","serversExternalLinks","useMemo","useCallback","computedComponentExternalLinks","componentExternalLinks","serverBaseUrl","computedServerExternalLinks","useDataModel","_useState2","setDataModel","useState","useEffect","useDataServers","setDataServers","useContainers","_useState","setContainers","findCreateContainerWithTypes","createServerKey","useCreateContainer","createContainer","setCreateContainer","useDataModels","dataModels","setDataModels","FilterHandler","children","source","otherProps","filtered","setFiltered","filteredData","eq","r","newRecord","React","Children","child","cloneElement","addLabel","GroupedReferenceHandler","groupReference","groupLabel","groupHeader","filterProperty","useQueryWithStore","payload","index","group","label","useReferenceInputStyles","makeStyles","form","display","paddingRight","useHideInputStyles","root","ReificationArrayInput","reificationClass","props","flexFormClasses","hideInputStyles","ArrayInput","SimpleFormIterator","classes","className","TextInput","initialValue"],"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","sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) { return ''; }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import jsonld from 'jsonld';\n\nconst fetchResource = async (resourceUri, config) => {\n  const { httpClient, jsonContext } = config;\n\n  let { json: data } = await httpClient(resourceUri);\n\n  data.id = data.id || data['@id'];\n\n  // We compact only if the context is different between the frontend and the middleware\n  // TODO deep compare if the context is an object\n  if (data['@context'] !== jsonContext) {\n    data = await jsonld.compact(data, jsonContext);\n  }\n\n  return data;\n};\n\nexport default fetchResource;\n","import fetchResource from '../utils/fetchResource';\n\nconst getOneMethod = config => async (resourceId, params) => {\n  const { resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const data = await fetchResource(params.id, config);\n\n  // Transform single value into array if forceArray is set\n  if (dataModel.list?.forceArray) {\n    for (const forceArrayItem of dataModel.list?.forceArray) {\n      if (data[forceArrayItem] && !Array.isArray(data[forceArrayItem])) {\n        data[forceArrayItem] = [data[forceArrayItem]];\n      }\n    }\n  }\n\n  // TODO activate defaultFetchPlan option\n  // if (dataModel.list?.defaultFetchPlan) {\n  //   for (const node of dataModel.list?.defaultFetchPlan) {\n  //     if (\n  //       data[node] &&\n  //       typeof data[node] === 'string' &&\n  //       data[node].startsWith('http')\n  //     ) {\n  //       try {\n  //         const dataToEmbed = await fetchResource(data[node], config);\n  //         delete dataToEmbed['@context'];\n  //         data[node] = dataToEmbed;\n  //       } catch (e) {\n  //         // Ignore errors (this may happen if user does not have rights to see the resource)\n  //       }\n  //     }\n  //   }\n  // }\n\n  return { data };\n};\n\nexport default getOneMethod;\n","import createSlug from 'speakingurl';\nimport urlJoin from 'url-join';\n\nexport const getSlugWithExtension = fileName => {\n  let fileExtension = '';\n  let splitFileName = fileName.split('.');\n  if (splitFileName.length > 1) {\n    fileExtension = splitFileName.pop();\n    fileName = splitFileName.join('.');\n  }\n  return createSlug(fileName, { lang: 'fr' }) + '.' + fileExtension;\n};\n\nexport const isFile = o => o && o.rawFile && o.rawFile instanceof File;\n\nconst getUploadsContainerUri = config => {\n  const serverKey = Object.keys(config.dataServers).find(key => config.dataServers[key].uploadsContainer);\n  if (serverKey) {\n    return urlJoin(config.dataServers[serverKey].baseUrl, config.dataServers[serverKey].uploadsContainer);\n  }\n};\n\nconst uploadFile = async (rawFile, config) => {\n  const uploadsContainerUri = getUploadsContainerUri(config);\n  if (!uploadsContainerUri) throw new Error(\"You must define an uploadsContainer in one of the server's configuration\");\n\n  console.log('upload raw file', typeof rawFile, rawFile)\n\n  const response = await config.httpClient(uploadsContainerUri, {\n    method: 'POST',\n    body: rawFile,\n    headers: new Headers({\n      // We must sluggify the file name, because we can't use non-ASCII characters in the header\n      // However we keep the extension apart (if it exists) so that it is not replaced with a -\n      // TODO let the middleware guess the extension based on the content type\n      Slug: getSlugWithExtension(rawFile.name),\n      'Content-Type': rawFile.type\n    })\n  });\n\n  if (response.status === 201) {\n    return response.headers.get('Location');\n  }\n};\n\n/*\n * Look for raw files in the record data.\n * If there are any, upload them and replace the file by its URL.\n */\nconst uploadAllFiles = async (record, config) => {\n  for (let property in record) {\n    if (record.hasOwnProperty(property)) {\n      if (Array.isArray(record[property])) {\n        for (let i = 0; i < record[property].length; i++) {\n          if (isFile(record[property][i])) {\n            record[property][i] = await uploadFile(record[property][i].rawFile, config);\n          }\n        }\n      } else {\n        if (isFile(record[property])) {\n          record[property] = await uploadFile(record[property].rawFile, config);\n        }\n      }\n    }\n  }\n  return record;\n};\n\nexport default uploadAllFiles;\n","const getServerKeyFromType = (type, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    return dataServers[key][type];\n  });\n};\n\nexport default getServerKeyFromType;\n","import getServerKeyFromType from './getServerKeyFromType';\n\nconst parseServerKey = (serverKey, dataServers) => {\n  switch (serverKey) {\n    case '@default':\n      return getServerKeyFromType('default', dataServers);\n    case '@pod':\n      return getServerKeyFromType('pod', dataServers);\n    case '@authServer':\n      return getServerKeyFromType('authServer', dataServers);\n    default:\n      return serverKey;\n  }\n};\n\n// Return the list of servers keys in an array\n// parsing keywords like @all, @default, @pod and @authServer\nconst parseServerKeys = (serverKeys, dataServers) => {\n  if (Array.isArray(serverKeys)) {\n    if (serverKeys.includes('@all')) {\n      return Object.keys(dataServers);\n    } else {\n      return serverKeys.map(serverKey => parseServerKey(serverKey, dataServers));\n    }\n  } else if (typeof serverKeys === 'string') {\n    if (serverKeys === '@all') {\n      return Object.keys(dataServers);\n    } else if (serverKeys === '@remote') {\n      const defaultServerKey = getServerKeyFromType('default', dataServers);\n      return Object.keys(dataServers).filter(serverKey => serverKey !== defaultServerKey);\n    } else {\n      return [parseServerKey(serverKeys, dataServers)];\n    }\n  } else {\n    // If server key is empty\n    return false;\n  }\n};\n\nexport default parseServerKeys;\n","import urlJoin from 'url-join';\nimport parseServerKeys from './parseServerKeys';\n\nconst findContainersWithTypes = (types, serverKeys, dataServers) => {\n  let containers = {};\n  let existingContainers = [];\n\n  serverKeys = parseServerKeys(serverKeys, dataServers);\n\n  Object.keys(dataServers).forEach(key1 => {\n    Object.keys(dataServers[key1].containers).forEach(key2 => {\n      if (!serverKeys || serverKeys.includes(key2)) {\n        Object.keys(dataServers[key1].containers[key2]).forEach(type => {\n          if (types.includes(type)) {\n            dataServers[key1].containers[key2][type].map(path => {\n              const containerUri = urlJoin(dataServers[key2].baseUrl, path);\n\n              // Avoid returning the same container several times\n              if (!existingContainers.includes(containerUri)) {\n                existingContainers.push(containerUri);\n\n                if (!containers[key1]) containers[key1] = [];\n                containers[key1].push(containerUri);\n              }\n            });\n          }\n        });\n      }\n    });\n  });\n  return containers;\n};\n\nexport default findContainersWithTypes;\n","import urlJoin from 'url-join';\nimport getOne from './getOne';\nimport uploadAllFiles from '../utils/uploadAllFiles';\nimport findContainersWithTypes from '../utils/findContainersWithTypes';\n\nconst createMethod = config => async (resourceId, params) => {\n  const { dataServers, resources, httpClient, jsonContext } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const headers = new Headers();\n\n  let containerUri, serverKey;\n  if (dataModel.create?.container) {\n    serverKey = Object.keys(dataModel.create.container)[0];\n    containerUri = urlJoin(dataServers[serverKey].baseUrl, Object.values(dataModel.create.container)[0]);\n  } else {\n    serverKey = dataModel.create?.server || Object.keys(dataServers).find(key => dataServers[key].default === true);\n    if (!serverKey) throw new Error('You must define a server for the creation, or a container, or a default server');\n\n    const containers = findContainersWithTypes(dataModel.types, [serverKey], dataServers);\n    // Extract the containerUri from the results (and ensure there is only one)\n    const serverKeys = Object.keys(containers);\n\n    if (!serverKeys || serverKeys.length === 0)\n      throw new Error(`No container with types ${JSON.stringify(dataModel.types)} found on server ${serverKey}`);\n    if (serverKeys.length > 1 || containers[serverKeys[0]].length > 1)\n      throw new Error(\n        `More than one container detected with types ${JSON.stringify(dataModel.types)} on server ${serverKey}`\n      );\n    containerUri = containers[serverKeys[0]][0];\n  }\n\n  if (params.data) {\n    if (dataModel.fieldsMapping?.title) {\n      if (Array.isArray(dataModel.fieldsMapping.title)) {\n        headers.set('Slug', dataModel.fieldsMapping.title.map(f => params.data[f]).join(' '));\n      } else {\n        headers.set('Slug', params.data[dataModel.fieldsMapping.title]);\n      }\n    }\n\n    // Upload files, if there are any\n    params.data = await uploadAllFiles(params.data, config);\n\n    const { headers: responseHeaders } = await httpClient(containerUri, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({\n        '@context': jsonContext,\n        '@type': dataModel.types,\n        ...params.data\n      })\n    });\n\n    // Retrieve newly-created resource\n    const resourceUri = responseHeaders.get('Location');\n    return await getOne(config)(resourceId, { id: resourceUri });\n  } else if (params.id) {\n    headers.set('Content-Type', 'application/sparql-update');\n\n    await httpClient(containerUri, {\n      method: 'PATCH',\n      headers,\n      body: `\n        PREFIX ldp: <http://www.w3.org/ns/ldp#>\n        INSERT DATA { <${containerUri}> ldp:contains <${params.id}>. };\n      `,\n    });\n\n    // Create must return the new data, so get them from the remote URI\n    return await getOne(config)(resourceId, { id: params.id });\n  }\n};\n\nexport default createMethod;\n","const deleteMethod = config => async (resourceId, params) => {\n  const { httpClient } = config;\n\n  await httpClient(params.id, {\n    method: 'DELETE'\n  });\n\n  return { data: { id: params.id } };\n};\n\nexport default deleteMethod;\n","const deleteManyMethod = config => async (resourceId, params) => {\n  const { httpClient } = config;\n  let ids = [];\n\n  for (let id of params.ids) {\n    try {\n      await httpClient(id, {\n        method: 'DELETE'\n      });\n      ids.push(id);\n    } catch (e) {\n      // Do nothing if we fail to delete a resource\n    }\n  }\n\n  return { data: ids };\n};\n\nexport default deleteManyMethod;\n","const getDataServers = config => () => {\n  return config.dataServers;\n};\n\nexport default getDataServers;\n","const getDataModels = config => () => {\n  return config.resources;\n};\n\nexport default getDataModels;\n","import jsonld from 'jsonld';\nimport isobject from 'isobject';\n\nexport const isType = (type, resource) => {\n  const resourceType = resource.type || resource['@type'];\n  return Array.isArray(resourceType) ? resourceType.includes(type) : resourceType === type;\n};\n\nconst fetchContainers = async (containers, resourceId, params, config) => {\n  const { httpClient, jsonContext } = config;\n\n  // Transform in an containerUri:serverKey object\n  const containersServers = Object.keys(containers).reduce(\n    (acc, serverKey) => ({\n      ...acc,\n      ...Object.fromEntries(containers[serverKey].map(containerUri => [containerUri, serverKey]))\n    }),\n    {}\n  );\n\n  const fetchPromises = Object.keys(containersServers).map(containerUri =>\n    httpClient(containerUri)\n      .then(({ json }) => {\n        // If container's context is different, compact it to have an uniform result\n        // TODO deep compare if the context is an object\n        if (json['@context'] !== jsonContext) {\n          return jsonld.compact(json, jsonContext);\n        } else {\n          return json;\n        }\n      })\n      .then(json => {\n        if (isType('ldp:Container', json)) {\n          return json['ldp:contains'];\n        } else {\n          throw new Error(containerUri + ' is not a LDP container');\n        }\n      })\n  );\n\n  // Fetch simultaneously all containers\n  let results = await Promise.all(fetchPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat.apply(...results);\n\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // Apply filter to results\n    if (params.filter) {\n      // For SPARQL queries, we use \"a\" to filter types, but in containers it must be \"type\"\n      if (params.filter.a) {\n        params.filter.type = params.filter.a;\n        delete params.filter.a;\n      }\n\n      if (Object.keys(params.filter).length > 0) {\n        returnData = returnData.filter(resource => {\n          return Object.entries(params.filter).some(([k, v]) => {\n            if (k == 'q') {\n              // if fiter is q, all properties have to be checked\n              return Object.entries(resource).some(([kr, vr]) => {\n                if (!isobject(vr)) {\n                  return Array.isArray(vr) ? vr.some(va => va.includes(v)) : vr.includes(v);\n                } else {\n                  return false;\n                }\n              });\n            } else {\n              return Array.isArray(resource[k]) ? resource[k].includes(v) : resource[k].includes(v);\n            }\n          });\n        });\n      }\n    }\n\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] && b[params.sort.field]) {\n          if (params.sort.order === 'ASC') {\n            return a[params.sort.field].localeCompare(b[params.sort.field]);\n          } else {\n            return b[params.sort.field].localeCompare(a[params.sort.field]);\n          }\n        } else {\n          return true;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchContainers;\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nexport default function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","const getEmbedFrame = blankNodes => {\n  let embedFrame = {},\n    predicates;\n  if (blankNodes) {\n    for (let blankNode of blankNodes) {\n      if (blankNode.includes('/')) {\n        predicates = blankNode.split('/').reverse();\n      } else {\n        predicates = [blankNode];\n      }\n      embedFrame = {\n        ...embedFrame,\n        ...predicates.reduce(\n          (accumulator, predicate) => ({\n            [predicate]: {\n              '@embed': '@last',\n              ...accumulator\n            }\n          }),\n          {}\n        )\n      };\n    }\n    return embedFrame;\n  }\n};\n\nexport default getEmbedFrame;\n","const resolvePrefix = (item, ontologies) => {\n  if (item.startsWith('http://') || item.startsWith('https://')) {\n    // Already resolved, return the URI\n    return item;\n  } else if (item === 'a') {\n    // Special case\n    return 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n  } else {\n    const [prefix, value] = item.split(':');\n    if (value) {\n      const ontology = ontologies.find(ontology => ontology.prefix === prefix);\n      if (ontology) {\n        return ontology.url + value;\n      } else {\n        throw new Error('No ontology found with prefix ' + prefix);\n      }\n    } else {\n      throw new Error(`The value \"${item}\" is not correct. It must include a prefix or be a full URI.`);\n    }\n  }\n};\n\nexport default resolvePrefix;\n","import { namedNode, triple, variable } from '@rdfjs/data-model';\nimport resolvePrefix from './resolvePrefix';\n\nconst defaultToArray = value => (!value ? [] : Array.isArray(value) ? value : [value]);\n\n// We need to always include the type or React-Admin will not work properly\nconst typeQuery = triple(\n  variable('s1'),\n  namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'),\n  variable('type')\n);\n\nconst buildBaseQuery = (predicates, ontologies) => {\n  let baseTriples;\n  if (predicates) {\n    baseTriples = defaultToArray(predicates).map((predicate, i) =>\n      triple(variable('s1'), namedNode(resolvePrefix(predicate, ontologies)), variable('o' + (i + 1)))\n    );\n    return {\n      construct: [typeQuery, ...baseTriples],\n      where: [typeQuery, ...baseTriples.map(triple => ({ type: 'optional', patterns: [triple] }))]\n    };\n  } else {\n    baseTriples = [triple(variable('s1'), variable('p1'), variable('o1'))];\n    return {\n      construct: baseTriples,\n      where: baseTriples\n    };\n  }\n};\n\nexport default buildBaseQuery;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","import md5 from 'crypto-js/md5';\nimport { namedNode, triple, variable } from '@rdfjs/data-model';\nimport resolvePrefix from './resolvePrefix';\n\n// Transform ['ont:predicate1/ont:predicate2'] to ['ont:predicate1', 'ont:predicate1/ont:predicate2']\nconst extractNodes = blankNodes => {\n  let nodes = [];\n  if (blankNodes) {\n    for (let predicate of blankNodes) {\n      if (predicate.includes('/')) {\n        const nodeNames = predicate.split('/');\n        for (let i = 1; i <= nodeNames.length; i++) {\n          nodes.push(nodeNames.slice(0, i).join('/'));\n        }\n      } else {\n        nodes.push(predicate);\n      }\n    }\n  }\n  return nodes;\n};\n\nconst generateSparqlVarName = node => md5(node);\n\nconst getParentNode = node => node.includes('/') && node.split('/')[0];\n\nconst getPredicate = node => (node.includes('/') ? node.split('/')[1] : node);\n\nconst buildUnionQuery = queries =>\n  queries.map(q => {\n    let triples = q.query;\n    const firstTriple = queries.find(q2 => q.parentNode === q2.node);\n    if (firstTriple !== undefined) {\n      triples = triples.concat(firstTriple.query[0]);\n    }\n    return {\n      type: 'bgp',\n      triples\n    };\n  });\n\nconst buildBlankNodesQuery = (blankNodes, baseQuery, ontologies) => {\n  let queries = [];\n  const nodes = extractNodes(blankNodes);\n\n  if (nodes && ontologies && ontologies.length > 0) {\n    for (let node of nodes) {\n      const parentNode = getParentNode(node);\n      const predicate = getPredicate(node);\n      const varName = generateSparqlVarName(node);\n      const parentVarName = parentNode ? generateSparqlVarName(parentNode) : '1';\n\n      const query = [\n        triple(variable('s' + parentVarName), namedNode(resolvePrefix(predicate, ontologies)), variable('s' + varName)),\n        triple(variable('s' + varName), variable('p' + varName), variable('o' + varName))\n      ];\n\n      queries.push({\n        node,\n        parentNode,\n        query,\n        filter: '' // `FILTER(isBLANK(?s${varName})) .`\n      });\n    }\n\n    return {\n      construct: queries.length > 0 ? queries.map(q => q.query).reduce((pre, cur) => pre.concat(cur)) : null,\n      where: {\n        type: 'union',\n        patterns: [baseQuery.where, ...buildUnionQuery(queries)]\n      }\n    };\n  } else {\n    return {\n      construct: '',\n      where: ''\n    };\n  }\n};\n\nexport default buildBlankNodesQuery;\n","import DataFactory from '@rdfjs/data-model';\nimport buildBaseQuery from './buildBaseQuery';\nimport buildBlankNodesQuery from './buildBlankNodesQuery';\nimport resolvePrefix from './resolvePrefix';\nconst { literal, namedNode, triple, variable } = DataFactory;\n\nconst SparqlGenerator = require('sparqljs').Generator;\nconst generator = new SparqlGenerator({\n  /* prefixes, baseIRI, factory, sparqlStar */\n});\n\nconst reservedFilterKeys = ['q', 'sparqlWhere', 'blankNodes', '_servers', '_predicates'];\n\nconst buildSparqlQuery = ({ containers, params: { filter }, blankNodes, predicates, ontologies }) => {\n  const baseQuery = buildBaseQuery(predicates, ontologies);\n\n  let sparqlJsParams = {\n    queryType: 'CONSTRUCT',\n    template: baseQuery.construct,\n    where: [],\n    type: 'query',\n    prefixes: Object.fromEntries(ontologies.map(ontology => [ontology.prefix, ontology.url]))\n  };\n\n  let containerWhere = [\n    {\n      type: 'values',\n      values: containers.map(containerUri => ({ '?containerUri': namedNode(containerUri) }))\n    },\n    triple(variable('containerUri'), namedNode('http://www.w3.org/ns/ldp#contains'), variable('s1')),\n    {\n      type: 'filter',\n      expression: {\n        type: 'operation',\n        operator: 'isiri',\n        args: [variable('s1')]\n      }\n    }\n  ];\n\n  let resourceWhere = [];\n\n  if (filter && Object.keys(filter).length > 0) {\n    const hasSPARQLFilter = filter.sparqlWhere && Object.keys(filter.sparqlWhere).length > 0;\n    const hasFullTextSearch = filter.q && filter.q.length > 0;\n\n    if (hasSPARQLFilter) {\n      /* \n        Example of usage :\n        {\n          \"sparqlWhere\": {\n            \"type\": \"bgp\",\n            \"triples\": [{\n              \"subject\": {\"termType\": \"Variable\", \"value\": \"s1\"},\n              \"predicate\": {\"termType\": \"NameNode\", \"value\": \"http://virtual-assembly.org/ontologies/pair#label\"},\n              \"object\": {\"termType\": \"Literal\", \"value\": \"My Organization\"}\n            }]\n          }\n        }\n      */\n      // initialize array in case of single value :\n      [].concat(filter.sparqlWhere).forEach(sw => {\n        resourceWhere.push(sw);\n      });\n    }\n\n    if (hasFullTextSearch) {\n      resourceWhere.push({\n        type: 'group',\n        patterns: [\n          {\n            queryType: 'SELECT',\n            variables: [variable('s1')],\n            where: [\n              triple(variable('s1'), variable('p1'), variable('o1')),\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'isliteral',\n                  args: [variable('o1')]\n                }\n              },\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'regex',\n                  args: [\n                    {\n                      type: 'operation',\n                      operator: 'lcase',\n                      args: [\n                        {\n                          type: 'operation',\n                          operator: 'str',\n                          args: [variable('o1')]\n                        }\n                      ]\n                    },\n                    literal(filter.q.toLowerCase(), '', namedNode('http://www.w3.org/2001/XMLSchema#string'))\n                  ]\n                }\n              }\n            ],\n            type: 'query'\n          }\n        ]\n      });\n    }\n\n    // Other filters\n    // SPARQL keyword a = filter based on the class of a resource (example => 'a': 'pair:OrganizationType')\n    // Other filters are based on a value (example => 'petr:hasAudience': 'http://localhost:3000/audiences/tout-public')\n    Object.entries(filter).forEach(([predicate, object]) => {\n      if (!reservedFilterKeys.includes(predicate)) {\n        resourceWhere.unshift(\n          triple(\n            variable('s1'),\n            namedNode(resolvePrefix(predicate, ontologies)),\n            namedNode(resolvePrefix(object, ontologies))\n          )\n        );\n      }\n    });\n  }\n\n  // Blank nodes\n  const blankNodesQuery = buildBlankNodesQuery(blankNodes, baseQuery, ontologies);\n  if (blankNodesQuery && blankNodesQuery.construct) {\n    resourceWhere = resourceWhere.concat(blankNodesQuery.where);\n    sparqlJsParams.template = sparqlJsParams.template.concat(blankNodesQuery.construct);\n  } else {\n    resourceWhere.push(baseQuery.where);\n  }\n\n  sparqlJsParams.where.push(\n    {\n      type: 'union',\n      patterns: [\n        containerWhere,\n        {\n          type: 'graph',\n          name: namedNode('http://semapps.org/mirror'),\n          patterns: containerWhere\n        }\n      ]\n    },\n    {\n      type: 'union',\n      patterns: [\n        resourceWhere,\n        {\n          type: 'graph',\n          name: namedNode('http://semapps.org/mirror'),\n          patterns: resourceWhere\n        }\n      ]\n    }\n  );\n\n  return generator.stringify(sparqlJsParams);\n};\n\nexport default buildSparqlQuery;\n","// Based on the dataServers config, returns the blank nodes for the given containers\nconst getBlankNodesFromDataServers = (containers, dataServers) => {\n  const blankNodes = [];\n  for (let serverKey of Object.keys(dataServers)) {\n    if (dataServers[serverKey].blankNodes) {\n      for (let containerUri of Object.keys(dataServers[serverKey].blankNodes)) {\n        if (containers.includes(containerUri)) {\n          blankNodes.push(...dataServers[serverKey].blankNodes[containerUri]);\n        }\n      }\n    }\n  }\n  // Remove duplicates\n  return [...new Set(blankNodes)];\n};\n\nexport default getBlankNodesFromDataServers;\n","import getEmbedFrame from './getEmbedFrame';\nimport buildSparqlQuery from './buildSparqlQuery';\nimport getBlankNodesFromDataServers from './getBlankNodesFromDataServers';\nimport jsonld from 'jsonld';\n\nconst compare = (a, b) => {\n  switch (typeof a) {\n    case 'string':\n      return a.localeCompare(b);\n    case 'number':\n    case 'bigint':\n      return a - b;\n    default:\n      return 0;\n  }\n};\n\nconst fetchSparqlEndpoints = async (containers, resourceId, params, config) => {\n  const { dataServers, resources, httpClient, jsonContext, ontologies } = config;\n  const dataModel = resources[resourceId];\n\n  const sparqlQueryPromises = Object.keys(containers).map(\n    serverKey =>\n      new Promise((resolve, reject) => {\n        const blankNodes =\n          params.filter?.blankNodes ||\n          dataModel.list?.blankNodes ||\n          getBlankNodesFromDataServers(containers[serverKey], dataServers);\n\n        const predicates = params.filter?._predicates || dataModel.list?.predicates;\n\n        // When the SPARQL request comes from the browser's URL, it comes as JSON string which must must be parsed\n        if (params.filter?.sparqlWhere && (typeof params.filter.sparqlWhere === 'string' || params.filter.sparqlWhere instanceof String)) {\n          params.filter.sparqlWhere = JSON.parse(decodeURIComponent(params.filter.sparqlWhere));\n        }\n        const sparqlQuery = buildSparqlQuery({\n          containers: containers[serverKey],\n          params: { ...params, filter: { ...dataModel.list?.filter, ...params.filter } },\n          blankNodes,\n          predicates,\n          ontologies\n        });\n\n        httpClient(dataServers[serverKey].sparqlEndpoint, {\n          method: 'POST',\n          body: sparqlQuery\n        })\n          .then(({ json }) => {\n            // By default, embed only the blank nodes we explicitly asked to dereference\n            // Otherwise we may have same-type resources embedded in other resources\n            // To increase performances, you can set explicitEmbedOnFraming to false (make sure the result is still OK)\n            const frame =\n              dataModel.list?.explicitEmbedOnFraming !== false\n                ? {\n                    '@context': jsonContext,\n                    '@type': dataModel.types,\n                    '@embed': '@never',\n                    ...getEmbedFrame(blankNodes)\n                  }\n                : {\n                    '@context': jsonContext,\n                    '@type': dataModel.types\n                  };\n\n            // omitGraph option force results to be in a @graph, even if we have a single result\n            return jsonld.frame(json, frame, { omitGraph: false });\n          })\n          .then(compactJson => {\n            if (compactJson['@id']) {\n              const { '@context': context, ...rest } = compactJson;\n              compactJson = {\n                '@context': context,\n                '@graph': [rest]\n              };\n            }\n            resolve(compactJson['@graph'] || []);\n          })\n          .catch(e => reject(e));\n      })\n  );\n\n  // Run simultaneous SPARQL queries\n  let results = await Promise.all(sparqlQueryPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat(...results);\n\n    // Add id in addition to @id, as this is what React-Admin expects\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // TODO sort and paginate the results in the SPARQL query to improve performances\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] !== undefined && b[params.sort.field] !== undefined) {\n          if (params.sort.order === 'ASC') {\n            return compare(a[params.sort.field], b[params.sort.field]);\n          } else {\n            return compare(b[params.sort.field], a[params.sort.field]);\n          }\n        } else {\n          return 0;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchSparqlEndpoints;\n","import urlJoin from 'url-join';\n\nconst findContainersWithPaths = (paths, dataServers) => {\n  let containers = {};\n  Object.keys(paths).forEach(serverKey => {\n    if (dataServers[serverKey]) {\n      containers[serverKey] = [];\n      paths[serverKey].forEach(path => {\n        containers[serverKey].push(urlJoin(dataServers[serverKey].baseUrl, path));\n      });\n    } else {\n      throw new Error('No server found with key ' + serverKey);\n    }\n  });\n  return containers;\n};\n\nexport default findContainersWithPaths;\n","import findContainersWithTypes from '../utils/findContainersWithTypes';\nimport fetchContainers from '../utils/fetchContainers';\nimport fetchSparqlEndpoints from '../utils/fetchSparqlEndpoints';\nimport findContainersWithPaths from '../utils/findContainersWithPath';\n\nconst getListMethod = config => async (resourceId, params = {}) => {\n  let { dataServers, resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  let containers;\n  if (!params.filter?._servers && dataModel.list?.containers) {\n    if (Array.isArray(dataModel.list?.containers))\n      throw new Error(\n        `The list.containers property of ${resourceId} dataModel must be of type object ({ serverKey: [containerUri] })`\n      );\n    // If containers are set explicitly, use them\n    containers = findContainersWithPaths(dataModel.list.containers, dataServers);\n  } else {\n    // Otherwise find the container URIs on the given servers (either in the filter or the data model)\n    containers = findContainersWithTypes(\n      dataModel.types,\n      params.filter?._servers || dataModel.list?.servers,\n      dataServers\n    );\n  }\n\n  if (dataModel.list?.fetchContainer) {\n    return fetchContainers(containers, resourceId, params, config);\n  } else {\n    return fetchSparqlEndpoints(containers, resourceId, params, config);\n  }\n};\n\nexport default getListMethod;\n","import getOne from './getOne';\n\nconst getManyMethod = config => async (resourceId, params) => {\n  const { returnFailedResources } = config;\n\n  let returnData = await Promise.all(\n    params.ids.map(id =>\n      getOne(config)(resourceId, { id: typeof id === 'object' ? id['@id'] : id })\n        .then(({ data }) => data)\n        .catch(() => {\n          // Catch if one resource fails to load\n          // Otherwise no references will be show if only one is missing\n          // See https://github.com/marmelab/react-admin/issues/5190\n          if (returnFailedResources) {\n            return { id, _error: true };\n          } else {\n            // Returning nothing\n          }\n        })\n    )\n  );\n\n  // We don't want undefined results to appear in the results as it will break with react-admin\n  returnData = returnData.filter(e => e);\n\n  return { data: returnData };\n};\n\nexport default getManyMethod;\n","import getList from './getList';\n\nconst getManyReferenceMethod = config => async (resourceId, params) => {\n  params.filter = { ...params.filter, [params.target]: params.id };\n  delete params.target;\n  return await getList(config)(resourceId, params);\n};\n\nexport default getManyReferenceMethod;\n","import uploadAllFiles from '../utils/uploadAllFiles';\n\nconst updateMethod = config => async (resourceId, params) => {\n  const { httpClient, jsonContext } = config;\n\n  // Upload files, if there are any\n  params.data = await uploadAllFiles(params.data, config);\n\n  await httpClient(params.id, {\n    method: 'PUT',\n    body: JSON.stringify({\n      '@context': jsonContext,\n      ...params.data\n    })\n  });\n\n  return { data: params.data };\n};\n\nexport default updateMethod;\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import jwtDecode from 'jwt-decode';\nimport getServerKeyFromType from './getServerKeyFromType';\nimport urlJoin from 'url-join';\n\nconst fetchUserConfig = async config => {\n  const { dataServers, httpClient } = config;\n  const token = localStorage.getItem('token');\n  const podKey = getServerKeyFromType('pod', dataServers);\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n\n  // If the user is logged in\n  if (token) {\n    const { webId } = jwtDecode(token);\n    let userData;\n\n    try {\n      const { json } = await httpClient(webId);\n      userData = json;\n    } catch (e) {\n      console.error(e);\n      // If the webId cannot be fetched, assume an invalid token and disconnect the user\n      localStorage.clear();\n      window.location.reload();\n      return;\n    }\n\n    // If we have a POD server\n    if (podKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[podKey].name = 'My Pod';\n      config.dataServers[podKey].baseUrl = urlJoin(webId, 'data'); // TODO find POD URI from user profile\n      config.dataServers[podKey].sparqlEndpoint =\n        userData.endpoints?.['void:sparqlEndpoint'] || urlJoin(webId, 'sparql');\n    }\n\n    if (authServerKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[authServerKey].proxyUrl = userData.endpoints?.proxyUrl;\n    }\n  } else {\n    // if (podKey) {\n    //   // If the user is not logged in, ignore the POD server\n    //   delete config.dataServers[podKey];\n    // }\n  }\n};\n\nexport default fetchUserConfig;\n","const defaultToArray = value => (!value ? undefined : Array.isArray(value) ? value : [value]);\n\nconst fetchVoidEndpoints = async config => {\n  const fetchPromises = Object.entries(config.dataServers)\n    .filter(([key, server]) => server.pod !== true)\n    .map(([key, server]) =>\n      config\n        .httpClient((new URL('/.well-known/void', server.baseUrl)).toString())\n        .then(result => ({ key, datasets: result.json['@graph'] }))\n        .catch(e => {\n          if (e.status === 404 || e.status === 401) {\n            return { key, error: e };\n          } else {\n            throw e;\n          }\n        })\n    );\n\n  let results = [];\n\n  try {\n    results = await Promise.all(fetchPromises);\n  } catch (e) {\n    // Do not throw error if no endpoint found\n  }\n\n  for (let result of results) {\n    config.dataServers[result.key].containers = config.dataServers[result.key].containers || {};\n    config.dataServers[result.key].blankNodes = config.dataServers[result.key].blankNodes || {};\n\n    // Ignore unfetchable endpoints\n    if (result.datasets) {\n      for (let dataset of result.datasets) {\n        const datasetServerKey = Object.keys(config.dataServers).find(\n          key => dataset['void:uriSpace'] === config.dataServers[key].baseUrl\n        );\n\n        // If the dataset is not part of a server mapped in the dataServers, ignore it\n        if (datasetServerKey) {\n          // If this is the local dataset, add the base information\n          if (datasetServerKey === result.key) {\n            config.dataServers[result.key].name = config.dataServers[result.key].name || dataset['dc:title'];\n            config.dataServers[result.key].description =\n              config.dataServers[result.key].description || dataset['dc:description'];\n            config.dataServers[result.key].sparqlEndpoint =\n              config.dataServers[result.key].sparqlEndpoint || dataset['void:sparqlEndpoint'];\n          }\n\n          config.dataServers[result.key].containers[datasetServerKey] =\n            config.dataServers[result.key].containers[datasetServerKey] || {};\n\n          for (let partition of defaultToArray(dataset['void:classPartition'])) {\n            for (let type of defaultToArray(partition['void:class'])) {\n              // Set containers by type\n              const path = partition['void:uriSpace'].replace(dataset['void:uriSpace'], '/');\n              if (config.dataServers[result.key].containers[datasetServerKey][type]) {\n                config.dataServers[result.key].containers[datasetServerKey][type].push(path);\n              } else {\n                config.dataServers[result.key].containers[datasetServerKey][type] = [path];\n              }\n\n              // Set blank nodes by containers\n              const blankNodes = defaultToArray(partition['semapps:blankNodes']);\n              if (blankNodes) {\n                config.dataServers[result.key].blankNodes[partition['void:uriSpace']] = defaultToArray(\n                  partition['semapps:blankNodes']\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default fetchVoidEndpoints;\n","// Return the first server matching with the baseUrl\nconst getServerKeyFromUri = (uri, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    if (dataServers[key].pod) {\n      // The baseUrl ends with /data so remove this part to match with the webId and webId-related URLs (/inbox, /outbox...)\n      return dataServers[key].baseUrl && uri.startsWith(dataServers[key].baseUrl.replace('/data', ''));\n    } else {\n      return uri.startsWith(dataServers[key].baseUrl);\n    }\n  });\n};\n\nexport default getServerKeyFromUri;\n","import createMethod from './methods/create';\nimport deleteMethod from './methods/delete';\nimport deleteManyMethod from './methods/deleteMany';\nimport getDataServersMethod from './methods/getDataServers';\nimport getDataModelsMethod from './methods/getDataModels';\nimport getListMethod from './methods/getList';\nimport getManyMethod from './methods/getMany';\nimport getManyReferenceMethod from './methods/getManyReference';\nimport getOneMethod from './methods/getOne';\nimport updateMethod from './methods/update';\nimport fetchUserConfig from './utils/fetchUserConfig';\nimport fetchVoidEndpoints from './utils/fetchVoidEndpoints';\nimport getServerKeyFromType from './utils/getServerKeyFromType';\nimport httpClient from \"./httpClient\";\n\nconst dataProvider = config => {\n  // TODO verify all data provider config + data models\n  if (!getServerKeyFromType('default', config.dataServers))\n    throw new Error('You must define a default server in your dataServers config');\n\n  if (!config.jsonContext) config.jsonContext = Object.fromEntries(config.ontologies.map(o => [o.prefix, o.url]));\n  if (!config.returnFailedResources) config.returnFailedResources = false;\n\n  // Configure httpClient with data servers (this is needed for proxy calls)\n  config.httpClient = httpClient(config.dataServers);\n\n  const fetchUserConfigPromise = fetchUserConfig(config);\n  const fetchVoidEndpointsPromise = fetchVoidEndpoints(config);\n\n  const waitForVoidEndpoints = method => async (...arg) => {\n    await fetchUserConfigPromise;\n    await fetchVoidEndpointsPromise; // Return immediately if promise is fulfilled\n    return await method(...arg);\n  };\n\n  return {\n    getList: waitForVoidEndpoints(getListMethod(config)),\n    getMany: waitForVoidEndpoints(getManyMethod(config)),\n    getManyReference: waitForVoidEndpoints(getManyReferenceMethod(config)),\n    getOne: waitForVoidEndpoints(getOneMethod(config)),\n    create: waitForVoidEndpoints(createMethod(config)),\n    update: waitForVoidEndpoints(updateMethod(config)),\n    updateMany: () => {\n      throw new Error('updateMany is not implemented yet');\n    },\n    delete: waitForVoidEndpoints(deleteMethod(config)),\n    deleteMany: waitForVoidEndpoints(deleteManyMethod(config)),\n    // Custom methods\n    getDataModels: waitForVoidEndpoints(getDataModelsMethod(config)),\n    getDataServers: waitForVoidEndpoints(getDataServersMethod(config)),\n    getLocalDataServers: getDataServersMethod(config),\n    fetch: waitForVoidEndpoints(config.httpClient)\n  };\n};\n\nexport default dataProvider;\n","import { fetchUtils } from 'react-admin';\nimport getServerKeyFromUri from \"./utils/getServerKeyFromUri\";\nimport getServerKeyFromType from \"./utils/getServerKeyFromType\";\n\n/*\n * HTTP client used by all calls in data provider and auth provider\n * Do proxy calls if a proxy endpoint is available and the server is different from the auth server\n */\nconst httpClient = dataServers => (url, options = {}) => {\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n  const serverKey = getServerKeyFromUri(url, dataServers);\n  const useProxy = serverKey !== authServerKey && dataServers[authServerKey]?.proxyUrl && dataServers[serverKey]?.noProxy !== true;\n\n  if (!options.headers) options.headers = new Headers();\n\n  switch (options.method) {\n    case 'POST':\n    case 'PATCH':\n    case 'PUT':\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      if (!options.headers.has('Content-Type')) options.headers.set('Content-Type', 'application/ld+json');\n      break;\n\n    case 'DELETE':\n      break;\n\n    case 'GET':\n    default:\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      break;\n  }\n\n  if (useProxy) {\n    const formData  = new FormData();\n\n    formData.append('id', url);\n    formData.append('method', options.method || 'GET');\n    formData.append('headers', JSON.stringify(Object.fromEntries(options.headers.entries())));\n\n    if (options.body) {\n      if (options.body instanceof File) {\n        formData.append('body', options.body, options.body.name);\n      } else {\n        formData.append('body', options.body);\n      }\n    }\n\n    // Post to proxy endpoint with multipart/form-data format\n    return fetchUtils.fetchJson(dataServers[authServerKey].proxyUrl, {\n      method: 'POST',\n      headers: new Headers({\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }),\n      body: formData\n    });\n  } else {\n    // Add token if the server is the same as the auth server\n    if (serverKey === authServerKey) {\n      const token = localStorage.getItem('token');\n      if (token) options.headers.set('Authorization', `Bearer ${token}`);\n    }\n    return fetchUtils.fetchJson(url, options);\n  }\n};\n\nexport default httpClient;\n","import { useCallback, useMemo, useContext } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst compute = (externalLinks, record) =>\n  typeof externalLinks === 'function' ? externalLinks(record) : externalLinks;\nconst isURL = url => typeof url === 'string' && url.startsWith('http');\n\nconst useGetExternalLink = componentExternalLinks => {\n  // Since the externalLinks config is defined only locally, we don't need to wait for VOID endpoints fetching\n  const dataProvider = useContext(DataProviderContext);\n  const dataServers = dataProvider.getLocalDataServers();\n\n  const serversExternalLinks = useMemo(() => {\n    if (dataServers) {\n      return Object.fromEntries(\n        Object.values(dataServers).map(server => {\n          // If externalLinks is not defined in the data server, use external links for non-default servers\n          const externalLinks = server.externalLinks !== undefined ? server.externalLinks : !server.default;\n          return [server.baseUrl, externalLinks];\n        })\n      );\n    }\n  }, [dataServers]);\n\n  return useCallback(\n    record => {\n      const computedComponentExternalLinks = compute(componentExternalLinks, record);\n      // If the component explicitly asks not to display as external links, use an internal link\n      if (computedComponentExternalLinks === false) return false;\n\n      if (!record?.id) return false;\n\n      const serverBaseUrl = Object.keys(serversExternalLinks).find(baseUrl => record?.id.startsWith(baseUrl));\n      // If no matching data servers could be found, assume we have an internal link\n      if (!serverBaseUrl) return false;\n\n      const computedServerExternalLinks = compute(serversExternalLinks[serverBaseUrl], record);\n      // If the data server explicitly asks not to display as external links, use an internal link\n      if (computedServerExternalLinks === false) return false;\n\n      if (isURL(computedComponentExternalLinks)) {\n        return computedComponentExternalLinks;\n      } else if (isURL(computedServerExternalLinks)) {\n        return computedServerExternalLinks;\n      } else {\n        return record.id;\n      }\n    },\n    [serversExternalLinks, componentExternalLinks]\n  );\n};\n\nexport default useGetExternalLink;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataModel = resourceId => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataModel, setDataModel] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataModels().then(results => setDataModel(results[resourceId]));\n  }, [dataProvider, resourceId, setDataModel]);\n\n  return dataModel;\n};\n\nexport default useDataModel;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataServers = () => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataServers, setDataServers] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataServers().then(results => setDataServers(results));\n  }, [dataProvider, setDataServers]);\n\n  return dataServers;\n};\n\nexport default useDataServers;\n","import { useState, useEffect } from 'react';\nimport useDataModel from './useDataModel';\nimport useDataServers from './useDataServers';\nimport findContainersWithTypes from '../dataProvider/utils/findContainersWithTypes';\n\nconst useContainers = (resourceId, serverKeys = '@all') => {\n  const dataModel = useDataModel(resourceId);\n  const dataServers = useDataServers();\n  const [containers, setContainers] = useState();\n\n  useEffect(() => {\n    if (dataModel && dataServers) {\n      setContainers(findContainersWithTypes(dataModel.types, serverKeys, dataServers));\n    }\n  }, [dataModel, dataServers, serverKeys]);\n\n  return containers;\n};\n\nexport default useContainers;\n","import urlJoin from 'url-join';\n\nconst findCreateContainerWithTypes = (types, createServerKey, dataServers) => {\n  let containers = [];\n\n  if (Object.keys(dataServers[createServerKey].containers[createServerKey]).length > 0) {\n    Object.keys(dataServers[createServerKey].containers[createServerKey]).forEach(type => {\n      if (types.includes(type)) {\n        dataServers[createServerKey].containers[createServerKey][type].map(path => {\n          const containerUri = urlJoin(dataServers[createServerKey].baseUrl, path);\n          if (!containers.includes(containerUri)) {\n            containers.push(containerUri);\n          }\n        });\n      }\n    });\n  }\n\n  if (containers.length === 0) {\n    throw new Error(\n      `No container found matching with types ${JSON.stringify(\n        types\n      )}. You can set explicitely the create.container property of the resource.`\n    );\n  } else if (containers.length > 1) {\n    throw new Error(\n      `More than one container found matching with types ${JSON.stringify(\n        types\n      )}. You must set the create.server or create.container property for the resource.`\n    );\n  }\n\n  return containers[0];\n};\n\nexport default findCreateContainerWithTypes;\n","import { useState, useEffect } from 'react';\nimport urlJoin from 'url-join';\nimport useDataModel from './useDataModel';\nimport useDataServers from './useDataServers';\nimport findCreateContainerWithTypes from '../dataProvider/utils/findCreateContainerWithTypes';\nimport getServerKeyFromType from '../dataProvider/utils/getServerKeyFromType';\n\nconst useCreateContainer = resourceId => {\n  const dataModel = useDataModel(resourceId);\n  const dataServers = useDataServers();\n  const [createContainer, setCreateContainer] = useState();\n\n  useEffect(() => {\n    if (dataModel && dataServers) {\n      if (dataModel.create?.container) {\n        const [serverKey, path] = Object.entries(dataModel.create.container)[0];\n        if (!serverKey || !dataServers[serverKey]) {\n          throw new Error('Wrong key for the dataModel.create.container config of resource ' + resourceId);\n        }\n        setCreateContainer(urlJoin(dataServers[serverKey].baseUrl, path));\n      } else if (dataModel.create?.server) {\n        setCreateContainer(findCreateContainerWithTypes(dataModel.types, dataModel.create?.server, dataServers));\n      } else {\n        const defaultServerKey = getServerKeyFromType('default', dataServers);\n        setCreateContainer(findCreateContainerWithTypes(dataModel.types, defaultServerKey, dataServers));\n      }\n    }\n  }, [dataModel, dataServers, setCreateContainer]);\n\n  return createContainer;\n};\n\nexport default useCreateContainer;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataModels = () => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataModels, setDataModels] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataModels().then(results => setDataModels(results));\n  }, [dataProvider, setDataModels]);\n\n  return dataModels;\n};\n\nexport default useDataModels;\n","import React, { useState, useEffect } from 'react';\n\n/**\n * @example\n * <Show>\n *   <FilterHandler\n *     source=\"property\" // ex pair:organizationOfMembership\n *     filter={{\n *       'propertyToFilter':'value'\n *     }} // ex {{'pair:membershipRole':'http://localhost:3000/membership-roles/role-1'}}\n *     >\n *     <SingleFieldList>\n *    </SingleFieldList>\n *   </FilterHandler>\n * </Show>\n */\n\nconst FilterHandler = ({ children, record, filter, source, ...otherProps }) => {\n  const [filtered, setFiltered] = useState();\n  useEffect(() => {\n    if (record && source && Array.isArray(record?.[source])) {\n      const filteredData = record?.[source].filter(r => {\n        let eq = true;\n        for (const key in filter) {\n          const value = r[key];\n          if (Array.isArray(value)) {\n            if (!value.includes(filter[key])) {\n              eq = false;\n            }\n          } else {\n            if (value !== filter[key]) {\n              eq = false;\n            }\n          }\n        }\n        return eq;\n      });\n      let newRecord = {\n        ...record\n      };\n      //undefined setted if no data to obtain no render in RightLabel or equivalent\n      newRecord[source] = filteredData.length > 0 ? filteredData : undefined;\n      setFiltered(newRecord);\n    }\n  }, [record, source, filter]);\n\n  return (\n    <>\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          ...otherProps,\n          record: filtered,\n          addLabel: true,\n          source\n        });\n      })}\n    </>\n  );\n};\nexport default FilterHandler;\n","import React from 'react';\nimport { useQueryWithStore } from 'react-admin';\nimport { default as FilterHandler } from './FilterHandler';\n\n/*\n * @example Label used in examples\n *  const Label = ({label, ...otherProps})=>{\n *     return <h2>{label}</h2>\n *  }\n *\n * @example show header for each group with group property thanks to groupHeader\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupHeader={({group,...otherProps}) => <Label {...otherProps} label={group['pair:label']}></Label> }\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example call chhildren with label thanks to groupLabel\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example conditional show of group if no data in source. Conditionale groupHeader is not possible because GroupedArrayField define group before filter ; need use chhildren.\n * const ConditionalSourceDefinedHandler = ({record,source,children,...otherProps})=>{\n *   if (record?.[source] && (!Array.isArray(record[source])||record[source].length>0)){\n *     return  React.Children.map(children, (child, i) => {\n *         return React.cloneElement(child, {...otherProps,record,source});\n *       })\n *   }else{\n *     return <></>\n *   }\n * }\n *\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *  <ConditionalSourceDefinedHandler>\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n *  </ConditionalSourceDefinedHandler>\n * </GroupedReferenceHandler>\n *\n *\n */\nconst GroupedReferenceHandler = ({\n  children,\n  groupReference,\n  groupLabel,\n  groupHeader,\n  filterProperty,\n  ...otherProps\n}) => {\n  const { data } = useQueryWithStore({\n    type: 'getList',\n    resource: groupReference,\n    payload: {}\n  });\n\n  return (\n    <>\n      {data?.map((data, index) => {\n        let filter = {};\n        filter[filterProperty] = data.id;\n        return (\n          <>\n            {groupHeader && groupHeader({ ...otherProps, group: data })}\n            <FilterHandler {...otherProps} filter={filter} label={data[groupLabel]}>\n              {children}\n            </FilterHandler>\n          </>\n        );\n      })}\n    </>\n  );\n};\n\nexport default GroupedReferenceHandler;\n","import React, { useEffect, useState } from 'react';\nimport { ArrayInput, SimpleFormIterator, TextInput } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useReferenceInputStyles = makeStyles({\n  form: {\n    display: 'flex'\n  },\n  input: {\n    paddingRight: '20px'\n  }\n});\n\nconst useHideInputStyles = makeStyles({\n  root: {\n    display: 'none'\n  }\n});\n\nconst ReificationArrayInput = props => {\n  const { reificationClass, children, ...otherProps } = props;\n  const flexFormClasses = useReferenceInputStyles();\n  const hideInputStyles = useHideInputStyles();\n\n  return (\n    <ArrayInput {...otherProps}>\n      <SimpleFormIterator classes={{ form: flexFormClasses.form }}>\n        {React.Children.map(props.children, (child, i) => {\n          return React.cloneElement(child, {\n            className: flexFormClasses.input\n          });\n        })}\n        <TextInput className={hideInputStyles.root} source=\"type\" initialValue={reificationClass} />\n      </SimpleFormIterator>\n    </ArrayInput>\n  );\n};\n\nexport default ReificationArrayInput;\n"]},"metadata":{},"sourceType":"module"}