/**
 * @param percent     Percent completed of the animation (decimal, `0.0` to `1.0`)
 * @param elapsedTime Time elapsed since the animation began, in ms
 * @param startValue  Static value set to `0`
 * @param valueChange Static value set to `1`
 * @param duration    Duration of the animation, in ms
 * @returns Decimal indicating how close the animation is to the end value
 *          (0 = start, 1 = finished, 1.2 = 20% over the end value, think "bounce" effects)
 */
export declare type ScrollchorEasingFunction = (percent: number, elapsedTime: number, startValue: number, valueChange: number, duration: number) => number;
export interface AnimateConfig {
    /**
     * Additional pixels to scroll relative to the target element (supports negative values, e.g.
     * for fixed position headers)
     */
    offset: number;
    /**
     * Length of the animation in milliseconds
     */
    duration: number;
    /**
     * Easing function to calculate the animation steps. Pass a function that matches the exported
     * interface for a custom easing.
     */
    easing: ScrollchorEasingFunction;
}
