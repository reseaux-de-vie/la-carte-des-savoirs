{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { useEditor, EditorContent } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport Underline from '@tiptap/extension-underline';\nimport Link from '@tiptap/extension-link';\nimport TextAlign from '@tiptap/extension-text-align';\nimport { FormHelperText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getFieldLabelTranslationArgs, useInput, useResourceContext, useTranslate } from 'ra-core';\nimport { InputHelperText, Labeled, sanitizeInputRestProps } from 'ra-ui-materialui';\nimport { TiptapEditorProvider } from './TiptapEditorProvider';\nimport { RichTextInputToolbar } from './RichTextInputToolbar';\n/**\n * A rich text editor for the react-admin that is accessible and supports translations. Based on [Tiptap](https://www.tiptap.dev/).\n * @param props The input props. Accept all common react-admin input props.\n * @param {EditorOptions} props.editorOptions The options to pass to the Tiptap editor.\n * @param {ReactNode} props.toolbar The toolbar containing the editors commands.\n *\n * @example <caption>Customizing the editors options</caption>\n * import { RichTextInput, RichTextInputToolbar } from 'ra-richtext-tiptap';\n * const MyRichTextInput = (props) => (\n *     <RichTextInput\n *         toolbar={<RichTextInputToolbar size=\"large\" />}\n *         label=\"Body\"\n *         source=\"body\"\n *         {...props}\n *     />\n * );\n *\n * @example <caption>Customizing the toolbar size</caption>\n * import { RichTextInput, RichTextInputToolbar } from 'ra-richtext-tiptap';\n * const MyRichTextInput = (props) => (\n *     <RichTextInput\n *         toolbar={<RichTextInputToolbar size=\"large\" />}\n *         label=\"Body\"\n *         source=\"body\"\n *         {...props}\n *     />\n * );\n *\n * @example <caption>Customizing the toolbar commands</caption>\n * import { RichTextInput, RichTextInputToolbar } from 'ra-richtext-tiptap';\n * const MyRichTextInput = ({ size, ...props }) => (\n *     <RichTextInput\n *         toolbar={(\n *             <RichTextInputToolbar>\n *                 <RichTextInputLevelSelect size={size} />\n *                 <FormatButtons size={size} />\n *                 <ListButtons size={size} />\n *                 <LinkButtons size={size} />\n *                 <QuoteButtons size={size} />\n *                 <ClearButtons size={size} />\n *             </RichTextInputToolbar>\n *         )}\n *         label=\"Body\"\n *         source=\"body\"\n *         {...props}\n *     />\n * );\n */\nexport var RichTextInput = function RichTextInput(props) {\n  var _a = props.disabled,\n    disabled = _a === void 0 ? false : _a,\n    _b = props.readOnly,\n    readOnly = _b === void 0 ? false : _b,\n    _c = props.editorOptions,\n    editorOptions = _c === void 0 ? DefaultEditorOptions : _c,\n    helperText = props.helperText,\n    _d = props.toolbar,\n    toolbar = _d === void 0 ? React.createElement(RichTextInputToolbar, null) : _d,\n    label = props.label,\n    source = props.source,\n    rest = __rest(props, [\"disabled\", \"readOnly\", \"editorOptions\", \"helperText\", \"toolbar\", \"label\", \"source\"]);\n  var resource = useResourceContext(props);\n  var classes = useStyles(props);\n  var translate = useTranslate();\n  var _e = useInput(props),\n    id = _e.id,\n    input = _e.input,\n    isRequired = _e.isRequired,\n    meta = _e.meta;\n  var finalLabel = label ? translate(label, {\n    _: label\n  }) : translate.apply(void 0, getFieldLabelTranslationArgs({\n    label: label,\n    resource: resource,\n    source: source\n  }));\n  var editor = useEditor(__assign(__assign({}, editorOptions), {\n    content: input.value,\n    editorProps: {\n      attributes: __assign({\n        id: id,\n        'aria-label': finalLabel\n      }, disabled || readOnly ? EditorAttributesNotEditable : EditorAttributes)\n    }\n  }));\n  var error = meta.error,\n    submitError = meta.submitError,\n    touched = meta.touched;\n  useEffect(function () {\n    if (!editor) return;\n    editor.setOptions({\n      editorProps: {\n        attributes: __assign({\n          id: id,\n          'aria-label': finalLabel\n        }, disabled || readOnly ? EditorAttributesNotEditable : EditorAttributes)\n      }\n    });\n  }, [disabled, editor, readOnly, finalLabel, id]);\n  useEffect(function () {\n    if (!editor) {\n      return;\n    }\n    var handleEditorUpdate = function handleEditorUpdate() {\n      if (editor.isEmpty) {\n        input.onChange('');\n        input.onBlur();\n        return;\n      }\n      var html = editor.getHTML();\n      input.onChange(html);\n      input.onBlur();\n    };\n    editor.on('update', handleEditorUpdate);\n    return function () {\n      editor.off('update', handleEditorUpdate);\n    };\n  }, [editor, input]);\n  return React.createElement(Labeled, __assign({\n    id: id,\n    isRequired: isRequired,\n    label: label,\n    meta: meta,\n    source: source,\n    resource: resource\n  }, sanitizeInputRestProps(rest)), React.createElement(\"div\", null, React.createElement(TiptapEditorProvider, {\n    value: editor\n  }, toolbar, React.createElement(EditorContent, {\n    className: classes.editorContent,\n    editor: editor\n  })), React.createElement(FormHelperText, {\n    error: Boolean(error || submitError)\n  }, React.createElement(InputHelperText, {\n    touched: touched,\n    error: error || submitError,\n    helperText: helperText\n  }))));\n};\nvar EditorAttributes = {\n  role: 'textbox',\n  'aria-multiline': 'true'\n};\nvar EditorAttributesNotEditable = {\n  role: 'textbox',\n  'aria-multiline': 'true',\n  contenteditable: false,\n  'aria-readonly': 'true'\n};\nexport var DefaultEditorOptions = {\n  extensions: [StarterKit, Underline, Link, TextAlign.configure({\n    types: ['heading', 'paragraph']\n  })]\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    editorContent: {\n      '& > div': {\n        padding: theme.spacing(1),\n        borderStyle: 'solid',\n        borderWidth: '1px',\n        borderColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)',\n        borderRadius: theme.shape.borderRadius\n      }\n    }\n  };\n}, {\n  name: 'RaRichTextInput'\n});","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useEffect","useEditor","EditorContent","StarterKit","Underline","Link","TextAlign","FormHelperText","makeStyles","getFieldLabelTranslationArgs","useInput","useResourceContext","useTranslate","InputHelperText","Labeled","sanitizeInputRestProps","TiptapEditorProvider","RichTextInputToolbar","RichTextInput","props","_a","disabled","_b","readOnly","_c","editorOptions","DefaultEditorOptions","helperText","_d","toolbar","createElement","label","source","rest","resource","classes","useStyles","translate","_e","id","input","isRequired","meta","finalLabel","_","editor","content","value","editorProps","attributes","EditorAttributesNotEditable","EditorAttributes","error","submitError","touched","setOptions","handleEditorUpdate","isEmpty","onChange","onBlur","html","getHTML","on","off","className","editorContent","Boolean","role","contenteditable","extensions","configure","types","theme","root","padding","spacing","borderStyle","borderWidth","borderColor","palette","type","borderRadius","shape","name"],"sources":["/home/jean-daniel/Documents/Projets/DÃ©veloppement/ActivityPods/BCM/frontend/node_modules/ra-richtext-tiptap/esm/RichTextInput.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { useEditor, EditorContent } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport Underline from '@tiptap/extension-underline';\nimport Link from '@tiptap/extension-link';\nimport TextAlign from '@tiptap/extension-text-align';\nimport { FormHelperText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getFieldLabelTranslationArgs, useInput, useResourceContext, useTranslate } from 'ra-core';\nimport { InputHelperText, Labeled, sanitizeInputRestProps } from 'ra-ui-materialui';\nimport { TiptapEditorProvider } from './TiptapEditorProvider';\nimport { RichTextInputToolbar } from './RichTextInputToolbar';\n/**\n * A rich text editor for the react-admin that is accessible and supports translations. Based on [Tiptap](https://www.tiptap.dev/).\n * @param props The input props. Accept all common react-admin input props.\n * @param {EditorOptions} props.editorOptions The options to pass to the Tiptap editor.\n * @param {ReactNode} props.toolbar The toolbar containing the editors commands.\n *\n * @example <caption>Customizing the editors options</caption>\n * import { RichTextInput, RichTextInputToolbar } from 'ra-richtext-tiptap';\n * const MyRichTextInput = (props) => (\n *     <RichTextInput\n *         toolbar={<RichTextInputToolbar size=\"large\" />}\n *         label=\"Body\"\n *         source=\"body\"\n *         {...props}\n *     />\n * );\n *\n * @example <caption>Customizing the toolbar size</caption>\n * import { RichTextInput, RichTextInputToolbar } from 'ra-richtext-tiptap';\n * const MyRichTextInput = (props) => (\n *     <RichTextInput\n *         toolbar={<RichTextInputToolbar size=\"large\" />}\n *         label=\"Body\"\n *         source=\"body\"\n *         {...props}\n *     />\n * );\n *\n * @example <caption>Customizing the toolbar commands</caption>\n * import { RichTextInput, RichTextInputToolbar } from 'ra-richtext-tiptap';\n * const MyRichTextInput = ({ size, ...props }) => (\n *     <RichTextInput\n *         toolbar={(\n *             <RichTextInputToolbar>\n *                 <RichTextInputLevelSelect size={size} />\n *                 <FormatButtons size={size} />\n *                 <ListButtons size={size} />\n *                 <LinkButtons size={size} />\n *                 <QuoteButtons size={size} />\n *                 <ClearButtons size={size} />\n *             </RichTextInputToolbar>\n *         )}\n *         label=\"Body\"\n *         source=\"body\"\n *         {...props}\n *     />\n * );\n */\nexport var RichTextInput = function (props) {\n    var _a = props.disabled, disabled = _a === void 0 ? false : _a, _b = props.readOnly, readOnly = _b === void 0 ? false : _b, _c = props.editorOptions, editorOptions = _c === void 0 ? DefaultEditorOptions : _c, helperText = props.helperText, _d = props.toolbar, toolbar = _d === void 0 ? React.createElement(RichTextInputToolbar, null) : _d, label = props.label, source = props.source, rest = __rest(props, [\"disabled\", \"readOnly\", \"editorOptions\", \"helperText\", \"toolbar\", \"label\", \"source\"]);\n    var resource = useResourceContext(props);\n    var classes = useStyles(props);\n    var translate = useTranslate();\n    var _e = useInput(props), id = _e.id, input = _e.input, isRequired = _e.isRequired, meta = _e.meta;\n    var finalLabel = label\n        ? translate(label, { _: label })\n        : translate.apply(void 0, getFieldLabelTranslationArgs({\n            label: label,\n            resource: resource,\n            source: source,\n        }));\n    var editor = useEditor(__assign(__assign({}, editorOptions), { content: input.value, editorProps: {\n            attributes: __assign({ id: id, 'aria-label': finalLabel }, (disabled || readOnly ? EditorAttributesNotEditable : EditorAttributes)),\n        } }));\n    var error = meta.error, submitError = meta.submitError, touched = meta.touched;\n    useEffect(function () {\n        if (!editor)\n            return;\n        editor.setOptions({\n            editorProps: {\n                attributes: __assign({ id: id, 'aria-label': finalLabel }, (disabled || readOnly ? EditorAttributesNotEditable : EditorAttributes)),\n            },\n        });\n    }, [disabled, editor, readOnly, finalLabel, id]);\n    useEffect(function () {\n        if (!editor) {\n            return;\n        }\n        var handleEditorUpdate = function () {\n            if (editor.isEmpty) {\n                input.onChange('');\n                input.onBlur();\n                return;\n            }\n            var html = editor.getHTML();\n            input.onChange(html);\n            input.onBlur();\n        };\n        editor.on('update', handleEditorUpdate);\n        return function () {\n            editor.off('update', handleEditorUpdate);\n        };\n    }, [editor, input]);\n    return (React.createElement(Labeled, __assign({ id: id, isRequired: isRequired, label: label, meta: meta, source: source, resource: resource }, sanitizeInputRestProps(rest)),\n        React.createElement(\"div\", null,\n            React.createElement(TiptapEditorProvider, { value: editor },\n                toolbar,\n                React.createElement(EditorContent, { className: classes.editorContent, editor: editor })),\n            React.createElement(FormHelperText, { error: Boolean(error || submitError) },\n                React.createElement(InputHelperText, { touched: touched, error: error || submitError, helperText: helperText })))));\n};\nvar EditorAttributes = {\n    role: 'textbox',\n    'aria-multiline': 'true',\n};\nvar EditorAttributesNotEditable = {\n    role: 'textbox',\n    'aria-multiline': 'true',\n    contenteditable: false,\n    'aria-readonly': 'true',\n};\nexport var DefaultEditorOptions = {\n    extensions: [\n        StarterKit,\n        Underline,\n        Link,\n        TextAlign.configure({\n            types: ['heading', 'paragraph'],\n        }),\n    ],\n};\nvar useStyles = makeStyles(function (theme) { return ({\n    root: {},\n    editorContent: {\n        '& > div': {\n            padding: theme.spacing(1),\n            borderStyle: 'solid',\n            borderWidth: '1px',\n            borderColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)',\n            borderRadius: theme.shape.borderRadius,\n        },\n    },\n}); }, {\n    name: 'RaRichTextInput',\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}