{"ast":null,"code":"import _objectSpread from \"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { posToDOMRect, Extension } from '@tiptap/core';\nimport { Plugin, PluginKey } from 'prosemirror-state';\nimport tippy from 'tippy.js';\nvar FloatingMenuView = /*#__PURE__*/function () {\n  function FloatingMenuView(_ref) {\n    var _this = this;\n    var editor = _ref.editor,\n      element = _ref.element,\n      view = _ref.view,\n      _ref$tippyOptions = _ref.tippyOptions,\n      tippyOptions = _ref$tippyOptions === void 0 ? {} : _ref$tippyOptions,\n      shouldShow = _ref.shouldShow;\n    _classCallCheck(this, FloatingMenuView);\n    this.preventHide = false;\n    this.shouldShow = function (_ref2) {\n      var view = _ref2.view,\n        state = _ref2.state;\n      var selection = state.selection;\n      var $anchor = selection.$anchor,\n        empty = selection.empty;\n      var isRootDepth = $anchor.depth === 1;\n      var isEmptyTextBlock = $anchor.parent.isTextblock && !$anchor.parent.type.spec.code && !$anchor.parent.textContent;\n      if (!view.hasFocus() || !empty || !isRootDepth || !isEmptyTextBlock || !_this.editor.isEditable) {\n        return false;\n      }\n      return true;\n    };\n    this.mousedownHandler = function () {\n      _this.preventHide = true;\n    };\n    this.focusHandler = function () {\n      // we use `setTimeout` to make sure `selection` is already updated\n      setTimeout(function () {\n        return _this.update(_this.editor.view);\n      });\n    };\n    this.blurHandler = function (_ref3) {\n      var event = _ref3.event;\n      var _a;\n      if (_this.preventHide) {\n        _this.preventHide = false;\n        return;\n      }\n      if ((event === null || event === void 0 ? void 0 : event.relatedTarget) && ((_a = _this.element.parentNode) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget))) {\n        return;\n      }\n      _this.hide();\n    };\n    this.tippyBlurHandler = function (event) {\n      _this.blurHandler({\n        event: event\n      });\n    };\n    this.editor = editor;\n    this.element = element;\n    this.view = view;\n    if (shouldShow) {\n      this.shouldShow = shouldShow;\n    }\n    this.element.addEventListener('mousedown', this.mousedownHandler, {\n      capture: true\n    });\n    this.editor.on('focus', this.focusHandler);\n    this.editor.on('blur', this.blurHandler);\n    this.tippyOptions = tippyOptions;\n    // Detaches menu content from its current parent\n    this.element.remove();\n    this.element.style.visibility = 'visible';\n  }\n  _createClass(FloatingMenuView, [{\n    key: \"createTooltip\",\n    value: function createTooltip() {\n      var editorElement = this.editor.options.element;\n      var editorIsAttached = !!editorElement.parentElement;\n      if (this.tippy || !editorIsAttached) {\n        return;\n      }\n      this.tippy = tippy(editorElement, _objectSpread({\n        duration: 0,\n        getReferenceClientRect: null,\n        content: this.element,\n        interactive: true,\n        trigger: 'manual',\n        placement: 'right',\n        hideOnClick: 'toggle'\n      }, this.tippyOptions));\n      // maybe we have to hide tippy on its own blur event as well\n      if (this.tippy.popper.firstChild) {\n        this.tippy.popper.firstChild.addEventListener('blur', this.tippyBlurHandler);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(view, oldState) {\n      var _a, _b, _c;\n      var state = view.state;\n      var doc = state.doc,\n        selection = state.selection;\n      var from = selection.from,\n        to = selection.to;\n      var isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection);\n      if (isSame) {\n        return;\n      }\n      this.createTooltip();\n      var shouldShow = (_a = this.shouldShow) === null || _a === void 0 ? void 0 : _a.call(this, {\n        editor: this.editor,\n        view: view,\n        state: state,\n        oldState: oldState\n      });\n      if (!shouldShow) {\n        this.hide();\n        return;\n      }\n      (_b = this.tippy) === null || _b === void 0 ? void 0 : _b.setProps({\n        getReferenceClientRect: ((_c = this.tippyOptions) === null || _c === void 0 ? void 0 : _c.getReferenceClientRect) || function () {\n          return posToDOMRect(view, from, to);\n        }\n      });\n      this.show();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _a;\n      (_a = this.tippy) === null || _a === void 0 ? void 0 : _a.show();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _a;\n      (_a = this.tippy) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a, _b;\n      if ((_a = this.tippy) === null || _a === void 0 ? void 0 : _a.popper.firstChild) {\n        this.tippy.popper.firstChild.removeEventListener('blur', this.tippyBlurHandler);\n      }\n      (_b = this.tippy) === null || _b === void 0 ? void 0 : _b.destroy();\n      this.element.removeEventListener('mousedown', this.mousedownHandler, {\n        capture: true\n      });\n      this.editor.off('focus', this.focusHandler);\n      this.editor.off('blur', this.blurHandler);\n    }\n  }]);\n  return FloatingMenuView;\n}();\nvar FloatingMenuPlugin = function FloatingMenuPlugin(options) {\n  return new Plugin({\n    key: typeof options.pluginKey === 'string' ? new PluginKey(options.pluginKey) : options.pluginKey,\n    view: function view(_view) {\n      return new FloatingMenuView(_objectSpread({\n        view: _view\n      }, options));\n    }\n  });\n};\nvar FloatingMenu = Extension.create({\n  name: 'floatingMenu',\n  addOptions: function addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'floatingMenu',\n      shouldShow: null\n    };\n  },\n  addProseMirrorPlugins: function addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return [];\n    }\n    return [FloatingMenuPlugin({\n      pluginKey: this.options.pluginKey,\n      editor: this.editor,\n      element: this.options.element,\n      tippyOptions: this.options.tippyOptions,\n      shouldShow: this.options.shouldShow\n    })];\n  }\n});\nexport { FloatingMenu, FloatingMenuPlugin, FloatingMenuView, FloatingMenu as default };","map":{"version":3,"sources":["../src/floating-menu-plugin.ts","../src/floating-menu.ts"],"names":[],"mappings":"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","sourcesContent":["import { Editor, posToDOMRect } from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from 'prosemirror-state'\nimport { EditorView } from 'prosemirror-view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface FloatingMenuPluginProps {\n  pluginKey: PluginKey | string,\n  editor: Editor,\n  element: HTMLElement,\n  tippyOptions?: Partial<Props>,\n  shouldShow?: ((props: {\n    editor: Editor,\n    view: EditorView,\n    state: EditorState,\n    oldState?: EditorState,\n  }) => boolean) | null,\n}\n\nexport type FloatingMenuViewProps = FloatingMenuPluginProps & {\n  view: EditorView,\n}\n\nexport class FloatingMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public shouldShow: Exclude<FloatingMenuPluginProps['shouldShow'], null> = ({ view, state }) => {\n    const { selection } = state\n    const { $anchor, empty } = selection\n    const isRootDepth = $anchor.depth === 1\n    const isEmptyTextBlock = $anchor.parent.isTextblock\n      && !$anchor.parent.type.spec.code\n      && !$anchor.parent.textContent\n\n    if (\n      !view.hasFocus()\n      || !empty\n      || !isRootDepth\n      || !isEmptyTextBlock\n      || !this.editor.isEditable\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor,\n    element,\n    view,\n    tippyOptions = {},\n    shouldShow,\n  }: FloatingMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (\n      event?.relatedTarget\n      && this.element.parentNode?.contains(event.relatedTarget as Node)\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  tippyBlurHandler = (event : FocusEvent) => {\n    this.blurHandler({ event })\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'right',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', this.tippyBlurHandler)\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const { doc, selection } = state\n    const { from, to } = selection\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect: this.tippyOptions?.getReferenceClientRect || (() => posToDOMRect(view, from, to)),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    if (this.tippy?.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).removeEventListener('blur', this.tippyBlurHandler)\n    }\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const FloatingMenuPlugin = (options: FloatingMenuPluginProps) => {\n  return new Plugin({\n    key: typeof options.pluginKey === 'string'\n      ? new PluginKey(options.pluginKey)\n      : options.pluginKey,\n    view: view => new FloatingMenuView({ view, ...options }),\n  })\n}\n","import { Extension } from '@tiptap/core'\n\nimport { FloatingMenuPlugin, FloatingMenuPluginProps } from './floating-menu-plugin'\n\nexport type FloatingMenuOptions = Omit<FloatingMenuPluginProps, 'editor' | 'element'> & {\n  element: HTMLElement | null,\n}\n\nexport const FloatingMenu = Extension.create<FloatingMenuOptions>({\n  name: 'floatingMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'floatingMenu',\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      FloatingMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n"]},"metadata":{},"sourceType":"module"}