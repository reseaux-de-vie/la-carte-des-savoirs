{"ast":null,"code":"import * as e from \"react\";\nimport r, { useEffect as t, useState as n } from \"react\";\nimport { useListContext as a, useResourceContext as l, sanitizeListRestProps as o, RecordContextProvider as i, ChipField as c, Link as s, linkToRecord as u, useGetList as m, getResources as f, FilterList as d, FilterListItem as p, Button as h, useResourceDefinition as b, TopToolbar as v, CreateButton as y, ExportButton as E, List as g } from \"react-admin\";\nimport { makeStyles as k, LinearProgress as w, Grid as P, Card as x, CardActionArea as C, CardMedia as O, CardContent as L, CardActions as j, useMediaQuery as N } from \"@material-ui/core\";\nimport I from \"@material-ui/icons/AddCircle\";\nimport S from \"@material-ui/icons/Launch\";\nimport { useGetExternalLink as F, useDataModel as V, useContainers as T } from \"@semapps/semantic-data-provider\";\nimport A from \"react-masonry-css\";\nimport { useSelector as U, shallowEqual as _ } from \"react-redux\";\nimport { useLocation as R } from \"react-router\";\nfunction W() {\n  return (W = Object.assign ? Object.assign.bind() : function (e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var t = arguments[r];\n      for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n    }\n    return e;\n  }).apply(this, arguments);\n}\nfunction B(e, r) {\n  if (null == e) return {};\n  var t,\n    n,\n    a = function (e, r) {\n      if (null == e) return {};\n      var t,\n        n,\n        a = {},\n        l = Object.keys(e);\n      for (n = 0; n < l.length; n++) t = l[n], r.indexOf(t) >= 0 || (a[t] = e[t]);\n      return a;\n    }(e, r);\n  if (Object.getOwnPropertySymbols) {\n    var l = Object.getOwnPropertySymbols(e);\n    for (n = 0; n < l.length; n++) t = l[n], r.indexOf(t) >= 0 || Object.prototype.propertyIsEnumerable.call(e, t) && (a[t] = e[t]);\n  }\n  return a;\n}\nfunction D(e, r) {\n  return function (e) {\n    if (Array.isArray(e)) return e;\n  }(e) || function (e, r) {\n    var t = null == e ? null : \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n    if (null == t) return;\n    var n,\n      a,\n      l = [],\n      o = !0,\n      i = !1;\n    try {\n      for (t = t.call(e); !(o = (n = t.next()).done) && (l.push(n.value), !r || l.length !== r); o = !0);\n    } catch (e) {\n      i = !0, a = e;\n    } finally {\n      try {\n        o || null == t.return || t.return();\n      } finally {\n        if (i) throw a;\n      }\n    }\n    return l;\n  }(e, r) || function (e, r) {\n    if (!e) return;\n    if (\"string\" == typeof e) return z(e, r);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    \"Object\" === t && e.constructor && (t = e.constructor.name);\n    if (\"Map\" === t || \"Set\" === t) return Array.from(e);\n    if (\"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)) return z(e, r);\n  }(e, r) || function () {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction z(e, r) {\n  (null == r || r > e.length) && (r = e.length);\n  for (var t = 0, n = new Array(r); t < r; t++) n[t] = e[t];\n  return n;\n}\nvar M = [\"classes\", \"className\", \"children\", \"linkType\", \"component\", \"primaryText\", \"appendLink\", \"externalLinks\"],\n  $ = k(function (e) {\n    return {\n      root: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      link: {\n        textDecoration: \"none\",\n        maxWidth: \"100%\"\n      },\n      chipField: {\n        maxWidth: \"100%\"\n      },\n      addIcon: {\n        cursor: \"pointer\",\n        fontSize: 35,\n        position: \"relative\",\n        top: -2,\n        left: -2\n      },\n      launchIcon: {\n        width: 16,\n        paddingRight: 6,\n        marginLeft: -10\n      }\n    };\n  }),\n  q = function q(e) {\n    return e.stopPropagation();\n  },\n  G = function G() {},\n  H = function H(e) {\n    e.classes, e.className, e.children;\n    var t = e.linkType,\n      n = void 0 === t ? \"edit\" : t,\n      m = e.component,\n      f = void 0 === m ? \"div\" : m,\n      d = e.primaryText,\n      p = e.appendLink,\n      h = e.externalLinks,\n      b = void 0 !== h && h,\n      v = B(e, M),\n      y = a(e),\n      E = y.ids,\n      g = y.data,\n      k = y.loaded,\n      P = y.basePath,\n      x = l(e),\n      C = F(b),\n      O = $(e),\n      L = f;\n    return !1 === k ? r.createElement(w, null) : r.createElement(L, W({\n      className: O.root\n    }, o(v)), E.map(function (e) {\n      if (!g[e] || g[e]._error) return null;\n      var t = C(g[e]);\n      return t ? r.createElement(i, {\n        value: g[e],\n        key: e\n      }, r.createElement(\"a\", {\n        href: t,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: O.link,\n        onClick: q\n      }, r.createElement(c, {\n        record: g[e],\n        resource: x,\n        basePath: P,\n        source: d,\n        className: O.chipField,\n        color: \"secondary\",\n        deleteIcon: r.createElement(S, {\n          className: O.launchIcon\n        }),\n        onClick: G,\n        onDelete: G\n      }))) : n ? r.createElement(i, {\n        value: g[e],\n        key: e\n      }, r.createElement(s, {\n        className: O.link,\n        to: u(P, e, n),\n        onClick: q\n      }, r.createElement(c, {\n        record: g[e],\n        resource: x,\n        basePath: P,\n        source: d,\n        className: O.chipField,\n        color: \"secondary\",\n        onClick: G\n      }))) : r.createElement(i, {\n        value: g[e],\n        key: e\n      }, r.createElement(c, {\n        record: g[e],\n        resource: x,\n        basePath: P,\n        source: d,\n        className: O.chipField,\n        color: \"secondary\",\n        onClick: G\n      }));\n    }), p && r.createElement(I, {\n      color: \"primary\",\n      className: O.addIcon,\n      onClick: p\n    }));\n  },\n  J = function J(e) {\n    return e.stopPropagation();\n  },\n  K = function K() {},\n  Q = function Q(r) {\n    var t = r.children,\n      n = r.linkType,\n      l = r.externalLinks,\n      o = r.spacing,\n      c = r.xs,\n      m = r.sm,\n      f = r.md,\n      d = r.lg,\n      p = r.xl,\n      h = a(),\n      b = h.ids,\n      v = h.data,\n      y = h.basePath,\n      E = F(l);\n    return e.createElement(P, {\n      container: !0,\n      spacing: o\n    }, b.map(function (r) {\n      if (!v[r] || v[r]._error) return null;\n      var a,\n        l = E(v[r]);\n      return a = l ? e.createElement(\"a\", {\n        href: l,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        onClick: J\n      }, e.cloneElement(e.Children.only(t), {\n        record: v[r],\n        basePath: t.props.basePath || y,\n        externalLink: !0,\n        onClick: K\n      })) : n ? e.createElement(s, {\n        to: u(y, r, n),\n        onClick: J\n      }, e.cloneElement(e.Children.only(t), {\n        record: v[r],\n        basePath: t.props.basePath || y,\n        onClick: K\n      })) : e.cloneElement(e.Children.only(t), {\n        record: v[r],\n        basePath: t.props.basePath || y\n      }), e.createElement(P, {\n        item: !0,\n        key: r,\n        xs: c,\n        sm: m,\n        md: f,\n        lg: d,\n        xl: p\n      }, e.createElement(i, {\n        value: v[r],\n        key: r\n      }, a));\n    }));\n  };\nQ.defaultProps = {\n  xs: 6,\n  spacing: 3,\n  linkType: \"edit\",\n  externalLinks: !1\n};\nvar X = k(function () {\n    return {\n      grid: {\n        display: \"flex\",\n        marginLeft: -20,\n        marginBottom: -20,\n        width: \"auto\"\n      },\n      column: {\n        paddingLeft: 20,\n        backgroundClip: \"padding-box\"\n      },\n      card: {\n        marginBottom: 20\n      },\n      media: {\n        height: 0,\n        paddingTop: \"56.25%\"\n      }\n    };\n  }),\n  Y = function Y(e) {\n    var t = e.image,\n      n = e.content,\n      l = e.actions,\n      o = e.breakpointCols,\n      i = e.linkType,\n      c = X(),\n      m = a(),\n      f = m.ids,\n      d = m.data,\n      p = m.basePath;\n    return r.createElement(A, {\n      breakpointCols: o,\n      className: c.grid,\n      columnClassName: c.column\n    }, f.map(function (e) {\n      if (!d[e] || d[e]._error) return null;\n      var a = \"function\" == typeof t ? t(d[e]) : t;\n      return r.createElement(x, {\n        key: e,\n        className: c.card\n      }, r.createElement(s, {\n        to: u(p, e) + \"/\" + i\n      }, r.createElement(C, null, a && r.createElement(O, {\n        className: c.media,\n        image: a\n      }), n && r.createElement(L, null, n(d[e])))), l && r.createElement(j, null, l.map(function (t) {\n        return r.createElement(t, {\n          record: d[e],\n          basePath: p\n        });\n      })));\n    }));\n  };\nY.defaultProps = {\n  breakpointCols: {\n    default: 3,\n    1050: 2,\n    700: 1\n  },\n  linkType: \"edit\"\n};\nvar Z = function Z(e) {\n    var t = e.source,\n      n = e.id,\n      a = l(),\n      o = m(a).data;\n    return r.createElement(r.Fragment, null, \"Â \", r.createElement(\"span\", {\n      className: \"filter-count\"\n    }, \"(\" + Object.values(o).filter(function (e) {\n      return [].concat(e[t]).includes(n);\n    }).length + \")\"));\n  },\n  ee = function ee(e) {\n    var n = e.reference,\n      o = e.source,\n      i = e.inverseSource,\n      c = e.limit,\n      s = e.sort,\n      u = e.filter,\n      h = e.label,\n      b = e.icon,\n      v = e.showCounters,\n      y = m(n, {\n        page: 1,\n        perPage: c\n      }, s, u),\n      E = y.data,\n      g = y.ids,\n      k = U(f, _).filter(function (e) {\n        return (null == e ? void 0 : e.name) === n;\n      })[0],\n      w = l();\n    V(w);\n    var P = T(w),\n      x = a();\n    x.displayedFilters, x.filterValues;\n    var C = x.setFilters;\n    x.hideFilter, t(function () {\n      var e = new URLSearchParams(window.location.search);\n      Object.fromEntries(e.entries()).filter || C({});\n    }, []);\n    return r.createElement(d, {\n      label: h || k.options.label,\n      icon: b || r.createElement(k.icon)\n    }, g.filter(function (e) {\n      return function (e) {\n        if (!i) return !0;\n        if (!P || !E || !E[e][i]) return !1;\n        var r = !1;\n        return Object.values(P).forEach(function (t) {\n          t.forEach(function (t) {\n            [].concat(E[e][i]).forEach(function (e) {\n              e.startsWith(t) && (r = !0);\n            });\n          });\n        }), r;\n      }(e);\n    }).map(function (e) {\n      return r.createElement(p, {\n        key: e,\n        label: r.createElement(\"span\", {\n          className: \"filter-label\"\n        }, E[e][\"pair:label\"], v && r.createElement(Z, {\n          source: o,\n          id: e\n        })),\n        value: (t = {}, n = o, a = e, n in t ? Object.defineProperty(t, n, {\n          value: a,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }) : t[n] = a, t)\n      });\n      var t, n, a;\n    }));\n  };\nee.defaultProps = {\n  limit: 25,\n  showCounters: !0\n};\nvar re = r.createContext({\n    views: null,\n    currentView: null,\n    setView: function setView() {\n      return null;\n    }\n  }),\n  te = function te() {\n    var e = new URLSearchParams(R().search),\n      t = r.useContext(re),\n      n = t.views,\n      a = t.currentView,\n      l = t.setView;\n    return n ? Object.entries(n).filter(function (e) {\n      return D(e, 1)[0] !== a;\n    }).map(function (t) {\n      var n = D(t, 2),\n        a = n[0],\n        o = n[1];\n      return e.set(\"view\", a), e.set(\"page\", 1), e.set(\"perPage\", o.perPage), o.sort && (e.set(\"sort\", o.sort.field), e.set(\"order\", o.sort.order)), r.createElement(s, {\n        key: a,\n        to: \"?\" + e.toString()\n      }, r.createElement(h, {\n        onClick: function onClick() {\n          return l(a);\n        },\n        label: o.label\n      }, r.createElement(o.icon)));\n    }) : null;\n  },\n  ne = [\"bulkActions\", \"basePath\", \"currentSort\", \"displayedFilters\", \"exporter\", \"filters\", \"filterValues\", \"onUnselectItems\", \"resource\", \"selectedIds\", \"showFilter\", \"total\"],\n  ae = function ae(e) {\n    var t = e.bulkActions,\n      n = e.basePath,\n      a = e.currentSort,\n      l = e.displayedFilters,\n      o = e.exporter,\n      i = e.filters,\n      c = e.filterValues,\n      s = e.onUnselectItems,\n      u = e.resource,\n      m = e.selectedIds,\n      f = e.showFilter,\n      d = e.total,\n      p = B(e, ne),\n      h = N(function (e) {\n        return e.breakpoints.down(\"xs\");\n      }),\n      g = b(p);\n    return r.createElement(v, null, r.createElement(te, null), i && r.cloneElement(i, {\n      resource: u,\n      showFilter: f,\n      displayedFilters: l,\n      filterValues: c,\n      context: \"button\"\n    }), g.hasCreate && r.createElement(y, {\n      basePath: n\n    }), !h && !1 !== o && r.createElement(E, {\n      disabled: 0 === d,\n      resource: u,\n      sort: a,\n      filter: c,\n      exporter: o\n    }), t && r.cloneElement(t, {\n      basePath: n,\n      filterValues: c,\n      resource: u,\n      selectedIds: m,\n      onUnselectItems: s\n    }));\n  },\n  le = [\"children\", \"actions\", \"views\", \"ListComponent\"],\n  oe = function oe(e) {\n    e.children;\n    var t = e.actions,\n      a = e.views,\n      l = e.ListComponent,\n      o = B(e, le),\n      i = new URLSearchParams(R().search),\n      c = i.has(\"view\") ? i.get(\"view\") : Object.keys(a)[0],\n      s = D(n(c), 2),\n      u = s[0],\n      m = s[1];\n    return r.createElement(re.Provider, {\n      value: {\n        views: a,\n        currentView: u,\n        setView: m\n      }\n    }, r.createElement(l, W({\n      actions: t,\n      pagination: a[u].pagination,\n      perPage: a[c].perPage,\n      sort: a[c].sort\n    }, o), a[u].list));\n  };\noe.defaultProps = {\n  actions: r.createElement(ae, null),\n  ListComponent: g\n};\nexport { H as ChipList, Q as GridList, ae as ListActionsWithViews, re as ListViewContext, Y as MasonryList, oe as MultiViewsList, ee as ReferenceFilter, te as ViewsButtons };","map":{"version":3,"sources":["../src/ChipList.js","../src/GridList.js","../src/MasonryList.js","../src/ReferenceFilter.js","../src/MultiViewsList/ListViewContext.js","../src/MultiViewsList/ViewsButtons.js","../src/MultiViewsList/ListActionsWithViews.js","../src/MultiViewsList/MultiViewsList.js"],"names":["useStyles","makeStyles","root","display","flexWrap","link","textDecoration","maxWidth","chipField","addIcon","cursor","fontSize","position","top","left","launchIcon","width","paddingRight","marginLeft","stopPropagation","e","handleClick","ChipList","_props$linkType","classes","className","children","linkType","component","primaryText","appendLink","externalLinks","rest","props","ids","data","loaded","basePath","useListContext","resource","useResourceContext","getExternalLink","useGetExternalLink","Component","React","LinearProgress","sanitizeListRestProps","map","id","externalLink","RecordContextProvider","value","key","href","target","rel","onClick","ChipField","record","source","color","deleteIcon","LaunchIcon","onDelete","Link","to","linkToRecord","AddCircleIcon","GridList","spacing","xs","sm","md","lg","xl","_ref","_useListContext","Grid","container","child","cloneElement","Children","only","item","defaultProps","grid","marginBottom","column","paddingLeft","backgroundClip","card","media","height","paddingTop","MasonryList","image","content","actions","breakpointCols","Masonry","columnClassName","imageUrl","Card","CardActionArea","CardMedia","createElement","action","default","1050","700","ReferenceFilterCounter","resourceContext","useGetList","Object","values","filter","concat","d","includes","length","ReferenceFilter","reference","inverseSource","limit","sort","label","icon","showCounters","_ref2","page","perPage","useSelector","getResources","shallowEqual","currentResource","r","name","useDataModel","resourceContextContainers","useContainers","displayedFilters","filterValues","setFilters","hideFilter","useEffect","urlSearchParams","URLSearchParams","window","location","search","fromEntries","entries","itemIsUsed","forEach","inverseSourceData","startsWith","containerUrl","FilterList","options","FilterListItem","ListViewContext","createContext","views","currentView","setView","ViewsButtons","query","useLocation","_React$useContext","useContext","view","_ref3","set","field","order","toString","Button","ListActionsWithViews","bulkActions","currentSort","exporter","filters","onUnselectItems","selectedIds","showFilter","total","useMediaQuery","theme","breakpoints","down","resourceDefinition","useResourceDefinition","context","hasCreate","CreateButton","ExportButton","disabled","MultiViewsList","ListComponent","otherProps","initialView","has","get","keys","_useState2","useState","Provider","pagination","list","List"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  ChipField,\n  useResourceContext,\n  useListContext,\n  sanitizeListRestProps,\n  linkToRecord,\n  RecordContextProvider,\n  Link\n} from 'react-admin';\nimport { makeStyles, LinearProgress } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  link: {\n    textDecoration: 'none',\n    maxWidth: '100%'\n  },\n  chipField: {\n    maxWidth: '100%'\n  },\n  addIcon: {\n    cursor: 'pointer',\n    fontSize: 35,\n    position: 'relative',\n    top: -2,\n    left: -2\n  },\n  launchIcon: {\n    width: 16,\n    paddingRight: 6,\n    marginLeft: -10\n  }\n}));\n\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst ChipList = props => {\n  const {\n    classes: classesOverride,\n    className,\n    children,\n    linkType = 'edit',\n    component = 'div',\n    primaryText,\n    appendLink,\n    externalLinks = false,\n    ...rest\n  } = props;\n  const { ids, data, loaded, basePath } = useListContext(props);\n  const resource = useResourceContext(props);\n  const getExternalLink = useGetExternalLink(externalLinks);\n\n  const classes = useStyles(props);\n  const Component = component;\n\n  if (loaded === false) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <Component className={classes.root} {...sanitizeListRestProps(rest)}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        if (externalLink) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <a\n                href={externalLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classes.link}\n                onClick={stopPropagation}\n              >\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  deleteIcon={<LaunchIcon className={classes.launchIcon} />}\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                  // Required to display the delete icon\n                  onDelete={handleClick}\n                />\n              </a>\n            </RecordContextProvider>\n          );\n        } else if (linkType) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <Link className={classes.link} to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                />\n              </Link>\n            </RecordContextProvider>\n          );\n        } else {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <ChipField\n                record={data[id]}\n                resource={resource}\n                basePath={basePath}\n                source={primaryText}\n                className={classes.chipField}\n                color=\"secondary\"\n                // Workaround to force ChipField to be clickable\n                onClick={handleClick}\n              />\n            </RecordContextProvider>\n          );\n        }\n      })}\n      {appendLink && <AddCircleIcon color=\"primary\" className={classes.addIcon} onClick={appendLink} />}\n    </Component>\n  );\n};\n\nexport default ChipList;\n","import * as React from 'react';\nimport { useListContext, linkToRecord, Link, RecordContextProvider } from 'react-admin';\nimport { Grid } from '@material-ui/core';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst GridList = ({ children, linkType, externalLinks, spacing, xs, sm, md, lg, xl }) => {\n  const { ids, data, basePath } = useListContext();\n  const getExternalLink = useGetExternalLink(externalLinks);\n  return (\n    <Grid container spacing={spacing}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        let child;\n\n        if (externalLink) {\n          child = (\n            <a href={externalLink} target=\"_blank\" rel=\"noopener noreferrer\" onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                externalLink: true,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </a>\n          );\n        } else if (linkType) {\n          child = (\n            <Link to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </Link>\n          );\n        } else {\n          child = React.cloneElement(React.Children.only(children), {\n            record: data[id],\n            basePath: children.props.basePath || basePath\n          });\n        }\n\n        return (\n          <Grid item key={id} xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\n            <RecordContextProvider value={data[id]} key={id}>\n              {child}\n            </RecordContextProvider>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nGridList.defaultProps = {\n  xs: 6,\n  spacing: 3,\n  linkType: 'edit',\n  externalLinks: false\n};\n\nexport default GridList;\n","import React from 'react';\nimport { useListContext, Link, linkToRecord } from 'react-admin';\nimport { makeStyles, Card, CardActionArea, CardMedia, CardContent, CardActions } from '@material-ui/core';\nimport Masonry from 'react-masonry-css';\n\nconst useStyles = makeStyles(() => ({\n  grid: {\n    display: 'flex',\n    marginLeft: -20,\n    marginBottom: -20,\n    width: 'auto'\n  },\n  column: {\n    paddingLeft: 20,\n    backgroundClip: 'padding-box'\n  },\n  card: {\n    marginBottom: 20\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n  }\n}));\n\n/**\n * @example\n * <List component=\"div\" perPage={50} {...props}>\n *   <MasonryList\n *     image={record => record.image}\n *     content={record => (\n *       <>\n *         <Typography variant=\"subtitle1\">{record.title}</Typography>\n *         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{record.description}</Typography>\n *       </>\n *     )}\n *     linkType=\"show\"\n *   />\n * </List>\n */\nconst MasonryList = ({ image, content, actions, breakpointCols, linkType }) => {\n  const classes = useStyles();\n  const { ids, data, basePath } = useListContext();\n  return (\n    <Masonry breakpointCols={breakpointCols} className={classes.grid} columnClassName={classes.column}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const imageUrl = typeof image === 'function' ? image(data[id]) : image;\n        return (\n          <Card key={id} className={classes.card}>\n            <Link to={linkToRecord(basePath, id) + '/' + linkType}>\n              <CardActionArea>\n                {imageUrl && <CardMedia className={classes.media} image={imageUrl} />}\n                {content && <CardContent>{content(data[id])}</CardContent>}\n              </CardActionArea>\n            </Link>\n            {actions && (\n              <CardActions>\n                {actions.map(action => React.createElement(action, { record: data[id], basePath }))}\n              </CardActions>\n            )}\n          </Card>\n        );\n      })}\n    </Masonry>\n  );\n};\n\nMasonryList.defaultProps = {\n  breakpointCols: { default: 3, 1050: 2, 700: 1 },\n  linkType: 'edit'\n};\n\nexport default MasonryList;\n","import React, { useEffect } from 'react';\nimport { FilterList, FilterListItem, useGetList, getResources, useResourceContext, useListContext } from 'react-admin';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useContainers, useDataModel } from '@semapps/semantic-data-provider';\n\n/**\n * @example\n * const FilterAside = () => (\n *   <Card>\n *     <CardContent>\n *       <FilterLiveSearch source=\"pair:label\" />\n *       <ReferenceFilter reference=\"Theme\" source=\"pair:hasTopic\" inverseSource=\"pair:topicOf\" />\n *       <ReferenceFilter reference=\"Skill\" source=\"pair:offers\" inverseSource=\"pair:offeredBy\" />\n *     </CardContent>\n *   </Card>\n * );\n */\n\nconst ReferenceFilterCounter = ({ source, id }) => {\n  const resourceContext = useResourceContext();\n  const { data } = useGetList(resourceContext);\n  return (\n    <>\n      &nbsp;\n      <span className=\"filter-count\">{'(' + Object.values(data).filter(d => ([].concat(d[source])).includes(id)).length + ')'}</span>\n    </>\n  );\n};\n\nconst ReferenceFilter = ({ reference, source, inverseSource, limit, sort, filter, label, icon, showCounters }) => {\n  const { data, ids } = useGetList(reference, { page: 1, perPage: limit }, sort, filter);\n  const resources = useSelector(getResources, shallowEqual);\n  const currentResource = resources.filter(r => r?.name === reference)[0];\n  const resourceContext = useResourceContext();\n  const resourceContextDataModel = useDataModel(resourceContext);\n  const resourceContextContainers = useContainers(resourceContext);\n  \n  const {\n    displayedFilters,\n    filterValues,\n    setFilters,\n    hideFilter\n  } = useListContext();\n  useEffect(() => {\n    // Needed when filter item is active and its last relation is removed\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n    if (! params.filter) {\n      setFilters({});\n    }\n  }, []);\n  \n  const itemIsUsed = (id) => {\n    if (!inverseSource) {\n      return true;\n    }\n    if (!resourceContextContainers || !data || !data[id][inverseSource]) {\n      return false;\n    }\n    let itemIsUsed = false;    \n    Object.values(resourceContextContainers).forEach(value => {\n      value.forEach(containerUrl => {\n        [].concat(data[id][inverseSource]).forEach(inverseSourceData => {\n          if (inverseSourceData.startsWith(containerUrl)) {\n            itemIsUsed = true;\n          }\n        })\n      })\n    });\n    return itemIsUsed;\n  }\n  \n  return (\n    <FilterList label={label || currentResource.options.label} icon={icon || React.createElement(currentResource.icon)}>\n      {ids\n        .filter(id => itemIsUsed(id))\n        .map(id => (\n          <FilterListItem\n            key={id}\n            label={\n              <span className=\"filter-label\">\n                {data[id]['pair:label']}\n                {showCounters && <ReferenceFilterCounter source={source} id={id} />}\n              </span>\n            }\n            value={{ [source]: id }}\n          />\n        ))}\n    </FilterList>\n  );\n};\n\nReferenceFilter.defaultProps = {\n  limit: 25,\n  showCounters: true\n};\n\nexport default ReferenceFilter;\n","import React from 'react';\n\nconst ListViewContext = React.createContext({ views: null, currentView: null, setView: () => null });\n\nexport default ListViewContext;\n","import React from 'react';\nimport { Button, Link } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListViewContext from './ListViewContext';\n\nconst ViewsButtons = () => {\n  const query = new URLSearchParams(useLocation().search);\n  const { views, currentView, setView } = React.useContext(ListViewContext);\n  return views\n    ? Object.entries(views)\n        .filter(([key]) => key !== currentView)\n        .map(([key, view]) => {\n          query.set('view', key);\n          query.set('page', 1);\n          query.set('perPage', view.perPage);\n          if (view.sort) {\n            query.set('sort', view.sort.field);\n            query.set('order', view.sort.order);\n          }\n          return (\n            <Link key={key} to={'?' + query.toString()}>\n              <Button onClick={() => setView(key)} label={view.label}>\n                {React.createElement(view.icon)}\n              </Button>\n            </Link>\n          );\n        })\n    : null;\n};\n\nexport default ViewsButtons;\n","import React from 'react';\nimport { CreateButton, ExportButton, useResourceDefinition, TopToolbar } from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport ViewsButtons from './ViewsButtons';\n\nconst ListActionsWithViews = ({\n  bulkActions,\n  basePath,\n  currentSort,\n  displayedFilters,\n  exporter,\n  filters,\n  filterValues,\n  onUnselectItems,\n  resource,\n  selectedIds,\n  showFilter,\n  total,\n  ...rest\n}) => {\n  const xs = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const resourceDefinition = useResourceDefinition(rest);\n  return (\n    <TopToolbar>\n      <ViewsButtons />\n      {filters &&\n        React.cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button'\n        })}\n      {resourceDefinition.hasCreate && <CreateButton basePath={basePath} />}\n      {!xs && exporter !== false && (\n        <ExportButton\n          disabled={total === 0}\n          resource={resource}\n          sort={currentSort}\n          filter={filterValues}\n          exporter={exporter}\n        />\n      )}\n      {bulkActions &&\n        React.cloneElement(bulkActions, {\n          basePath,\n          filterValues,\n          resource,\n          selectedIds,\n          onUnselectItems\n        })}\n    </TopToolbar>\n  );\n};\n\nexport default ListActionsWithViews;\n","import React, { useState } from 'react';\nimport { List } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListActionsWithViews from './ListActionsWithViews';\nimport ListViewContext from './ListViewContext';\n\nconst MultiViewsList = ({ children, actions, views, ListComponent, ...otherProps }) => {\n  const query = new URLSearchParams(useLocation().search);\n  const initialView = query.has('view') ? query.get('view') : Object.keys(views)[0];\n  const [currentView, setView] = useState(initialView);\n  return (\n    <ListViewContext.Provider value={{ views, currentView, setView }}>\n      <ListComponent\n        actions={actions}\n        pagination={views[currentView].pagination}\n        // Set initial values, but use the query string to change these values to avoid a complete refresh\n        perPage={views[initialView].perPage}\n        sort={views[initialView].sort}\n        {...otherProps}\n      >\n        {views[currentView].list}\n      </ListComponent>\n    </ListViewContext.Provider>\n  );\n};\n\nMultiViewsList.defaultProps = {\n  actions: <ListActionsWithViews />,\n  ListComponent: List\n};\n\nexport default MultiViewsList;\n"]},"metadata":{},"sourceType":"module"}