{"ast":null,"code":"import { useContext } from 'react';\nimport ListPaginationContext from './ListPaginationContext';\n/**\n * Hook to read the list controller props from the ListContext.\n *\n * Must be used within a <ListContextProvider> (e.g. as a descendent of <List>\n * or <ListBase>).\n *\n * @typedef {Object} ListPaginationContextValue\n * @prop {integer}  total the total number of results for the current filters, excluding pagination. Useful to build the pagination controls. e.g. 23\n * @prop {integer}  page the current page. Starts at 1\n * @prop {Function} setPage a callback to change the page, e.g. setPage(3)\n * @prop {integer}  perPage the number of results per page. Defaults to 25\n * @prop {Function} setPerPage a callback to change the number of results per page, e.g. setPerPage(25)\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @returns {ListPaginationContextValue} list controller props\n *\n * @see useListController for how it is filled\n */\nvar useListPaginationContext = function useListPaginationContext(props) {\n  var context = useContext(ListPaginationContext);\n  if (!context.setPage) {\n    /**\n     * The element isn't inside a <ListPaginationContext.Provider>\n     *\n     * This may only happen when using Datagrid / SimpleList / SingleFieldList components\n     * outside of a List / ReferenceManyField / ReferenceArrayField -\n     * which isn't documented but tolerated.\n     * To avoid breakage in that case, fallback to props\n     *\n     * @deprecated - to be removed in 4.0\n     */\n    if (process.env.NODE_ENV !== 'production') {\n      console.log(\"List components must be used inside a <ListContextProvider>. Relying on props rather than context to get List data and callbacks is deprecated and won't be supported in the next major version of react-admin.\");\n    }\n    return props;\n  }\n  return context;\n};\nexport default useListPaginationContext;","map":{"version":3,"names":["useContext","ListPaginationContext","useListPaginationContext","props","context","setPage","process","env","NODE_ENV","console","log"],"sources":["/home/jean-daniel/Documents/Projets/DÃ©veloppement/ActivityPods/BCM/frontend/node_modules/ra-core/esm/controller/useListPaginationContext.js"],"sourcesContent":["import { useContext } from 'react';\nimport ListPaginationContext from './ListPaginationContext';\n/**\n * Hook to read the list controller props from the ListContext.\n *\n * Must be used within a <ListContextProvider> (e.g. as a descendent of <List>\n * or <ListBase>).\n *\n * @typedef {Object} ListPaginationContextValue\n * @prop {integer}  total the total number of results for the current filters, excluding pagination. Useful to build the pagination controls. e.g. 23\n * @prop {integer}  page the current page. Starts at 1\n * @prop {Function} setPage a callback to change the page, e.g. setPage(3)\n * @prop {integer}  perPage the number of results per page. Defaults to 25\n * @prop {Function} setPerPage a callback to change the number of results per page, e.g. setPerPage(25)\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @returns {ListPaginationContextValue} list controller props\n *\n * @see useListController for how it is filled\n */\nvar useListPaginationContext = function (props) {\n    var context = useContext(ListPaginationContext);\n    if (!context.setPage) {\n        /**\n         * The element isn't inside a <ListPaginationContext.Provider>\n         *\n         * This may only happen when using Datagrid / SimpleList / SingleFieldList components\n         * outside of a List / ReferenceManyField / ReferenceArrayField -\n         * which isn't documented but tolerated.\n         * To avoid breakage in that case, fallback to props\n         *\n         * @deprecated - to be removed in 4.0\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            console.log(\"List components must be used inside a <ListContextProvider>. Relying on props rather than context to get List data and callbacks is deprecated and won't be supported in the next major version of react-admin.\");\n        }\n        return props;\n    }\n    return context;\n};\nexport default useListPaginationContext;\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAaC,KAAK,EAAE;EAC5C,IAAIC,OAAO,GAAGJ,UAAU,CAACC,qBAAqB,CAAC;EAC/C,IAAI,CAACG,OAAO,CAACC,OAAO,EAAE;IAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCC,OAAO,CAACC,GAAG,CAAC,iNAAiN,CAAC;IAClO;IACA,OAAOP,KAAK;EAChB;EACA,OAAOC,OAAO;AAClB,CAAC;AACD,eAAeF,wBAAwB"},"metadata":{},"sourceType":"module"}