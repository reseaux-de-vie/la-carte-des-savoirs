{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultGraph = void 0;\n/**\n * A singleton term instance that represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nvar DefaultGraph = /*#__PURE__*/function () {\n  function DefaultGraph() {\n    _classCallCheck(this, DefaultGraph);\n    this.termType = 'DefaultGraph';\n    this.value = '';\n    // Private constructor\n  }\n  _createClass(DefaultGraph, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return !!other && other.termType === 'DefaultGraph';\n    }\n  }]);\n  return DefaultGraph;\n}();\nexports.DefaultGraph = DefaultGraph;\nDefaultGraph.INSTANCE = new DefaultGraph();","map":{"version":3,"sources":["DefaultGraph.ts"],"names":[],"mappings":";;;;;;;;AAEA;;;AAGG;AAHH,IAIa,YAAY;EAMvB,wBAAA;IAAA;IAHgB,IAAA,CAAA,QAAQ,GAAG,cAAc;IACzB,IAAA,CAAA,KAAK,GAAG,EAAE;IAGxB;EACF;EAAC;IAAA;IAAA,OAEM,gBAAO,KAAuB,EAAA;MACnC,OAAO,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,KAAK,cAAc;IACrD;EAAC;EAAA;AAAA;AAZH,OAAA,CAAA,YAAA,GAAA,YAAA;AACgB,YAAA,CAAA,QAAQ,GAAG,IAAI,YAAY,EAAE","sourcesContent":["import type * as RDF from '@rdfjs/types';\n\n/**\n * A singleton term instance that represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nexport class DefaultGraph implements RDF.DefaultGraph {\n  public static INSTANCE = new DefaultGraph();\n\n  public readonly termType = 'DefaultGraph';\n  public readonly value = '';\n\n  private constructor() {\n    // Private constructor\n  }\n\n  public equals(other?: RDF.Term | null): boolean {\n    return !!other && other.termType === 'DefaultGraph';\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}