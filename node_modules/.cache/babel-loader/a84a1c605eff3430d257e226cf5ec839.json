{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Literal = void 0;\nvar NamedNode_1 = require(\"./NamedNode\");\n/**\n * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n */\nvar Literal = /*#__PURE__*/function () {\n  function Literal(value, languageOrDatatype) {\n    _classCallCheck(this, Literal);\n    this.termType = 'Literal';\n    this.value = value;\n    if (typeof languageOrDatatype === 'string') {\n      this.language = languageOrDatatype;\n      this.datatype = Literal.RDF_LANGUAGE_STRING;\n    } else if (languageOrDatatype) {\n      this.language = '';\n      this.datatype = languageOrDatatype;\n    } else {\n      this.language = '';\n      this.datatype = Literal.XSD_STRING;\n    }\n  }\n  _createClass(Literal, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return !!other && other.termType === 'Literal' && other.value === this.value && other.language === this.language && other.datatype.equals(this.datatype);\n    }\n  }]);\n  return Literal;\n}();\nexports.Literal = Literal;\nLiteral.RDF_LANGUAGE_STRING = new NamedNode_1.NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nLiteral.XSD_STRING = new NamedNode_1.NamedNode('http://www.w3.org/2001/XMLSchema#string');","map":{"version":3,"sources":["Literal.ts"],"names":[],"mappings":";;;;;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA;;AAEG;AAFH,IAGa,OAAO;EAYlB,iBAAmB,KAAa,EAAE,kBAA2C,EAAA;IAAA;IAX7D,IAAA,CAAA,QAAQ,GAAG,SAAS;IAYlC,IAAI,CAAC,KAAK,GAAG,KAAK;IAClB,IAAI,OAAO,kBAAkB,KAAK,QAAQ,EAAE;MAC1C,IAAI,CAAC,QAAQ,GAAG,kBAAkB;MAClC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,mBAAmB;KAC5C,MAAM,IAAI,kBAAkB,EAAE;MAC7B,IAAI,CAAC,QAAQ,GAAG,EAAE;MAClB,IAAI,CAAC,QAAQ,GAAG,kBAAkB;KACnC,MAAM;MACL,IAAI,CAAC,QAAQ,GAAG,EAAE;MAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,UAAU;IACnC;EACH;EAAC;IAAA;IAAA,OAEM,gBAAO,KAAuB,EAAA;MACnC,OAAO,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAC1E,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5E;EAAC;EAAA;AAAA;AA7BH,OAAA,CAAA,OAAA,GAAA,OAAA;AAMyB,OAAA,CAAA,mBAAmB,GAC1C,IAAI,WAAA,CAAA,SAAS,CAAC,uDAAuD,CAAC;AAE/C,OAAA,CAAA,UAAU,GACjC,IAAI,WAAA,CAAA,SAAS,CAAC,yCAAyC,CAAC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport { NamedNode } from './NamedNode';\n\n/**\n * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n */\nexport class Literal implements RDF.Literal {\n  public readonly termType = 'Literal';\n  public readonly value: string;\n  public readonly language: string;\n  public readonly datatype: RDF.NamedNode;\n\n  public static readonly RDF_LANGUAGE_STRING: RDF.NamedNode =\n  new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\n\n  public static readonly XSD_STRING: RDF.NamedNode =\n  new NamedNode('http://www.w3.org/2001/XMLSchema#string');\n\n  public constructor(value: string, languageOrDatatype?: string | RDF.NamedNode) {\n    this.value = value;\n    if (typeof languageOrDatatype === 'string') {\n      this.language = languageOrDatatype;\n      this.datatype = Literal.RDF_LANGUAGE_STRING;\n    } else if (languageOrDatatype) {\n      this.language = '';\n      this.datatype = languageOrDatatype;\n    } else {\n      this.language = '';\n      this.datatype = Literal.XSD_STRING;\n    }\n  }\n\n  public equals(other?: RDF.Term | null): boolean {\n    return !!other && other.termType === 'Literal' && other.value === this.value &&\n      other.language === this.language && other.datatype.equals(this.datatype);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}