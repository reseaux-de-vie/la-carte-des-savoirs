{"ast":null,"code":"import _objectSpread from \"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { Node, mergeAttributes } from '@tiptap/core';\nimport Suggestion from '@tiptap/suggestion';\nimport { PluginKey } from 'prosemirror-state';\nvar MentionPluginKey = new PluginKey('mention');\nvar Mention = Node.create({\n  name: 'mention',\n  addOptions: function addOptions() {\n    var _this = this;\n    return {\n      HTMLAttributes: {},\n      renderLabel: function renderLabel(_ref) {\n        var options = _ref.options,\n          node = _ref.node;\n        var _a;\n        return \"\".concat(options.suggestion.char).concat((_a = node.attrs.label) !== null && _a !== void 0 ? _a : node.attrs.id);\n      },\n      suggestion: {\n        char: '@',\n        pluginKey: MentionPluginKey,\n        command: function command(_ref2) {\n          var editor = _ref2.editor,\n            range = _ref2.range,\n            props = _ref2.props;\n          var _a, _b;\n          // increase range.to by one when the next node is of type \"text\"\n          // and starts with a space character\n          var nodeAfter = editor.view.state.selection.$to.nodeAfter;\n          var overrideSpace = (_a = nodeAfter === null || nodeAfter === void 0 ? void 0 : nodeAfter.text) === null || _a === void 0 ? void 0 : _a.startsWith(' ');\n          if (overrideSpace) {\n            range.to += 1;\n          }\n          editor.chain().focus().insertContentAt(range, [{\n            type: _this.name,\n            attrs: props\n          }, {\n            type: 'text',\n            text: ' '\n          }]).run();\n          (_b = window.getSelection()) === null || _b === void 0 ? void 0 : _b.collapseToEnd();\n        },\n        allow: function allow(_ref3) {\n          var state = _ref3.state,\n            range = _ref3.range;\n          var $from = state.doc.resolve(range.from);\n          var type = state.schema.nodes[_this.name];\n          var allow = !!$from.parent.type.contentMatch.matchType(type);\n          return allow;\n        }\n      }\n    };\n  },\n  group: 'inline',\n  inline: true,\n  selectable: false,\n  atom: true,\n  addAttributes: function addAttributes() {\n    return {\n      id: {\n        default: null,\n        parseHTML: function parseHTML(element) {\n          return element.getAttribute('data-id');\n        },\n        renderHTML: function renderHTML(attributes) {\n          if (!attributes.id) {\n            return {};\n          }\n          return {\n            'data-id': attributes.id\n          };\n        }\n      },\n      label: {\n        default: null,\n        parseHTML: function parseHTML(element) {\n          return element.getAttribute('data-label');\n        },\n        renderHTML: function renderHTML(attributes) {\n          if (!attributes.label) {\n            return {};\n          }\n          return {\n            'data-label': attributes.label\n          };\n        }\n      }\n    };\n  },\n  parseHTML: function parseHTML() {\n    return [{\n      tag: \"span[data-type=\\\"\".concat(this.name, \"\\\"]\")\n    }];\n  },\n  renderHTML: function renderHTML(_ref4) {\n    var node = _ref4.node,\n      HTMLAttributes = _ref4.HTMLAttributes;\n    return ['span', mergeAttributes({\n      'data-type': this.name\n    }, this.options.HTMLAttributes, HTMLAttributes), this.options.renderLabel({\n      options: this.options,\n      node: node\n    })];\n  },\n  renderText: function renderText(_ref5) {\n    var node = _ref5.node;\n    return this.options.renderLabel({\n      options: this.options,\n      node: node\n    });\n  },\n  addKeyboardShortcuts: function addKeyboardShortcuts() {\n    var _this2 = this;\n    return {\n      Backspace: function Backspace() {\n        return _this2.editor.commands.command(function (_ref6) {\n          var tr = _ref6.tr,\n            state = _ref6.state;\n          var isMention = false;\n          var selection = state.selection;\n          var empty = selection.empty,\n            anchor = selection.anchor;\n          if (!empty) {\n            return false;\n          }\n          state.doc.nodesBetween(anchor - 1, anchor, function (node, pos) {\n            if (node.type.name === _this2.name) {\n              isMention = true;\n              tr.insertText(_this2.options.suggestion.char || '', pos, pos + node.nodeSize);\n              return false;\n            }\n          });\n          return isMention;\n        });\n      }\n    };\n  },\n  addProseMirrorPlugins: function addProseMirrorPlugins() {\n    return [Suggestion(_objectSpread({\n      editor: this.editor\n    }, this.options.suggestion))];\n  }\n});\nexport { Mention, MentionPluginKey, Mention as default };","map":{"version":3,"sources":["../src/mention.ts"],"names":[],"mappings":"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","sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\nimport Suggestion, { SuggestionOptions } from '@tiptap/suggestion'\nimport { Node as ProseMirrorNode } from 'prosemirror-model'\nimport { PluginKey } from 'prosemirror-state'\n\nexport type MentionOptions = {\n  HTMLAttributes: Record<string, any>,\n  renderLabel: (props: {\n    options: MentionOptions,\n    node: ProseMirrorNode,\n  }) => string,\n  suggestion: Omit<SuggestionOptions, 'editor'>,\n}\n\nexport const MentionPluginKey = new PluginKey('mention')\n\nexport const Mention = Node.create<MentionOptions>({\n  name: 'mention',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      renderLabel({ options, node }) {\n        return `${options.suggestion.char}${node.attrs.label ?? node.attrs.id}`\n      },\n      suggestion: {\n        char: '@',\n        pluginKey: MentionPluginKey,\n        command: ({ editor, range, props }) => {\n          // increase range.to by one when the next node is of type \"text\"\n          // and starts with a space character\n          const nodeAfter = editor.view.state.selection.$to.nodeAfter\n          const overrideSpace = nodeAfter?.text?.startsWith(' ')\n\n          if (overrideSpace) {\n            range.to += 1\n          }\n\n          editor\n            .chain()\n            .focus()\n            .insertContentAt(range, [\n              {\n                type: this.name,\n                attrs: props,\n              },\n              {\n                type: 'text',\n                text: ' ',\n              },\n            ])\n            .run()\n\n          window.getSelection()?.collapseToEnd()\n        },\n        allow: ({ state, range }) => {\n          const $from = state.doc.resolve(range.from)\n          const type = state.schema.nodes[this.name]\n          const allow = !!$from.parent.type.contentMatch.matchType(type)\n\n          return allow\n        },\n      },\n    }\n  },\n\n  group: 'inline',\n\n  inline: true,\n\n  selectable: false,\n\n  atom: true,\n\n  addAttributes() {\n    return {\n      id: {\n        default: null,\n        parseHTML: element => element.getAttribute('data-id'),\n        renderHTML: attributes => {\n          if (!attributes.id) {\n            return {}\n          }\n\n          return {\n            'data-id': attributes.id,\n          }\n        },\n      },\n\n      label: {\n        default: null,\n        parseHTML: element => element.getAttribute('data-label'),\n        renderHTML: attributes => {\n          if (!attributes.label) {\n            return {}\n          }\n\n          return {\n            'data-label': attributes.label,\n          }\n        },\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: `span[data-type=\"${this.name}\"]`,\n      },\n    ]\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    return [\n      'span',\n      mergeAttributes({ 'data-type': this.name }, this.options.HTMLAttributes, HTMLAttributes),\n      this.options.renderLabel({\n        options: this.options,\n        node,\n      }),\n    ]\n  },\n\n  renderText({ node }) {\n    return this.options.renderLabel({\n      options: this.options,\n      node,\n    })\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Backspace: () => this.editor.commands.command(({ tr, state }) => {\n        let isMention = false\n        const { selection } = state\n        const { empty, anchor } = selection\n\n        if (!empty) {\n          return false\n        }\n\n        state.doc.nodesBetween(anchor - 1, anchor, (node, pos) => {\n          if (node.type.name === this.name) {\n            isMention = true\n            tr.insertText(this.options.suggestion.char || '', pos, pos + node.nodeSize)\n\n            return false\n          }\n        })\n\n        return isMention\n      }),\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      Suggestion({\n        editor: this.editor,\n        ...this.options.suggestion,\n      }),\n    ]\n  },\n})\n"]},"metadata":{},"sourceType":"module"}