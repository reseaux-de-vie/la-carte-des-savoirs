{"ast":null,"code":"import { Extension, callOrReturn, getExtensionField } from '@tiptap/core';\nimport { gapCursor } from 'prosemirror-gapcursor';\nvar Gapcursor = Extension.create({\n  name: 'gapCursor',\n  addProseMirrorPlugins: function addProseMirrorPlugins() {\n    return [gapCursor()];\n  },\n  extendNodeSchema: function extendNodeSchema(extension) {\n    var _a;\n    var context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage\n    };\n    return {\n      allowGapCursor: (_a = callOrReturn(getExtensionField(extension, 'allowGapCursor', context))) !== null && _a !== void 0 ? _a : null\n    };\n  }\n});\nexport { Gapcursor, Gapcursor as default };","map":{"version":3,"sources":["../src/gapcursor.ts"],"names":[],"mappings":";;AAyBa,IAAA,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC;EACxC,IAAI,EAAE,WAAW;EAEjB,qBAAqB,mCAAA;IACnB,OAAO,CACL,SAAS,EAAE,CACZ;GACF;EAED,gBAAgB,4BAAC,SAAS,EAAA;;IACxB,IAAM,OAAO,GAAG;MACd,IAAI,EAAE,SAAS,CAAC,IAAI;MACpB,OAAO,EAAE,SAAS,CAAC,OAAO;MAC1B,OAAO,EAAE,SAAS,CAAC;KACpB;IAED,OAAO;MACL,cAAc,EAAE,CAAA,EAAA,GAAA,YAAY,CAAC,iBAAiB,CAAC,SAAS,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI;KAC1F;EACF;AACF,CAAA,CAAA","sourcesContent":["import {\n  callOrReturn,\n  Extension,\n  getExtensionField,\n  ParentConfig,\n} from '@tiptap/core'\nimport { gapCursor } from 'prosemirror-gapcursor'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options, Storage> {\n    /**\n     * Allow gap cursor\n     */\n    allowGapCursor?:\n      | boolean\n      | null\n      | ((this: {\n        name: string,\n        options: Options,\n        storage: Storage,\n        parent: ParentConfig<NodeConfig<Options>>['allowGapCursor'],\n      }) => boolean | null),\n  }\n}\n\nexport const Gapcursor = Extension.create({\n  name: 'gapCursor',\n\n  addProseMirrorPlugins() {\n    return [\n      gapCursor(),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    return {\n      allowGapCursor: callOrReturn(getExtensionField(extension, 'allowGapCursor', context)) ?? null,\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}