{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/jean-daniel/Documents/Projets/D\\xE9veloppement/ActivityPods/BCM/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Quad = void 0;\n/**\n * An instance of DefaultGraph represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nvar Quad = /*#__PURE__*/function () {\n  function Quad(subject, predicate, object, graph) {\n    _classCallCheck(this, Quad);\n    this.termType = 'Quad';\n    this.value = '';\n    this.subject = subject;\n    this.predicate = predicate;\n    this.object = object;\n    this.graph = graph;\n  }\n  _createClass(Quad, [{\n    key: \"equals\",\n    value: function equals(other) {\n      // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n      return !!other && (other.termType === 'Quad' || !other.termType) && this.subject.equals(other.subject) && this.predicate.equals(other.predicate) && this.object.equals(other.object) && this.graph.equals(other.graph);\n    }\n  }]);\n  return Quad;\n}();\nexports.Quad = Quad;","map":{"version":3,"sources":["Quad.ts"],"names":[],"mappings":";;;;;;;;AAEA;;;AAGG;AAHH,IAIa,IAAI;EAQf,cACE,OAAiB,EACjB,SAAmB,EACnB,MAAgB,EAChB,KAAe,EAAA;IAAA;IAXD,IAAA,CAAA,QAAQ,GAAG,MAAM;IACjB,IAAA,CAAA,KAAK,GAAG,EAAE;IAYxB,IAAI,CAAC,OAAO,GAAG,OAAO;IACtB,IAAI,CAAC,SAAS,GAAG,SAAS;IAC1B,IAAI,CAAC,MAAM,GAAG,MAAM;IACpB,IAAI,CAAC,KAAK,GAAG,KAAK;EACpB;EAAC;IAAA;IAAA,OAEM,gBAAO,KAAuB,EAAA;MACnC;MACA,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,KAAK,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAC9D,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAClC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IACtC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAChC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;IAClC;EAAC;EAAA;AAAA;AA3BH,OAAA,CAAA,IAAA,GAAA,IAAA","sourcesContent":["import type * as RDF from '@rdfjs/types';\n\n/**\n * An instance of DefaultGraph represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nexport class Quad implements RDF.BaseQuad {\n  public readonly termType = 'Quad';\n  public readonly value = '';\n  public readonly subject: RDF.Term;\n  public readonly predicate: RDF.Term;\n  public readonly object: RDF.Term;\n  public readonly graph: RDF.Term;\n\n  public constructor(\n    subject: RDF.Term,\n    predicate: RDF.Term,\n    object: RDF.Term,\n    graph: RDF.Term,\n  ) {\n    this.subject = subject;\n    this.predicate = predicate;\n    this.object = object;\n    this.graph = graph;\n  }\n\n  public equals(other?: RDF.Term | null): boolean {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      this.subject.equals(other.subject) &&\n      this.predicate.equals(other.predicate) &&\n      this.object.equals(other.object) &&\n      this.graph.equals(other.graph);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}