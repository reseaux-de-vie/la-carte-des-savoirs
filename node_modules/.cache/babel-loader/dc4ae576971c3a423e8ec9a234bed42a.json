{"ast":null,"code":"import e, { useState as t, useMemo as r, useEffect as n } from \"react\";\nimport { useLocale as o, useTranslate as a, useInput as i, FieldTitle as l, InputHelperText as c, useResourceDefinition as u, ShowButton as s, EditButton as p, useListContext as f } from \"react-admin\";\nimport { makeStyles as m, TextField as h, Grid as g, Typography as d, Drawer as b, Box as y, IconButton as v, useMediaQuery as E } from \"@material-ui/core\";\nimport O from \"@material-ui/lab/Autocomplete\";\nimport x from \"@material-ui/icons/LocationOn\";\nimport A from \"lodash.throttle\";\nimport { useHistory as w, useLocation as P } from \"react-router\";\nimport j from \"@material-ui/core/CircularProgress\";\nimport \"leaflet-defaulticon-compatibility\";\nimport { useMapEvents as C, useMap as I, Marker as S, Popup as U, Polyline as k, MapContainer as z, TileLayer as T } from \"react-leaflet\";\nimport M from \"leaflet\";\nimport { createPathComponent as R } from \"@react-leaflet/core\";\nimport \"leaflet.markercluster\";\nimport L from \"@material-ui/icons/Close\";\nvar N = function N(e, t) {\n  var r = e.find(function (e) {\n    return e.id.startsWith(t + \".\");\n  });\n  if (r) return r.text;\n};\nfunction W(e, t) {\n  var r = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    t && (n = n.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), r.push.apply(r, n);\n  }\n  return r;\n}\nfunction B(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var r = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? W(Object(r), !0).forEach(function (t) {\n      H(e, t, r[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : W(Object(r)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n    });\n  }\n  return e;\n}\nfunction H(e, t, r) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: r,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = r, e;\n}\nfunction q() {\n  return (q = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = arguments[t];\n      for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);\n    }\n    return e;\n  }).apply(this, arguments);\n}\nfunction D(e, t) {\n  if (null == e) return {};\n  var r,\n    n,\n    o = function (e, t) {\n      if (null == e) return {};\n      var r,\n        n,\n        o = {},\n        a = Object.keys(e);\n      for (n = 0; n < a.length; n++) r = a[n], t.indexOf(r) >= 0 || (o[r] = e[r]);\n      return o;\n    }(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var a = Object.getOwnPropertySymbols(e);\n    for (n = 0; n < a.length; n++) r = a[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);\n  }\n  return o;\n}\nfunction F(e, t) {\n  return function (e) {\n    if (Array.isArray(e)) return e;\n  }(e) || function (e, t) {\n    var r = null == e ? null : \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n    if (null == r) return;\n    var n,\n      o,\n      a = [],\n      i = !0,\n      l = !1;\n    try {\n      for (r = r.call(e); !(i = (n = r.next()).done) && (a.push(n.value), !t || a.length !== t); i = !0);\n    } catch (e) {\n      l = !0, o = e;\n    } finally {\n      try {\n        i || null == r.return || r.return();\n      } finally {\n        if (l) throw o;\n      }\n    }\n    return a;\n  }(e, t) || Y(e, t) || function () {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction X(e) {\n  return function (e) {\n    if (Array.isArray(e)) return G(e);\n  }(e) || function (e) {\n    if (\"undefined\" != typeof Symbol && null != e[Symbol.iterator] || null != e[\"@@iterator\"]) return Array.from(e);\n  }(e) || Y(e) || function () {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nfunction Y(e, t) {\n  if (e) {\n    if (\"string\" == typeof e) return G(e, t);\n    var r = Object.prototype.toString.call(e).slice(8, -1);\n    return \"Object\" === r && e.constructor && (r = e.constructor.name), \"Map\" === r || \"Set\" === r ? Array.from(e) : \"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? G(e, t) : void 0;\n  }\n}\nfunction G(e, t) {\n  (null == t || t > e.length) && (t = e.length);\n  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];\n  return n;\n}\n\"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self && self;\nfunction Z(e, t) {\n  return e(t = {\n    exports: {}\n  }, t.exports), t.exports;\n}\nvar V = Z(function (e, t) {\n  var r, n;\n  e.exports = (r = {\n    772: function _(e, t, r) {\n      var n = r(826).remove,\n        o = /[.*+?^${}()|[\\]\\\\]/g,\n        a = /[a-z0-9_]/i,\n        i = /\\s+/;\n      e.exports = function (e, t, r) {\n        var l, c;\n        c = {\n          insideWords: !1,\n          findAllOccurrences: !1,\n          requireMatchAll: !1\n        }, l = (l = r) || {}, Object.keys(l).forEach(function (e) {\n          c[e] = !!l[e];\n        }), r = c;\n        var u = Array.from(e).map(function (e) {\n          return n(e);\n        });\n        var s = u.join(\"\");\n        return (t = n(t)).trim().split(i).filter(function (e) {\n          return e.length > 0;\n        }).reduce(function (e, t) {\n          var n = t.length,\n            i = !r.insideWords && a.test(t[0]) ? \"\\\\b\" : \"\",\n            l = new RegExp(i + t.replace(o, \"\\\\$&\"), \"i\");\n          var c, p;\n          if (c = l.exec(s), r.requireMatchAll && null === c) return s = \"\", [];\n          for (; c;) {\n            p = c.index;\n            var _t = n - u.slice(p, p + n).join(\"\").length,\n              _o = p - u.slice(0, p).join(\"\").length,\n              _a = [p + _o, p + n + _o + _t];\n            if (_a[0] !== _a[1] && e.push(_a), s = s.slice(0, p) + new Array(n + 1).join(\" \") + s.slice(p + n), !r.findAllOccurrences) break;\n            c = l.exec(s);\n          }\n          return e;\n        }, []).sort(function (e, t) {\n          return e[0] - t[0];\n        });\n      };\n    },\n    826: function _(e) {\n      var t = {\n          \"À\": \"A\",\n          \"Á\": \"A\",\n          \"Â\": \"A\",\n          \"Ã\": \"A\",\n          \"Ä\": \"A\",\n          \"Å\": \"A\",\n          \"Ấ\": \"A\",\n          \"Ắ\": \"A\",\n          \"Ẳ\": \"A\",\n          \"Ẵ\": \"A\",\n          \"Ặ\": \"A\",\n          \"Æ\": \"AE\",\n          \"Ầ\": \"A\",\n          \"Ằ\": \"A\",\n          \"Ȃ\": \"A\",\n          \"Ç\": \"C\",\n          \"Ḉ\": \"C\",\n          \"È\": \"E\",\n          \"É\": \"E\",\n          \"Ê\": \"E\",\n          \"Ë\": \"E\",\n          \"Ế\": \"E\",\n          \"Ḗ\": \"E\",\n          \"Ề\": \"E\",\n          \"Ḕ\": \"E\",\n          \"Ḝ\": \"E\",\n          \"Ȇ\": \"E\",\n          \"Ì\": \"I\",\n          \"Í\": \"I\",\n          \"Î\": \"I\",\n          \"Ï\": \"I\",\n          \"Ḯ\": \"I\",\n          \"Ȋ\": \"I\",\n          \"Ð\": \"D\",\n          \"Ñ\": \"N\",\n          \"Ò\": \"O\",\n          \"Ó\": \"O\",\n          \"Ô\": \"O\",\n          \"Õ\": \"O\",\n          \"Ö\": \"O\",\n          \"Ø\": \"O\",\n          \"Ố\": \"O\",\n          \"Ṍ\": \"O\",\n          \"Ṓ\": \"O\",\n          \"Ȏ\": \"O\",\n          \"Ù\": \"U\",\n          \"Ú\": \"U\",\n          \"Û\": \"U\",\n          \"Ü\": \"U\",\n          \"Ý\": \"Y\",\n          \"à\": \"a\",\n          \"á\": \"a\",\n          \"â\": \"a\",\n          \"ã\": \"a\",\n          \"ä\": \"a\",\n          \"å\": \"a\",\n          \"ấ\": \"a\",\n          \"ắ\": \"a\",\n          \"ẳ\": \"a\",\n          \"ẵ\": \"a\",\n          \"ặ\": \"a\",\n          \"æ\": \"ae\",\n          \"ầ\": \"a\",\n          \"ằ\": \"a\",\n          \"ȃ\": \"a\",\n          \"ç\": \"c\",\n          \"ḉ\": \"c\",\n          \"è\": \"e\",\n          \"é\": \"e\",\n          \"ê\": \"e\",\n          \"ë\": \"e\",\n          \"ế\": \"e\",\n          \"ḗ\": \"e\",\n          \"ề\": \"e\",\n          \"ḕ\": \"e\",\n          \"ḝ\": \"e\",\n          \"ȇ\": \"e\",\n          \"ì\": \"i\",\n          \"í\": \"i\",\n          \"î\": \"i\",\n          \"ï\": \"i\",\n          \"ḯ\": \"i\",\n          \"ȋ\": \"i\",\n          \"ð\": \"d\",\n          \"ñ\": \"n\",\n          \"ò\": \"o\",\n          \"ó\": \"o\",\n          \"ô\": \"o\",\n          \"õ\": \"o\",\n          \"ö\": \"o\",\n          \"ø\": \"o\",\n          \"ố\": \"o\",\n          \"ṍ\": \"o\",\n          \"ṓ\": \"o\",\n          \"ȏ\": \"o\",\n          \"ù\": \"u\",\n          \"ú\": \"u\",\n          \"û\": \"u\",\n          \"ü\": \"u\",\n          \"ý\": \"y\",\n          \"ÿ\": \"y\",\n          \"Ā\": \"A\",\n          \"ā\": \"a\",\n          \"Ă\": \"A\",\n          \"ă\": \"a\",\n          \"Ą\": \"A\",\n          \"ą\": \"a\",\n          \"Ć\": \"C\",\n          \"ć\": \"c\",\n          \"Ĉ\": \"C\",\n          \"ĉ\": \"c\",\n          \"Ċ\": \"C\",\n          \"ċ\": \"c\",\n          \"Č\": \"C\",\n          \"č\": \"c\",\n          \"C̆\": \"C\",\n          \"c̆\": \"c\",\n          \"Ď\": \"D\",\n          \"ď\": \"d\",\n          \"Đ\": \"D\",\n          \"đ\": \"d\",\n          \"Ē\": \"E\",\n          \"ē\": \"e\",\n          \"Ĕ\": \"E\",\n          \"ĕ\": \"e\",\n          \"Ė\": \"E\",\n          \"ė\": \"e\",\n          \"Ę\": \"E\",\n          \"ę\": \"e\",\n          \"Ě\": \"E\",\n          \"ě\": \"e\",\n          \"Ĝ\": \"G\",\n          \"Ǵ\": \"G\",\n          \"ĝ\": \"g\",\n          \"ǵ\": \"g\",\n          \"Ğ\": \"G\",\n          \"ğ\": \"g\",\n          \"Ġ\": \"G\",\n          \"ġ\": \"g\",\n          \"Ģ\": \"G\",\n          \"ģ\": \"g\",\n          \"Ĥ\": \"H\",\n          \"ĥ\": \"h\",\n          \"Ħ\": \"H\",\n          \"ħ\": \"h\",\n          \"Ḫ\": \"H\",\n          \"ḫ\": \"h\",\n          \"Ĩ\": \"I\",\n          \"ĩ\": \"i\",\n          \"Ī\": \"I\",\n          \"ī\": \"i\",\n          \"Ĭ\": \"I\",\n          \"ĭ\": \"i\",\n          \"Į\": \"I\",\n          \"į\": \"i\",\n          \"İ\": \"I\",\n          \"ı\": \"i\",\n          \"Ĳ\": \"IJ\",\n          \"ĳ\": \"ij\",\n          \"Ĵ\": \"J\",\n          \"ĵ\": \"j\",\n          \"Ķ\": \"K\",\n          \"ķ\": \"k\",\n          \"Ḱ\": \"K\",\n          \"ḱ\": \"k\",\n          \"K̆\": \"K\",\n          \"k̆\": \"k\",\n          \"Ĺ\": \"L\",\n          \"ĺ\": \"l\",\n          \"Ļ\": \"L\",\n          \"ļ\": \"l\",\n          \"Ľ\": \"L\",\n          \"ľ\": \"l\",\n          \"Ŀ\": \"L\",\n          \"ŀ\": \"l\",\n          \"Ł\": \"l\",\n          \"ł\": \"l\",\n          \"Ḿ\": \"M\",\n          \"ḿ\": \"m\",\n          \"M̆\": \"M\",\n          \"m̆\": \"m\",\n          \"Ń\": \"N\",\n          \"ń\": \"n\",\n          \"Ņ\": \"N\",\n          \"ņ\": \"n\",\n          \"Ň\": \"N\",\n          \"ň\": \"n\",\n          \"ŉ\": \"n\",\n          \"N̆\": \"N\",\n          \"n̆\": \"n\",\n          \"Ō\": \"O\",\n          \"ō\": \"o\",\n          \"Ŏ\": \"O\",\n          \"ŏ\": \"o\",\n          \"Ő\": \"O\",\n          \"ő\": \"o\",\n          \"Œ\": \"OE\",\n          \"œ\": \"oe\",\n          \"P̆\": \"P\",\n          \"p̆\": \"p\",\n          \"Ŕ\": \"R\",\n          \"ŕ\": \"r\",\n          \"Ŗ\": \"R\",\n          \"ŗ\": \"r\",\n          \"Ř\": \"R\",\n          \"ř\": \"r\",\n          \"R̆\": \"R\",\n          \"r̆\": \"r\",\n          \"Ȓ\": \"R\",\n          \"ȓ\": \"r\",\n          \"Ś\": \"S\",\n          \"ś\": \"s\",\n          \"Ŝ\": \"S\",\n          \"ŝ\": \"s\",\n          \"Ş\": \"S\",\n          \"Ș\": \"S\",\n          \"ș\": \"s\",\n          \"ş\": \"s\",\n          \"Š\": \"S\",\n          \"š\": \"s\",\n          \"Ţ\": \"T\",\n          \"ţ\": \"t\",\n          \"ț\": \"t\",\n          \"Ț\": \"T\",\n          \"Ť\": \"T\",\n          \"ť\": \"t\",\n          \"Ŧ\": \"T\",\n          \"ŧ\": \"t\",\n          \"T̆\": \"T\",\n          \"t̆\": \"t\",\n          \"Ũ\": \"U\",\n          \"ũ\": \"u\",\n          \"Ū\": \"U\",\n          \"ū\": \"u\",\n          \"Ŭ\": \"U\",\n          \"ŭ\": \"u\",\n          \"Ů\": \"U\",\n          \"ů\": \"u\",\n          \"Ű\": \"U\",\n          \"ű\": \"u\",\n          \"Ų\": \"U\",\n          \"ų\": \"u\",\n          \"Ȗ\": \"U\",\n          \"ȗ\": \"u\",\n          \"V̆\": \"V\",\n          \"v̆\": \"v\",\n          \"Ŵ\": \"W\",\n          \"ŵ\": \"w\",\n          \"Ẃ\": \"W\",\n          \"ẃ\": \"w\",\n          \"X̆\": \"X\",\n          \"x̆\": \"x\",\n          \"Ŷ\": \"Y\",\n          \"ŷ\": \"y\",\n          \"Ÿ\": \"Y\",\n          \"Y̆\": \"Y\",\n          \"y̆\": \"y\",\n          \"Ź\": \"Z\",\n          \"ź\": \"z\",\n          \"Ż\": \"Z\",\n          \"ż\": \"z\",\n          \"Ž\": \"Z\",\n          \"ž\": \"z\",\n          \"ſ\": \"s\",\n          \"ƒ\": \"f\",\n          \"Ơ\": \"O\",\n          \"ơ\": \"o\",\n          \"Ư\": \"U\",\n          \"ư\": \"u\",\n          \"Ǎ\": \"A\",\n          \"ǎ\": \"a\",\n          \"Ǐ\": \"I\",\n          \"ǐ\": \"i\",\n          \"Ǒ\": \"O\",\n          \"ǒ\": \"o\",\n          \"Ǔ\": \"U\",\n          \"ǔ\": \"u\",\n          \"Ǖ\": \"U\",\n          \"ǖ\": \"u\",\n          \"Ǘ\": \"U\",\n          \"ǘ\": \"u\",\n          \"Ǚ\": \"U\",\n          \"ǚ\": \"u\",\n          \"Ǜ\": \"U\",\n          \"ǜ\": \"u\",\n          \"Ứ\": \"U\",\n          \"ứ\": \"u\",\n          \"Ṹ\": \"U\",\n          \"ṹ\": \"u\",\n          \"Ǻ\": \"A\",\n          \"ǻ\": \"a\",\n          \"Ǽ\": \"AE\",\n          \"ǽ\": \"ae\",\n          \"Ǿ\": \"O\",\n          \"ǿ\": \"o\",\n          \"Þ\": \"TH\",\n          \"þ\": \"th\",\n          \"Ṕ\": \"P\",\n          \"ṕ\": \"p\",\n          \"Ṥ\": \"S\",\n          \"ṥ\": \"s\",\n          \"X́\": \"X\",\n          \"x́\": \"x\",\n          \"Ѓ\": \"Г\",\n          \"ѓ\": \"г\",\n          \"Ќ\": \"К\",\n          \"ќ\": \"к\",\n          \"A̋\": \"A\",\n          \"a̋\": \"a\",\n          \"E̋\": \"E\",\n          \"e̋\": \"e\",\n          \"I̋\": \"I\",\n          \"i̋\": \"i\",\n          \"Ǹ\": \"N\",\n          \"ǹ\": \"n\",\n          \"Ồ\": \"O\",\n          \"ồ\": \"o\",\n          \"Ṑ\": \"O\",\n          \"ṑ\": \"o\",\n          \"Ừ\": \"U\",\n          \"ừ\": \"u\",\n          \"Ẁ\": \"W\",\n          \"ẁ\": \"w\",\n          \"Ỳ\": \"Y\",\n          \"ỳ\": \"y\",\n          \"Ȁ\": \"A\",\n          \"ȁ\": \"a\",\n          \"Ȅ\": \"E\",\n          \"ȅ\": \"e\",\n          \"Ȉ\": \"I\",\n          \"ȉ\": \"i\",\n          \"Ȍ\": \"O\",\n          \"ȍ\": \"o\",\n          \"Ȑ\": \"R\",\n          \"ȑ\": \"r\",\n          \"Ȕ\": \"U\",\n          \"ȕ\": \"u\",\n          \"B̌\": \"B\",\n          \"b̌\": \"b\",\n          \"Č̣\": \"C\",\n          \"č̣\": \"c\",\n          \"Ê̌\": \"E\",\n          \"ê̌\": \"e\",\n          \"F̌\": \"F\",\n          \"f̌\": \"f\",\n          \"Ǧ\": \"G\",\n          \"ǧ\": \"g\",\n          \"Ȟ\": \"H\",\n          \"ȟ\": \"h\",\n          \"J̌\": \"J\",\n          \"ǰ\": \"j\",\n          \"Ǩ\": \"K\",\n          \"ǩ\": \"k\",\n          \"M̌\": \"M\",\n          \"m̌\": \"m\",\n          \"P̌\": \"P\",\n          \"p̌\": \"p\",\n          \"Q̌\": \"Q\",\n          \"q̌\": \"q\",\n          \"Ř̩\": \"R\",\n          \"ř̩\": \"r\",\n          \"Ṧ\": \"S\",\n          \"ṧ\": \"s\",\n          \"V̌\": \"V\",\n          \"v̌\": \"v\",\n          \"W̌\": \"W\",\n          \"w̌\": \"w\",\n          \"X̌\": \"X\",\n          \"x̌\": \"x\",\n          \"Y̌\": \"Y\",\n          \"y̌\": \"y\",\n          \"A̧\": \"A\",\n          \"a̧\": \"a\",\n          \"B̧\": \"B\",\n          \"b̧\": \"b\",\n          \"Ḑ\": \"D\",\n          \"ḑ\": \"d\",\n          \"Ȩ\": \"E\",\n          \"ȩ\": \"e\",\n          \"Ɛ̧\": \"E\",\n          \"ɛ̧\": \"e\",\n          \"Ḩ\": \"H\",\n          \"ḩ\": \"h\",\n          \"I̧\": \"I\",\n          \"i̧\": \"i\",\n          \"Ɨ̧\": \"I\",\n          \"ɨ̧\": \"i\",\n          \"M̧\": \"M\",\n          \"m̧\": \"m\",\n          \"O̧\": \"O\",\n          \"o̧\": \"o\",\n          \"Q̧\": \"Q\",\n          \"q̧\": \"q\",\n          \"U̧\": \"U\",\n          \"u̧\": \"u\",\n          \"X̧\": \"X\",\n          \"x̧\": \"x\",\n          \"Z̧\": \"Z\",\n          \"z̧\": \"z\"\n        },\n        r = Object.keys(t).join(\"|\"),\n        n = new RegExp(r, \"g\"),\n        o = new RegExp(r, \"\"),\n        a = function a(e) {\n          return e.replace(n, function (e) {\n            return t[e];\n          });\n        };\n      e.exports = a, e.exports.has = function (e) {\n        return !!e.match(o);\n      }, e.exports.remove = a;\n    }\n  }, n = {}, function e(t) {\n    var o = n[t];\n    if (void 0 !== o) return o.exports;\n    var a = n[t] = {\n      exports: {}\n    };\n    return r[t](a, a.exports, e), a.exports;\n  }(772));\n});\nV.AutosuggestHighlightMatch;\nvar _ = Z(function (e, t) {\n  var r, n;\n  e.exports = (r = {\n    705: function _(e) {\n      e.exports = function (e, t) {\n        var r = [];\n        return 0 === t.length ? r.push({\n          text: e,\n          highlight: !1\n        }) : t[0][0] > 0 && r.push({\n          text: e.slice(0, t[0][0]),\n          highlight: !1\n        }), t.forEach(function (n, o) {\n          var a = n[0],\n            i = n[1];\n          r.push({\n            text: e.slice(a, i),\n            highlight: !0\n          }), o === t.length - 1 ? i < e.length && r.push({\n            text: e.slice(i, e.length),\n            highlight: !1\n          }) : i < t[o + 1][0] && r.push({\n            text: e.slice(i, t[o + 1][0]),\n            highlight: !1\n          });\n        }), r;\n      };\n    }\n  }, n = {}, function e(t) {\n    var o = n[t];\n    if (void 0 !== o) return o.exports;\n    var a = n[t] = {\n      exports: {}\n    };\n    return r[t](a, a.exports, e), a.exports;\n  }(705));\n});\n_.AutosuggestHighlightParse;\nvar K = [\"mapboxConfig\", \"record\", \"resource\", \"source\", \"label\", \"basePath\", \"parse\", \"optionText\", \"helperText\"],\n  J = m(function (e) {\n    return {\n      icon: {\n        color: e.palette.text.secondary,\n        marginRight: e.spacing(2)\n      }\n    };\n  }),\n  Q = function Q(e, t) {\n    return e.place_name ? e.place_name : \"string\" == typeof t ? e[t] : \"function\" == typeof t ? t(e) : void 0;\n  },\n  $ = function $(u) {\n    var s = u.mapboxConfig;\n    u.record;\n    var p = u.resource,\n      f = u.source,\n      m = u.label;\n    u.basePath;\n    var b = u.parse,\n      y = u.optionText,\n      v = u.helperText,\n      E = D(u, K);\n    if (!s) throw new Error(\"@semapps/geo-components : No mapbox configuration\");\n    if (!s.access_token) throw new Error(\"@semapps/geo-components : No access token in mapbox configuration\");\n    var w = J(),\n      P = o(),\n      j = a(),\n      C = F(t(\"\"), 2),\n      I = C[0],\n      S = C[1],\n      U = F(t([]), 2),\n      k = U[0],\n      z = U[1],\n      T = i(B({\n        resource: p,\n        source: f\n      }, E)),\n      M = T.input,\n      R = M.value,\n      L = M.onChange,\n      N = M.onBlur,\n      W = M.onFocus,\n      H = T.isRequired,\n      Y = T.meta,\n      G = Y.error,\n      Z = Y.submitError,\n      $ = Y.touched,\n      ee = r(function () {\n        return A(function (e, t) {\n          var r = new URL(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\".concat(e, \".json\"));\n          s.language || (s.language = P), Object.entries(s).forEach(function (e) {\n            var t = F(e, 2),\n              n = t[0],\n              o = t[1];\n            Array.isArray(o) ? o = o.join(\",\") : \"boolean\" == typeof o && (o = o ? \"true\" : \"false\"), r.searchParams.set(n, o);\n          }), fetch(r.toString()).then(function (e) {\n            return e.json();\n          }).then(function (e) {\n            return t(e);\n          });\n        }, 200);\n      }, [s, P]);\n    return n(function () {\n      I && I !== Q(R, y) && ee(I, function (e) {\n        return z(e.features);\n      });\n    }, [R, I, ee]), e.createElement(O, {\n      autoComplete: !0,\n      value: R || null,\n      options: R ? [R].concat(X(k)) : k,\n      filterSelectedOptions: !0,\n      filterOptions: function filterOptions(e) {\n        return e;\n      },\n      getOptionLabel: function getOptionLabel(e) {\n        return Q(e, y);\n      },\n      getOptionSelected: function getOptionSelected(e, t) {\n        return Q(e, y) === Q(t, y);\n      },\n      onChange: function onChange(e, t) {\n        t && b && (t = b(t)), L(t), z([]);\n      },\n      onInputChange: function onInputChange(e, t) {\n        return S(t);\n      },\n      noOptionsText: j(\"ra.navigation.no_results\"),\n      renderInput: function renderInput(t) {\n        return t.inputProps.autoComplete = \"new-password\", e.createElement(h, q({}, t, {\n          inputProps: B(B({}, t.inputProps), {}, {\n            onBlur: function onBlur(e) {\n              N(e), t.inputProps.onBlur && t.inputProps.onBlur(e);\n            },\n            onFocus: function onFocus(e) {\n              W(e), t.inputProps.onFocus && t.inputProps.onFocus(e);\n            }\n          }),\n          label: \"\" !== m && !1 !== m && e.createElement(l, {\n            label: m,\n            source: f,\n            resource: p,\n            isRequired: H\n          }),\n          error: !(!$ || !G && !Z),\n          helperText: e.createElement(c, {\n            touched: $,\n            error: G || Z,\n            helperText: v\n          })\n        }, E));\n      },\n      renderOption: function renderOption(t) {\n        var r = V(t.text, I),\n          n = _(t.text, r);\n        return e.createElement(g, {\n          container: !0,\n          alignItems: \"center\"\n        }, e.createElement(g, {\n          item: !0\n        }, e.createElement(x, {\n          className: w.icon\n        })), e.createElement(g, {\n          item: !0,\n          xs: !0\n        }, \"string\" == typeof n ? n : n.map(function (t, r) {\n          return e.createElement(\"span\", {\n            key: r,\n            style: {\n              fontWeight: t.highlight ? 700 : 400\n            }\n          }, t.text);\n        }), e.createElement(d, {\n          variant: \"body2\",\n          color: \"textSecondary\"\n        }, t.place_name)));\n      }\n    });\n  };\n$.defaultProps = {\n  variant: \"filled\",\n  margin: \"dense\"\n};\nvar ee = [\"children\"];\nvar te = R(function (e, t) {\n    e.children;\n    var r = D(e, ee),\n      n = {},\n      o = {};\n    Object.entries(r).forEach(function (e) {\n      var t = F(e, 2),\n        r = t[0],\n        a = t[1];\n      return r.startsWith(\"on\") ? o[r] = a : n[r] = a;\n    });\n    var a = new M.MarkerClusterGroup(n);\n    return Object.entries(o).forEach(function (e) {\n      var t = F(e, 2),\n        r = t[0],\n        n = t[1],\n        o = \"cluster\".concat(r.substring(2).toLowerCase());\n      a.on(o, n);\n    }), {\n      instance: a,\n      context: B(B({}, t), {}, {\n        layerContainer: a\n      })\n    };\n  }),\n  re = function re() {\n    var e = w(),\n      t = new URLSearchParams(e.location.search);\n    return C({\n      moveend: function moveend(r) {\n        t.set(\"lat\", r.target.getCenter().lat), t.set(\"lng\", r.target.getCenter().lng), e.replace({\n          pathname: e.location.pathname,\n          search: \"?\" + t.toString()\n        });\n      },\n      zoomend: function zoomend(r) {\n        t.set(\"zoom\", r.target.getZoom()), e.replace({\n          pathname: e.location.pathname,\n          search: \"?\" + t.toString()\n        });\n      }\n    }), null;\n  },\n  ne = m(function () {\n    return {\n      closeButton: {\n        position: \"absolute\",\n        zIndex: 1400,\n        top: 0,\n        right: 0\n      }\n    };\n  }),\n  oe = function oe(t) {\n    var r = t.record,\n      o = t.basePath,\n      a = t.popupContent,\n      i = t.onClose,\n      l = ne(),\n      c = I();\n    return n(function () {\n      r && c.setView([r.latitude, r.longitude]);\n    }, [r, c]), e.createElement(b, {\n      anchor: \"bottom\",\n      open: !!r,\n      onClose: i\n    }, e.createElement(y, {\n      p: 1,\n      position: \"relative\"\n    }, e.createElement(v, {\n      onClick: i,\n      className: l.closeButton\n    }, e.createElement(L, null)), r && e.createElement(a, {\n      record: r,\n      basePath: o\n    })));\n  },\n  ae = [\"latitude\", \"longitude\", \"label\", \"description\", \"popupContent\", \"height\", \"center\", \"zoom\", \"groupClusters\", \"boundToMarkers\", \"connectMarkers\"],\n  ie = m(function () {\n    return {\n      loading: {\n        zIndex: 1e3,\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }\n    };\n  }),\n  le = function le(r) {\n    var n,\n      o = r.latitude,\n      a = r.longitude,\n      i = r.label,\n      l = r.description,\n      c = r.popupContent,\n      u = r.height,\n      s = r.center,\n      p = r.zoom,\n      m = r.groupClusters,\n      h = r.boundToMarkers,\n      g = r.connectMarkers,\n      d = D(r, ae),\n      b = f(),\n      v = b.ids,\n      O = b.data,\n      x = b.basePath,\n      A = b.loading,\n      w = E(function (e) {\n        return e.breakpoints.down(\"xs\");\n      }, {\n        noSsr: !0\n      }),\n      C = F(t(null), 2),\n      I = C[0],\n      M = C[1],\n      R = ie(),\n      L = new URLSearchParams(P().search);\n    s = L.has(\"lat\") && L.has(\"lng\") ? [L.get(\"lat\"), L.get(\"lng\")] : s, p = L.has(\"zoom\") ? L.get(\"zoom\") : p;\n    var N = v.filter(function (e) {\n        return O[e];\n      }).map(function (e) {\n        return B(B({}, O[e]), {}, {\n          latitude: o && o(O[e]),\n          longitude: a && a(O[e]),\n          label: i && i(O[e]),\n          description: l && l(O[e])\n        });\n      }).filter(function (e) {\n        return e.latitude && e.longitude;\n      }),\n      W = h && N.length > 0 ? N.map(function (e) {\n        return [e.latitude, e.longitude];\n      }) : void 0;\n    if (h && !W) return null;\n    var H = N.map(function (t, r) {\n      var o = e.createElement(e.Fragment, {\n        key: r\n      }, e.createElement(S, {\n        position: [t.latitude, t.longitude],\n        eventHandlers: w ? {\n          click: function click() {\n            return M(t);\n          }\n        } : void 0\n      }, !w && e.createElement(U, null, e.createElement(c, {\n        record: t,\n        basePath: x\n      }))), g && n && e.createElement(k, {\n        positions: [[n.latitude, n.longitude], [t.latitude, t.longitude]]\n      }));\n      return n = t, o;\n    });\n    return e.createElement(z, q({\n      style: {\n        height: u\n      },\n      center: h ? void 0 : s,\n      zoom: h ? void 0 : p,\n      bounds: W\n    }, d), e.createElement(T, {\n      attribution: '© <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }), A && e.createElement(y, {\n      alignItems: \"center\",\n      className: R.loading\n    }, e.createElement(j, {\n      size: 60,\n      thickness: 6\n    })), m ? e.createElement(te, {\n      showCoverageOnHover: !1\n    }, H) : H, e.createElement(re, null), e.createElement(oe, {\n      record: I,\n      basePath: x,\n      popupContent: c,\n      onClose: function onClose() {\n        return M(null);\n      }\n    }));\n  };\nle.defaultProps = {\n  height: 700,\n  center: [47, 2.213749],\n  zoom: 6,\n  groupClusters: !0,\n  connectMarkers: !1,\n  scrollWheelZoom: !1,\n  popupContent: function popupContent(t) {\n    var r = t.record,\n      n = t.basePath,\n      o = u({});\n    return e.createElement(e.Fragment, null, r.label && e.createElement(d, {\n      variant: \"h5\"\n    }, r.label), r.description && e.createElement(d, null, r.description.length > 150 ? r.description.substring(0, 150) + \"...\" : r.description), o.hasShow && e.createElement(s, {\n      basePath: n,\n      record: r\n    }), o.hasEdit && e.createElement(p, {\n      basePath: n,\n      record: r\n    }));\n  }\n};\nvar ce = function ce(e) {\n    var t = e.center,\n      r = e.zoom;\n    return I().setView(t, r), null;\n  },\n  ue = [\"record\", \"latitude\", \"longitude\", \"address\", \"height\", \"addLabel\", \"typographyProps\"],\n  se = function se(t) {\n    var r = t.record,\n      n = t.latitude,\n      o = t.longitude,\n      a = t.address,\n      i = t.height;\n    t.addLabel;\n    var l = t.typographyProps,\n      c = D(t, ue),\n      u = [n(r), o(r)];\n    return u[0] && u[1] ? e.createElement(y, null, a && e.createElement(y, {\n      mt: 1,\n      mb: 1\n    }, e.createElement(d, l, a(r))), e.createElement(z, q({\n      style: {\n        height: i\n      },\n      center: u\n    }, c), e.createElement(ce, {\n      center: u\n    }), e.createElement(T, {\n      attribution: '© <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }), e.createElement(S, {\n      position: u\n    }))) : null;\n  };\nse.defaultProps = {\n  height: 400,\n  zoom: 11,\n  addLabel: !0\n};\nexport { $ as LocationInput, se as MapField, le as MapList, N as extractContext };","map":{"version":3,"sources":["../src/extractContext.js","../../../node_modules/autosuggest-highlight/match/index.js","../../../node_modules/autosuggest-highlight/parse/index.js","../src/LocationInput.js","../src/MapList/MarkerClusterGroup.js","../src/MapList/QueryStringUpdater.js","../src/MapList/MobileDrawer.js","../src/MapList/MapList.js","../src/MapList/DefaultPopupContent.js","../src/MapField/ChangeView.js","../src/MapField/MapField.js"],"names":["extractContext","context","key","property","find","id","startsWith","text","module","e","772","t","o","r","remove","i","n","u","exports","s","a","insideWords","findAllOccurrences","requireMatchAll","Object","keys","forEach","c","Array","from","map","l","join","trim","split","filter","length","reduce","test","RegExp","replace","A","exec","index","slice","push","sort","826","À","Á","Â","Ã","Ä","Å","Ấ","Ắ","Ẳ","Ẵ","Ặ","Æ","Ầ","Ằ","Ȃ","Ç","Ḉ","È","É","Ê","Ë","Ế","Ḗ","Ề","Ḕ","Ḝ","Ȇ","Ì","Í","Î","Ï","Ḯ","Ȋ","Ð","Ñ","Ò","Ó","Ô","Õ","Ö","Ø","Ố","Ṍ","Ṓ","Ȏ","Ù","Ú","Û","Ü","Ý","à","á","â","ã","ä","å","ấ","ắ","ẳ","ẵ","ặ","æ","ầ","ằ","ȃ","ç","ḉ","è","é","ê","ë","ế","ḗ","ề","ḕ","ḝ","ȇ","ì","í","î","ï","ḯ","ȋ","ð","ñ","ò","ó","ô","õ","ö","ø","ố","ṍ","ṓ","ȏ","ù","ú","û","ü","ý","ÿ","Ā","ā","Ă","ă","Ą","ą","Ć","ć","Ĉ","ĉ","Ċ","ċ","Č","č","C̆","c̆","Ď","ď","Đ","đ","Ē","ē","Ĕ","ĕ","Ė","ė","Ę","ę","Ě","ě","Ĝ","Ǵ","ĝ","ǵ","Ğ","ğ","Ġ","ġ","Ģ","ģ","Ĥ","ĥ","Ħ","ħ","Ḫ","ḫ","Ĩ","ĩ","Ī","ī","Ĭ","ĭ","Į","į","İ","ı","Ĳ","ĳ","Ĵ","ĵ","Ķ","ķ","Ḱ","ḱ","K̆","k̆","Ĺ","ĺ","Ļ","ļ","Ľ","ľ","Ŀ","ŀ","Ł","ł","Ḿ","ḿ","M̆","m̆","Ń","ń","Ņ","ņ","Ň","ň","ŉ","N̆","n̆","Ō","ō","Ŏ","ŏ","Ő","ő","Œ","œ","P̆","p̆","Ŕ","ŕ","Ŗ","ŗ","Ř","ř","R̆","r̆","Ȓ","ȓ","Ś","ś","Ŝ","ŝ","Ş","Ș","ș","ş","Š","š","Ţ","ţ","ț","Ț","Ť","ť","Ŧ","ŧ","T̆","t̆","Ũ","ũ","Ū","ū","Ŭ","ŭ","Ů","ů","Ű","ű","Ų","ų","Ȗ","ȗ","V̆","v̆","Ŵ","ŵ","Ẃ","ẃ","X̆","x̆","Ŷ","ŷ","Ÿ","Y̆","y̆","Ź","ź","Ż","ż","Ž","ž","ſ","ƒ","Ơ","ơ","Ư","ư","Ǎ","ǎ","Ǐ","ǐ","Ǒ","ǒ","Ǔ","ǔ","Ǖ","ǖ","Ǘ","ǘ","Ǚ","ǚ","Ǜ","ǜ","Ứ","ứ","Ṹ","ṹ","Ǻ","ǻ","Ǽ","ǽ","Ǿ","ǿ","Þ","þ","Ṕ","ṕ","Ṥ","ṥ","X́","x́","Ѓ","ѓ","Ќ","ќ","A̋","a̋","E̋","e̋","I̋","i̋","Ǹ","ǹ","Ồ","ồ","Ṑ","ṑ","Ừ","ừ","Ẁ","ẁ","Ỳ","ỳ","Ȁ","ȁ","Ȅ","ȅ","Ȉ","ȉ","Ȍ","ȍ","Ȑ","ȑ","Ȕ","ȕ","B̌","b̌","Č̣","č̣","Ê̌","ê̌","F̌","f̌","Ǧ","ǧ","Ȟ","ȟ","J̌","ǰ","Ǩ","ǩ","M̌","m̌","P̌","p̌","Q̌","q̌","Ř̩","ř̩","Ṧ","ṧ","V̌","v̌","W̌","w̌","X̌","x̌","Y̌","y̌","A̧","a̧","B̧","b̧","Ḑ","ḑ","Ȩ","ȩ","Ɛ̧","ɛ̧","Ḩ","ḩ","I̧","i̧","Ɨ̧","ɨ̧","M̧","m̧","O̧","o̧","Q̧","q̧","U̧","u̧","X̧","x̧","Z̧","z̧","has","match","705","h","highlight","useStyles","makeStyles","icon","color","theme","palette","secondary","marginRight","spacing","selectOptionText","option","optionText","place_name","LocationInput","mapboxConfig","record","resource","source","label","basePath","parse","helperText","rest","_ref","Error","access_token","classes","locale","useLocale","translate","useTranslate","_useState2","keyword","setKeyword","useState","_useState4","options","setOptions","_useInput","input","value","onChange","onBlur","onFocus","isRequired","meta","error","submitError","touched","useInput","_objectSpread","fetchMapbox","useMemo","throttle","callback","fetchUrl","URL","language","entries","_ref2","isArray","searchParams","set","fetch","toString","then","res","json","useEffect","results","features","React","Autocomplete","autoComplete","filterSelectedOptions","filterOptions","x","getOptionLabel","getOptionSelected","event","newValue","onInputChange","newKeyword","noOptionsText","renderInput","params","inputProps","TextField","FieldTitle","InputHelperText","renderOption","matches","highlightMatch","parts","highlightParse","Grid","container","alignItems","item","LocationOnIcon","className","xs","part","style","fontWeight","Typography","variant","defaultProps","margin","children","props","clusterProps","clusterEvents","propName","prop","instance","L","MarkerClusterGroup","eventAsProp","_ref4","clusterEvent","substring","toLowerCase","on","layerContainer","createPathComponent","QueryStringUpdater","history","useHistory","query","URLSearchParams","location","search","useMapEvents","moveend","target","getCenter","lat","lng","pathname","zoomend","getZoom","closeButton","position","zIndex","top","right","MobileDrawer","popupContent","onClose","useMap","setView","latitude","longitude","Drawer","anchor","open","Box","p","IconButton","onClick","createElement","loading","left","bottom","display","justifyContent","MapList","description","height","center","zoom","groupClusters","boundToMarkers","connectMarkers","otherProps","_useListContext","ids","data","useListContext","useMediaQuery","breakpoints","down","noSsr","drawerRecord","setDrawerRecord","useLocation","get","previousRecord","records","bounds","undefined","markers","marker","Fragment","Marker","eventHandlers","click","Polyline","positions","MapContainer","TileLayer","attribution","url","CircularProgress","size","thickness","showCoverageOnHover","scrollWheelZoom","resourceDefinition","useResourceDefinition","hasShow","ShowButton","hasEdit","EditButton","ChangeView","MapField","address","addLabel","typographyProps","mt","mb"],"mappings":"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;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,IAAA;UAAKC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,IAAA;UAAKC,GAAAA,EAAE,IAAA;UAAKC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,IAAA;UAAKC,GAAAA,EAAE,IAAA;UAAKC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,IAAA;UAAKC,GAAAA,EAAE,IAAA;UAAKC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,IAAA;UAAKC,GAAAA,EAAE,IAAA;UAAKC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,GAAAA,EAAE,GAAA;UAAIC,IAAAA,EAAG,GAAA;UAAIC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","sourcesContent":["const extractContext = (context, key) => {\n  const property = context.find(property => property.id.startsWith(key + '.'));\n  if (property) return property.text;\n};\n\nexport default extractContext;\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.AutosuggestHighlightMatch=t():e.AutosuggestHighlightMatch=t()}(this,(()=>{return e={772:(e,t,o)=>{const r=o(826).remove,i=/[.*+?^${}()|[\\]\\\\]/g,n=/[a-z0-9_]/i,u=/\\s+/;e.exports=function(e,t,o){var s,a;a={insideWords:!1,findAllOccurrences:!1,requireMatchAll:!1},s=(s=o)||{},Object.keys(s).forEach((e=>{a[e]=!!s[e]})),o=a;const c=Array.from(e).map((e=>r(e)));let l=c.join(\"\");return(t=r(t)).trim().split(u).filter((e=>e.length>0)).reduce(((e,t)=>{const r=t.length,u=!o.insideWords&&n.test(t[0])?\"\\\\b\":\"\",s=new RegExp(u+t.replace(i,\"\\\\$&\"),\"i\");let a,A;if(a=s.exec(l),o.requireMatchAll&&null===a)return l=\"\",[];for(;a;){A=a.index;const t=r-c.slice(A,A+r).join(\"\").length,i=A-c.slice(0,A).join(\"\").length,n=[A+i,A+r+i+t];if(n[0]!==n[1]&&e.push(n),l=l.slice(0,A)+new Array(r+1).join(\" \")+l.slice(A+r),!o.findAllOccurrences)break;a=s.exec(l)}return e}),[]).sort(((e,t)=>e[0]-t[0]))}},826:e=>{var t={À:\"A\",Á:\"A\",Â:\"A\",Ã:\"A\",Ä:\"A\",Å:\"A\",Ấ:\"A\",Ắ:\"A\",Ẳ:\"A\",Ẵ:\"A\",Ặ:\"A\",Æ:\"AE\",Ầ:\"A\",Ằ:\"A\",Ȃ:\"A\",Ç:\"C\",Ḉ:\"C\",È:\"E\",É:\"E\",Ê:\"E\",Ë:\"E\",Ế:\"E\",Ḗ:\"E\",Ề:\"E\",Ḕ:\"E\",Ḝ:\"E\",Ȇ:\"E\",Ì:\"I\",Í:\"I\",Î:\"I\",Ï:\"I\",Ḯ:\"I\",Ȋ:\"I\",Ð:\"D\",Ñ:\"N\",Ò:\"O\",Ó:\"O\",Ô:\"O\",Õ:\"O\",Ö:\"O\",Ø:\"O\",Ố:\"O\",Ṍ:\"O\",Ṓ:\"O\",Ȏ:\"O\",Ù:\"U\",Ú:\"U\",Û:\"U\",Ü:\"U\",Ý:\"Y\",à:\"a\",á:\"a\",â:\"a\",ã:\"a\",ä:\"a\",å:\"a\",ấ:\"a\",ắ:\"a\",ẳ:\"a\",ẵ:\"a\",ặ:\"a\",æ:\"ae\",ầ:\"a\",ằ:\"a\",ȃ:\"a\",ç:\"c\",ḉ:\"c\",è:\"e\",é:\"e\",ê:\"e\",ë:\"e\",ế:\"e\",ḗ:\"e\",ề:\"e\",ḕ:\"e\",ḝ:\"e\",ȇ:\"e\",ì:\"i\",í:\"i\",î:\"i\",ï:\"i\",ḯ:\"i\",ȋ:\"i\",ð:\"d\",ñ:\"n\",ò:\"o\",ó:\"o\",ô:\"o\",õ:\"o\",ö:\"o\",ø:\"o\",ố:\"o\",ṍ:\"o\",ṓ:\"o\",ȏ:\"o\",ù:\"u\",ú:\"u\",û:\"u\",ü:\"u\",ý:\"y\",ÿ:\"y\",Ā:\"A\",ā:\"a\",Ă:\"A\",ă:\"a\",Ą:\"A\",ą:\"a\",Ć:\"C\",ć:\"c\",Ĉ:\"C\",ĉ:\"c\",Ċ:\"C\",ċ:\"c\",Č:\"C\",č:\"c\",C̆:\"C\",c̆:\"c\",Ď:\"D\",ď:\"d\",Đ:\"D\",đ:\"d\",Ē:\"E\",ē:\"e\",Ĕ:\"E\",ĕ:\"e\",Ė:\"E\",ė:\"e\",Ę:\"E\",ę:\"e\",Ě:\"E\",ě:\"e\",Ĝ:\"G\",Ǵ:\"G\",ĝ:\"g\",ǵ:\"g\",Ğ:\"G\",ğ:\"g\",Ġ:\"G\",ġ:\"g\",Ģ:\"G\",ģ:\"g\",Ĥ:\"H\",ĥ:\"h\",Ħ:\"H\",ħ:\"h\",Ḫ:\"H\",ḫ:\"h\",Ĩ:\"I\",ĩ:\"i\",Ī:\"I\",ī:\"i\",Ĭ:\"I\",ĭ:\"i\",Į:\"I\",į:\"i\",İ:\"I\",ı:\"i\",Ĳ:\"IJ\",ĳ:\"ij\",Ĵ:\"J\",ĵ:\"j\",Ķ:\"K\",ķ:\"k\",Ḱ:\"K\",ḱ:\"k\",K̆:\"K\",k̆:\"k\",Ĺ:\"L\",ĺ:\"l\",Ļ:\"L\",ļ:\"l\",Ľ:\"L\",ľ:\"l\",Ŀ:\"L\",ŀ:\"l\",Ł:\"l\",ł:\"l\",Ḿ:\"M\",ḿ:\"m\",M̆:\"M\",m̆:\"m\",Ń:\"N\",ń:\"n\",Ņ:\"N\",ņ:\"n\",Ň:\"N\",ň:\"n\",ŉ:\"n\",N̆:\"N\",n̆:\"n\",Ō:\"O\",ō:\"o\",Ŏ:\"O\",ŏ:\"o\",Ő:\"O\",ő:\"o\",Œ:\"OE\",œ:\"oe\",P̆:\"P\",p̆:\"p\",Ŕ:\"R\",ŕ:\"r\",Ŗ:\"R\",ŗ:\"r\",Ř:\"R\",ř:\"r\",R̆:\"R\",r̆:\"r\",Ȓ:\"R\",ȓ:\"r\",Ś:\"S\",ś:\"s\",Ŝ:\"S\",ŝ:\"s\",Ş:\"S\",Ș:\"S\",ș:\"s\",ş:\"s\",Š:\"S\",š:\"s\",Ţ:\"T\",ţ:\"t\",ț:\"t\",Ț:\"T\",Ť:\"T\",ť:\"t\",Ŧ:\"T\",ŧ:\"t\",T̆:\"T\",t̆:\"t\",Ũ:\"U\",ũ:\"u\",Ū:\"U\",ū:\"u\",Ŭ:\"U\",ŭ:\"u\",Ů:\"U\",ů:\"u\",Ű:\"U\",ű:\"u\",Ų:\"U\",ų:\"u\",Ȗ:\"U\",ȗ:\"u\",V̆:\"V\",v̆:\"v\",Ŵ:\"W\",ŵ:\"w\",Ẃ:\"W\",ẃ:\"w\",X̆:\"X\",x̆:\"x\",Ŷ:\"Y\",ŷ:\"y\",Ÿ:\"Y\",Y̆:\"Y\",y̆:\"y\",Ź:\"Z\",ź:\"z\",Ż:\"Z\",ż:\"z\",Ž:\"Z\",ž:\"z\",ſ:\"s\",ƒ:\"f\",Ơ:\"O\",ơ:\"o\",Ư:\"U\",ư:\"u\",Ǎ:\"A\",ǎ:\"a\",Ǐ:\"I\",ǐ:\"i\",Ǒ:\"O\",ǒ:\"o\",Ǔ:\"U\",ǔ:\"u\",Ǖ:\"U\",ǖ:\"u\",Ǘ:\"U\",ǘ:\"u\",Ǚ:\"U\",ǚ:\"u\",Ǜ:\"U\",ǜ:\"u\",Ứ:\"U\",ứ:\"u\",Ṹ:\"U\",ṹ:\"u\",Ǻ:\"A\",ǻ:\"a\",Ǽ:\"AE\",ǽ:\"ae\",Ǿ:\"O\",ǿ:\"o\",Þ:\"TH\",þ:\"th\",Ṕ:\"P\",ṕ:\"p\",Ṥ:\"S\",ṥ:\"s\",X́:\"X\",x́:\"x\",Ѓ:\"Г\",ѓ:\"г\",Ќ:\"К\",ќ:\"к\",A̋:\"A\",a̋:\"a\",E̋:\"E\",e̋:\"e\",I̋:\"I\",i̋:\"i\",Ǹ:\"N\",ǹ:\"n\",Ồ:\"O\",ồ:\"o\",Ṑ:\"O\",ṑ:\"o\",Ừ:\"U\",ừ:\"u\",Ẁ:\"W\",ẁ:\"w\",Ỳ:\"Y\",ỳ:\"y\",Ȁ:\"A\",ȁ:\"a\",Ȅ:\"E\",ȅ:\"e\",Ȉ:\"I\",ȉ:\"i\",Ȍ:\"O\",ȍ:\"o\",Ȑ:\"R\",ȑ:\"r\",Ȕ:\"U\",ȕ:\"u\",B̌:\"B\",b̌:\"b\",Č̣:\"C\",č̣:\"c\",Ê̌:\"E\",ê̌:\"e\",F̌:\"F\",f̌:\"f\",Ǧ:\"G\",ǧ:\"g\",Ȟ:\"H\",ȟ:\"h\",J̌:\"J\",ǰ:\"j\",Ǩ:\"K\",ǩ:\"k\",M̌:\"M\",m̌:\"m\",P̌:\"P\",p̌:\"p\",Q̌:\"Q\",q̌:\"q\",Ř̩:\"R\",ř̩:\"r\",Ṧ:\"S\",ṧ:\"s\",V̌:\"V\",v̌:\"v\",W̌:\"W\",w̌:\"w\",X̌:\"X\",x̌:\"x\",Y̌:\"Y\",y̌:\"y\",A̧:\"A\",a̧:\"a\",B̧:\"B\",b̧:\"b\",Ḑ:\"D\",ḑ:\"d\",Ȩ:\"E\",ȩ:\"e\",Ɛ̧:\"E\",ɛ̧:\"e\",Ḩ:\"H\",ḩ:\"h\",I̧:\"I\",i̧:\"i\",Ɨ̧:\"I\",ɨ̧:\"i\",M̧:\"M\",m̧:\"m\",O̧:\"O\",o̧:\"o\",Q̧:\"Q\",q̧:\"q\",U̧:\"U\",u̧:\"u\",X̧:\"X\",x̧:\"x\",Z̧:\"Z\",z̧:\"z\"},o=Object.keys(t).join(\"|\"),r=new RegExp(o,\"g\"),i=new RegExp(o,\"\"),n=function(e){return e.replace(r,(function(e){return t[e]}))};e.exports=n,e.exports.has=function(e){return!!e.match(i)},e.exports.remove=n}},t={},function o(r){var i=t[r];if(void 0!==i)return i.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,o),n.exports}(772);var e,t}));","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.AutosuggestHighlightParse=e():t.AutosuggestHighlightParse=e()}(this,(()=>{return t={705:t=>{t.exports=function(t,e){const h=[];return 0===e.length?h.push({text:t,highlight:!1}):e[0][0]>0&&h.push({text:t.slice(0,e[0][0]),highlight:!1}),e.forEach(((i,o)=>{const s=i[0],r=i[1];h.push({text:t.slice(s,r),highlight:!0}),o===e.length-1?r<t.length&&h.push({text:t.slice(r,t.length),highlight:!1}):r<e[o+1][0]&&h.push({text:t.slice(r,e[o+1][0]),highlight:!1})})),h}}},e={},function h(i){var o=e[i];if(void 0!==o)return o.exports;var s=e[i]={exports:{}};return t[i](s,s.exports,h),s.exports}(705);var t,e}));","import React, { useState, useMemo, useEffect } from 'react';\nimport { FieldTitle, InputHelperText, useInput, useTranslate, useLocale } from 'react-admin';\nimport { TextField, Typography, Grid, makeStyles } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { default as highlightMatch } from 'autosuggest-highlight/match';\nimport { default as highlightParse } from 'autosuggest-highlight/parse';\nimport throttle from 'lodash.throttle';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst selectOptionText = (option, optionText) => {\n  if (option.place_name) {\n    return option.place_name;\n  } else if (typeof optionText === 'string') {\n    return option[optionText];\n  } else if (typeof optionText === 'function') {\n    return optionText(option);\n  }\n};\n\nconst LocationInput = ({\n  mapboxConfig,\n  record,\n  resource,\n  source,\n  label,\n  basePath,\n  parse,\n  optionText,\n  helperText,\n  ...rest\n}) => {\n  if (!mapboxConfig) {\n    throw new Error('@semapps/geo-components : No mapbox configuration');\n  }\n  if (!mapboxConfig.access_token) {\n    throw new Error('@semapps/geo-components : No access token in mapbox configuration');\n  }\n\n  const classes = useStyles();\n  const locale = useLocale();\n  const translate = useTranslate();\n\n  const [keyword, setKeyword] = useState(''); // Typed keywords\n  const [options, setOptions] = useState([]); // Options returned by MapBox\n\n  // Do not pass the `parse` prop to useInput, as we manually call it on the onChange prop below\n  const {\n    input: { value, onChange, onBlur, onFocus },\n    isRequired,\n    meta: { error, submitError, touched }\n  } = useInput({ resource, source, ...rest });\n\n  const fetchMapbox = useMemo(\n    () =>\n      throttle((keyword, callback) => {\n        const fetchUrl = new URL(`https://api.mapbox.com/geocoding/v5/mapbox.places/${keyword}.json`);\n\n        // Use locale as default language\n        if (!mapboxConfig.language) mapboxConfig.language = locale;\n\n        // All options available at https://docs.mapbox.com/api/search/geocoding/#forward-geocoding\n        Object.entries(mapboxConfig).forEach(([key, value]) => {\n          if (Array.isArray(value)) {\n            value = value.join(',');\n          } else if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          }\n          fetchUrl.searchParams.set(key, value);\n        });\n\n        fetch(fetchUrl.toString())\n          .then(res => res.json())\n          .then(json => callback(json));\n      }, 200),\n    [mapboxConfig, locale]\n  );\n\n  useEffect(() => {\n    // Do not trigger search if text input is empty or if it is the same as the current value\n    if (!keyword || keyword === selectOptionText(value, optionText)) {\n      return undefined;\n    } else {\n      fetchMapbox(keyword, results => setOptions(results.features));\n    }\n  }, [value, keyword, fetchMapbox]);\n\n  return (\n    <Autocomplete\n      autoComplete\n      value={value || null}\n      // We must include the current value as an option, to avoid this error\n      // https://github.com/mui-org/material-ui/issues/18514#issuecomment-636096386\n      options={value ? [value, ...options] : options}\n      // Do not show the current value as an option (this would break renderOptions)\n      filterSelectedOptions\n      // For some reasons, this prop has to be passed\n      filterOptions={x => x}\n      getOptionLabel={option => selectOptionText(option, optionText)}\n      getOptionSelected={(option, value) =>\n        selectOptionText(option, optionText) === selectOptionText(value, optionText)\n      }\n      // This function is called when the user selects an option\n      onChange={(event, newValue) => {\n        // Parse only if the value is not null (happens if the user clears the value)\n        if (newValue && parse) newValue = parse(newValue);\n        onChange(newValue);\n        setOptions([]);\n      }}\n      onInputChange={(event, newKeyword) => setKeyword(newKeyword)}\n      noOptionsText={translate('ra.navigation.no_results')}\n      renderInput={params => {\n        // Autocomplete=off doesn't work anymore in modern browsers\n        // https://stackoverflow.com/a/40791726/7900695\n        params.inputProps.autoComplete = 'new-password';\n        return (\n          <TextField\n            {...params}\n            inputProps={{\n              ...params.inputProps,\n              onBlur: e => {\n                onBlur(e);\n                if (params.inputProps.onBlur) {\n                  params.inputProps.onBlur(e);\n                }\n              },\n              onFocus: e => {\n                onFocus(e);\n                if (params.inputProps.onFocus) {\n                  params.inputProps.onFocus(e);\n                }\n              }\n            }}\n            label={\n              label !== '' &&\n              label !== false && (\n                <FieldTitle label={label} source={source} resource={resource} isRequired={isRequired} />\n              )\n            }\n            error={!!(touched && (error || submitError))}\n            helperText={<InputHelperText touched={touched} error={error || submitError} helperText={helperText} />}\n            {...rest}\n          />\n        );\n      }}\n      renderOption={option => {\n        const matches = highlightMatch(option.text, keyword);\n        const parts = highlightParse(option.text, matches);\n\n        return (\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <LocationOnIcon className={classes.icon} />\n            </Grid>\n            <Grid item xs>\n              {typeof parts === 'string'\n                ? parts\n                : parts.map((part, index) => (\n                    <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                      {part.text}\n                    </span>\n                  ))}\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {option.place_name}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n      }}\n    />\n  );\n};\n\nLocationInput.defaultProps = {\n  variant: 'filled',\n  margin: 'dense'\n};\n\nexport default LocationInput;\n","import L from 'leaflet'\nimport { createPathComponent } from '@react-leaflet/core'\nimport 'leaflet.markercluster';\n\n// Taken from https://github.com/changey/react-leaflet-markercluster/blob/60992857087c181ada1e8e6659a6666a13c1f868/src/react-leaflet-markercluster.js\nfunction createMarkerCluster({ children: _c, ...props }, context) {\n  const clusterProps = {}\n  const clusterEvents = {}\n  // Splitting props and events to different objects\n  Object.entries(props).forEach(([propName, prop]) =>\n    propName.startsWith('on')\n      ? (clusterEvents[propName] = prop)\n      : (clusterProps[propName] = prop)\n  )\n\n  const instance = new L.MarkerClusterGroup(clusterProps)\n\n  // Initializing event listeners\n  Object.entries(clusterEvents).forEach(([eventAsProp, callback]) => {\n    const clusterEvent = `cluster${eventAsProp.substring(2).toLowerCase()}`\n    instance.on(clusterEvent, callback)\n  })\n  return {\n    instance,\n    context: {\n      ...context,\n      layerContainer: instance,\n    },\n  }\n}\n\nconst MarkerClusterGroup = createPathComponent(createMarkerCluster)\n\nexport default MarkerClusterGroup;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { useMapEvents } from 'react-leaflet';\n\n// Keep the zoom and center in query string, so that when we navigate back to the page, it stays focused on the same area\nconst QueryStringUpdater = () => {\n  const history = useHistory();\n  const query = new URLSearchParams(history.location.search);\n\n  useMapEvents({\n    moveend: test => {\n      query.set('lat', test.target.getCenter().lat);\n      query.set('lng', test.target.getCenter().lng);\n      history.replace({ pathname: history.location.pathname, search: '?' + query.toString() });\n    },\n    zoomend: test => {\n      query.set('zoom', test.target.getZoom());\n      history.replace({ pathname: history.location.pathname, search: '?' + query.toString() });\n    }\n  });\n  return null;\n};\n\nexport default QueryStringUpdater;\n","import React, { useEffect } from 'react';\nimport { useMap } from \"react-leaflet\";\nimport { Drawer, Box, IconButton, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(() => ({\n  closeButton: {\n    position: 'absolute',\n    zIndex: 1400,\n    top: 0,\n    right: 0\n  }\n}));\n\nconst MobileDrawer = ({ record, basePath, popupContent, onClose }) => {\n  const classes = useStyles();\n  const map = useMap();\n  useEffect(() => {\n    if (record) {\n      map.setView([record.latitude, record.longitude]);\n    }\n  }, [record, map])\n\n  return(\n    <Drawer anchor=\"bottom\" open={!!record} onClose={onClose}>\n      <Box p={1} position=\"relative\">\n        <IconButton onClick={onClose} className={classes.closeButton}>\n          <CloseIcon />\n        </IconButton>\n        {record && React.createElement(popupContent, { record, basePath })}\n      </Box>\n    </Drawer>\n  )\n};\n\nexport default MobileDrawer;\n","import React, { useState } from 'react';\nimport { useListContext } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport { useMediaQuery, Box, makeStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport 'leaflet-defaulticon-compatibility';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport MarkerClusterGroup from './MarkerClusterGroup';\nimport DefaultPopupContent from './DefaultPopupContent';\nimport QueryStringUpdater from './QueryStringUpdater';\nimport MobileDrawer from \"./MobileDrawer\";\n\nconst useStyles = makeStyles(() => ({\n  loading: {\n    zIndex: 1000,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}));\n\nconst MapList = ({\n  latitude,\n  longitude,\n  label,\n  description,\n  popupContent,\n  height,\n  center,\n  zoom,\n  groupClusters,\n  boundToMarkers,\n  connectMarkers,\n  ...otherProps\n}) => {\n  const { ids, data, basePath, loading } = useListContext();\n  const xs = useMediaQuery(theme => theme.breakpoints.down('xs'), { noSsr: true });\n  const [drawerRecord, setDrawerRecord] = useState(null);\n  const classes = useStyles();\n\n  // Get the zoom and center from query string, if available\n  const query = new URLSearchParams(useLocation().search);\n  center = query.has('lat') && query.has('lng') ? [query.get('lat'), query.get('lng')] : center;\n  zoom = query.has('zoom') ? query.get('zoom') : zoom;\n\n  let previousRecord;\n\n  const records = ids\n    .filter(id => data[id])\n    .map(id => ({\n      ...data[id],\n      latitude: latitude && latitude(data[id]),\n      longitude: longitude && longitude(data[id]),\n      label: label && label(data[id]),\n      description: description && description(data[id])\n    }))\n    .filter(record => record.latitude && record.longitude);\n\n  const bounds =\n    boundToMarkers && records.length > 0 ? records.map(record => [record.latitude, record.longitude]) : undefined;\n\n  // Do not display anything if the bounds are not ready, otherwise the MapContainer will not be initialized correctly\n  if (boundToMarkers && !bounds) return null;\n\n  const markers = records.map((record, i) => {\n    const marker = (\n      <React.Fragment key={i}>\n        <Marker\n          position={[record.latitude, record.longitude]}\n          eventHandlers={\n            xs\n              ? {\n                  click: () => setDrawerRecord(record)\n                }\n              : undefined\n          }\n        >\n          {!xs && <Popup>{React.createElement(popupContent, { record, basePath })}</Popup>}\n        </Marker>\n        {connectMarkers && previousRecord && (\n          <Polyline\n            positions={[\n              [previousRecord.latitude, previousRecord.longitude],\n              [record.latitude, record.longitude]\n            ]}\n          />\n        )}\n      </React.Fragment>\n    );\n\n    // Save record so that we can trace lines\n    previousRecord = record;\n\n    return marker;\n  });\n\n  return (\n    <MapContainer\n      style={{ height }}\n      center={!boundToMarkers ? center : undefined}\n      zoom={!boundToMarkers ? zoom : undefined}\n      bounds={bounds}\n      {...otherProps}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {loading && (\n        <Box alignItems=\"center\" className={classes.loading}>\n          <CircularProgress size={60} thickness={6} />\n        </Box>\n      )}\n      {groupClusters ? <MarkerClusterGroup showCoverageOnHover={false}>{markers}</MarkerClusterGroup> : markers}\n      <QueryStringUpdater />\n      <MobileDrawer\n        record={drawerRecord}\n        basePath={basePath}\n        popupContent={popupContent}\n        onClose={() => setDrawerRecord(null)}\n      />\n    </MapContainer>\n  );\n};\n\nMapList.defaultProps = {\n  height: 700,\n  center: [47, 2.213749],\n  zoom: 6,\n  groupClusters: true,\n  connectMarkers: false,\n  scrollWheelZoom: false,\n  popupContent: DefaultPopupContent\n};\n\nexport default MapList;\n","import React from 'react';\nimport { ShowButton, EditButton, useResourceDefinition } from 'react-admin';\nimport { Typography } from '@material-ui/core';\n\nconst DefaultPopupContent = ({ record, basePath }) => {\n  const resourceDefinition = useResourceDefinition({});\n  return (\n    <>\n      {record.label && <Typography variant=\"h5\">{record.label}</Typography>}\n      {record.description && (\n        <Typography>\n          {record.description.length > 150 ? record.description.substring(0, 150) + '...' : record.description}\n        </Typography>\n      )}\n      {resourceDefinition.hasShow && <ShowButton basePath={basePath} record={record} />}\n      {resourceDefinition.hasEdit && <EditButton basePath={basePath} record={record} />}\n    </>\n  );\n};\n\nexport default DefaultPopupContent;\n","import React from 'react';\nimport { useMap } from 'react-leaflet';\n\nconst ChangeView = ({ center, zoom }) => {\n  const map = useMap();\n  map.setView(center, zoom);\n  return null;\n};\n\nexport default ChangeView;\n","import React from 'react';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { Box, Typography } from '@material-ui/core';\nimport ChangeView from './ChangeView';\n\nconst MapField = ({ record, latitude, longitude, address, height, addLabel, typographyProps, ...rest }) => {\n  // Do not display the component if it has no latitude or longitude\n  const position = [latitude(record), longitude(record)];\n  if (!position[0] || !position[1]) return null;\n\n  return (\n    <Box>\n      {address && (\n        <Box mt={1} mb={1}>\n          <Typography {...typographyProps}>{address(record)}</Typography>\n        </Box>\n      )}\n      <MapContainer style={{ height }} center={position} {...rest}>\n        <ChangeView center={position} />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={position} />\n      </MapContainer>\n    </Box>\n  );\n};\n\nMapField.defaultProps = {\n  height: 400,\n  zoom: 11,\n  addLabel: true\n};\n\nexport default MapField;\n"]},"metadata":{},"sourceType":"module"}